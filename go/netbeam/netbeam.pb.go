// Code generated by protoc-gen-go. DO NOT EDIT.
// source: netbeam.proto

package netbeam

import (
	context "context"
	fmt "fmt"
	pond "github.com/esnet/proto/go/pond"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Rule_Type int32

const (
	Rule_BYTES   Rule_Type = 0
	Rule_COUNTER Rule_Type = 1
	Rule_GAUGE   Rule_Type = 2
	Rule_STRING  Rule_Type = 3
)

var Rule_Type_name = map[int32]string{
	0: "BYTES",
	1: "COUNTER",
	2: "GAUGE",
	3: "STRING",
}

var Rule_Type_value = map[string]int32{
	"BYTES":   0,
	"COUNTER": 1,
	"GAUGE":   2,
	"STRING":  3,
}

func (x Rule_Type) String() string {
	return proto.EnumName(Rule_Type_name, int32(x))
}

func (Rule_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{11, 0}
}

type Processor_Type int32

const (
	Processor_ROLLUP  Processor_Type = 0
	Processor_RATE    Processor_Type = 1
	Processor_CONVERT Processor_Type = 2
)

var Processor_Type_name = map[int32]string{
	0: "ROLLUP",
	1: "RATE",
	2: "CONVERT",
}

var Processor_Type_value = map[string]int32{
	"ROLLUP":  0,
	"RATE":    1,
	"CONVERT": 2,
}

func (x Processor_Type) String() string {
	return proto.EnumName(Processor_Type_name, int32(x))
}

func (Processor_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{15, 0}
}

type RollupProcessorArgs_AggregationFunction int32

const (
	RollupProcessorArgs_SUM RollupProcessorArgs_AggregationFunction = 0
	RollupProcessorArgs_AVG RollupProcessorArgs_AggregationFunction = 1
	RollupProcessorArgs_MAX RollupProcessorArgs_AggregationFunction = 2
)

var RollupProcessorArgs_AggregationFunction_name = map[int32]string{
	0: "SUM",
	1: "AVG",
	2: "MAX",
}

var RollupProcessorArgs_AggregationFunction_value = map[string]int32{
	"SUM": 0,
	"AVG": 1,
	"MAX": 2,
}

func (x RollupProcessorArgs_AggregationFunction) String() string {
	return proto.EnumName(RollupProcessorArgs_AggregationFunction_name, int32(x))
}

func (RollupProcessorArgs_AggregationFunction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{18, 0}
}

type Output_Type int32

const (
	Output_TILE    Output_Type = 0
	Output_CURRENT Output_Type = 1
	Output_TAG     Output_Type = 2
)

var Output_Type_name = map[int32]string{
	0: "TILE",
	1: "CURRENT",
	2: "TAG",
}

var Output_Type_value = map[string]int32{
	"TILE":    0,
	"CURRENT": 1,
	"TAG":     2,
}

func (x Output_Type) String() string {
	return proto.EnumName(Output_Type_name, int32(x))
}

func (Output_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{19, 0}
}

type CreateRuleRequest_Type int32

const (
	CreateRuleRequest_BYTES   CreateRuleRequest_Type = 0
	CreateRuleRequest_COUNTER CreateRuleRequest_Type = 1
	CreateRuleRequest_GAUGE   CreateRuleRequest_Type = 2
	CreateRuleRequest_STRING  CreateRuleRequest_Type = 3
)

var CreateRuleRequest_Type_name = map[int32]string{
	0: "BYTES",
	1: "COUNTER",
	2: "GAUGE",
	3: "STRING",
}

var CreateRuleRequest_Type_value = map[string]int32{
	"BYTES":   0,
	"COUNTER": 1,
	"GAUGE":   2,
	"STRING":  3,
}

func (x CreateRuleRequest_Type) String() string {
	return proto.EnumName(CreateRuleRequest_Type_name, int32(x))
}

func (CreateRuleRequest_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{37, 0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// The namespace, which is made up of the organization and the collection e.g. { organization: "esnet", collection: "prod"}
type Namespace struct {
	// The organization this request is associated with e.g. "esnet"
	Organization string `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	// The collection within the organization's data the request is for. e.g. "prod"
	Collection           string   `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Namespace) Reset()         { *m = Namespace{} }
func (m *Namespace) String() string { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()    {}
func (*Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{1}
}

func (m *Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespace.Unmarshal(m, b)
}
func (m *Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespace.Marshal(b, m, deterministic)
}
func (m *Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespace.Merge(m, src)
}
func (m *Namespace) XXX_Size() int {
	return xxx_messageInfo_Namespace.Size(m)
}
func (m *Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_Namespace proto.InternalMessageInfo

func (m *Namespace) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Namespace) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

// The full resource path e.g. ["devices", "chic-cr5", "interfaces", "1/1/1"]
type Resource struct {
	Path                 []string `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{2}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetPath() []string {
	if m != nil {
		return m.Path
	}
	return nil
}

type Organization struct {
	// The database ID of the organization
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The short name of the organization
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// A longer more descriptive name for the organization
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Organization) Reset()         { *m = Organization{} }
func (m *Organization) String() string { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()    {}
func (*Organization) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{3}
}

func (m *Organization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Organization.Unmarshal(m, b)
}
func (m *Organization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Organization.Marshal(b, m, deterministic)
}
func (m *Organization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Organization.Merge(m, src)
}
func (m *Organization) XXX_Size() int {
	return xxx_messageInfo_Organization.Size(m)
}
func (m *Organization) XXX_DiscardUnknown() {
	xxx_messageInfo_Organization.DiscardUnknown(m)
}

var xxx_messageInfo_Organization proto.InternalMessageInfo

func (m *Organization) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Organization) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Organization) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type OrganizationList struct {
	// The list of organizations
	Organizations        []*Organization `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrganizationList) Reset()         { *m = OrganizationList{} }
func (m *OrganizationList) String() string { return proto.CompactTextString(m) }
func (*OrganizationList) ProtoMessage()    {}
func (*OrganizationList) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{4}
}

func (m *OrganizationList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationList.Unmarshal(m, b)
}
func (m *OrganizationList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationList.Marshal(b, m, deterministic)
}
func (m *OrganizationList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationList.Merge(m, src)
}
func (m *OrganizationList) XXX_Size() int {
	return xxx_messageInfo_OrganizationList.Size(m)
}
func (m *OrganizationList) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationList.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationList proto.InternalMessageInfo

func (m *OrganizationList) GetOrganizations() []*Organization {
	if m != nil {
		return m.Organizations
	}
	return nil
}

type Collection struct {
	// The database ID of the Collection
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The namespace of anything within this Collection, contains both the Organization name
	// and the Collection name e.g. {organization: "esnet", collection: "prod"}
	Namespace *Namespace `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// A longer more human readable name or description for the Collection
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Collection) Reset()         { *m = Collection{} }
func (m *Collection) String() string { return proto.CompactTextString(m) }
func (*Collection) ProtoMessage()    {}
func (*Collection) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{5}
}

func (m *Collection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Collection.Unmarshal(m, b)
}
func (m *Collection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Collection.Marshal(b, m, deterministic)
}
func (m *Collection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Collection.Merge(m, src)
}
func (m *Collection) XXX_Size() int {
	return xxx_messageInfo_Collection.Size(m)
}
func (m *Collection) XXX_DiscardUnknown() {
	xxx_messageInfo_Collection.DiscardUnknown(m)
}

var xxx_messageInfo_Collection proto.InternalMessageInfo

func (m *Collection) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Collection) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Collection) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type CollectionList struct {
	// A list of Collections
	Collections          []*Collection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CollectionList) Reset()         { *m = CollectionList{} }
func (m *CollectionList) String() string { return proto.CompactTextString(m) }
func (*CollectionList) ProtoMessage()    {}
func (*CollectionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{6}
}

func (m *CollectionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionList.Unmarshal(m, b)
}
func (m *CollectionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionList.Marshal(b, m, deterministic)
}
func (m *CollectionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionList.Merge(m, src)
}
func (m *CollectionList) XXX_Size() int {
	return xxx_messageInfo_CollectionList.Size(m)
}
func (m *CollectionList) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionList.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionList proto.InternalMessageInfo

func (m *CollectionList) GetCollections() []*Collection {
	if m != nil {
		return m.Collections
	}
	return nil
}

type ResourceGroup struct {
	// The database ID of the resource group
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The short name of the resource group
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// A longer descriptive name of the resource group
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceGroup) Reset()         { *m = ResourceGroup{} }
func (m *ResourceGroup) String() string { return proto.CompactTextString(m) }
func (*ResourceGroup) ProtoMessage()    {}
func (*ResourceGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{7}
}

func (m *ResourceGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceGroup.Unmarshal(m, b)
}
func (m *ResourceGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceGroup.Marshal(b, m, deterministic)
}
func (m *ResourceGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceGroup.Merge(m, src)
}
func (m *ResourceGroup) XXX_Size() int {
	return xxx_messageInfo_ResourceGroup.Size(m)
}
func (m *ResourceGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceGroup proto.InternalMessageInfo

func (m *ResourceGroup) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResourceGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResourceGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ResourceGroupList struct {
	// A list of ResourceGroups
	ResourceGroups       []*ResourceGroup `protobuf:"bytes,1,rep,name=resourceGroups,proto3" json:"resourceGroups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ResourceGroupList) Reset()         { *m = ResourceGroupList{} }
func (m *ResourceGroupList) String() string { return proto.CompactTextString(m) }
func (*ResourceGroupList) ProtoMessage()    {}
func (*ResourceGroupList) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{8}
}

func (m *ResourceGroupList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceGroupList.Unmarshal(m, b)
}
func (m *ResourceGroupList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceGroupList.Marshal(b, m, deterministic)
}
func (m *ResourceGroupList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceGroupList.Merge(m, src)
}
func (m *ResourceGroupList) XXX_Size() int {
	return xxx_messageInfo_ResourceGroupList.Size(m)
}
func (m *ResourceGroupList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceGroupList.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceGroupList proto.InternalMessageInfo

func (m *ResourceGroupList) GetResourceGroups() []*ResourceGroup {
	if m != nil {
		return m.ResourceGroups
	}
	return nil
}

type Source struct {
	// The database ID of the Source
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The namespace that contains the Source e.g. {organization: "esnet", collection: "prod"}
	Namespace *Namespace `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The index of the Source, which is how the Source is referred to within ingest Events
	Index int32 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	// Priority, which determines which Events will be used if the same Event comes from multiple sources
	Priority int32 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	// Description of the Source and what it represents
	Description          string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{9}
}

func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (m *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(m, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Source) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Source) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Source) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Source) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type SourceList struct {
	// The list of Sources
	Sources              []*Source `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SourceList) Reset()         { *m = SourceList{} }
func (m *SourceList) String() string { return proto.CompactTextString(m) }
func (*SourceList) ProtoMessage()    {}
func (*SourceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{10}
}

func (m *SourceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceList.Unmarshal(m, b)
}
func (m *SourceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceList.Marshal(b, m, deterministic)
}
func (m *SourceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceList.Merge(m, src)
}
func (m *SourceList) XXX_Size() int {
	return xxx_messageInfo_SourceList.Size(m)
}
func (m *SourceList) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceList.DiscardUnknown(m)
}

var xxx_messageInfo_SourceList proto.InternalMessageInfo

func (m *SourceList) GetSources() []*Source {
	if m != nil {
		return m.Sources
	}
	return nil
}

// An ingest rule that describes at a high level how some particular metric will be processed.
// This consists of three parts: A matcher (based on the namespace of the event and the scope
// that matches the resource), a Type (which corresponds to different netbeam handling of the event),
// and finally parameters which further control the way that metric is processed (alignment of
// the data, naming and units).
type Rule struct {
	// The ID of the Metric
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The namespace to register the rule within
	Namespace *Namespace `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The type of the metric: bytes, counter, gauge or string
	Type Rule_Type `protobuf:"varint,3,opt,name=type,proto3,enum=netbeam.Rule_Type" json:"type,omitempty"`
	// The scope wildcard which determines which Resources the Metric will apply to
	Scope string `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	// The base name of the metric e.g. "traffic"
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// The suffic of the metric e.g. "in" or "out"
	Suffix string `protobuf:"bytes,6,opt,name=suffix,proto3" json:"suffix,omitempty"`
	// The suffix for the output tiles if those are generated by the Rule type. For example when
	// writing SAPs, both in_inProfile and in_outProfile are written to the tag suffix "in"
	TagSuffix string `protobuf:"bytes,7,opt,name=tag_suffix,json=tagSuffix,proto3" json:"tag_suffix,omitempty"`
	// The alignment of the data to periodic boundaries
	Align string `protobuf:"bytes,8,opt,name=align,proto3" json:"align,omitempty"`
	// The  units of the output data if applicable. Applies to gauges and counters. Counters with units of
	// bytes is assumed to output bits per second rates. This is a special case. String types are unitless.
	// A gauge of say kb of memory will output kb as its units. A counter of units "errors" will output a
	// rate of errors as "errors/sec".
	Units                string   `protobuf:"bytes,9,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{11}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Rule) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Rule) GetType() Rule_Type {
	if m != nil {
		return m.Type
	}
	return Rule_BYTES
}

func (m *Rule) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *Rule) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Rule) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

func (m *Rule) GetTagSuffix() string {
	if m != nil {
		return m.TagSuffix
	}
	return ""
}

func (m *Rule) GetAlign() string {
	if m != nil {
		return m.Align
	}
	return ""
}

func (m *Rule) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

type RuleList struct {
	// The list of rules
	Rules                []*Rule  `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuleList) Reset()         { *m = RuleList{} }
func (m *RuleList) String() string { return proto.CompactTextString(m) }
func (*RuleList) ProtoMessage()    {}
func (*RuleList) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{12}
}

func (m *RuleList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleList.Unmarshal(m, b)
}
func (m *RuleList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleList.Marshal(b, m, deterministic)
}
func (m *RuleList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleList.Merge(m, src)
}
func (m *RuleList) XXX_Size() int {
	return xxx_messageInfo_RuleList.Size(m)
}
func (m *RuleList) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleList.DiscardUnknown(m)
}

var xxx_messageInfo_RuleList proto.InternalMessageInfo

func (m *RuleList) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type Matchers struct {
	// The namespace the list of Matchers applies to e.g. esnet/prod
	Namespace *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// A list of matchers within that namespace
	Matchers             []*Matcher `protobuf:"bytes,2,rep,name=matchers,proto3" json:"matchers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Matchers) Reset()         { *m = Matchers{} }
func (m *Matchers) String() string { return proto.CompactTextString(m) }
func (*Matchers) ProtoMessage()    {}
func (*Matchers) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{13}
}

func (m *Matchers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Matchers.Unmarshal(m, b)
}
func (m *Matchers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Matchers.Marshal(b, m, deterministic)
}
func (m *Matchers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Matchers.Merge(m, src)
}
func (m *Matchers) XXX_Size() int {
	return xxx_messageInfo_Matchers.Size(m)
}
func (m *Matchers) XXX_DiscardUnknown() {
	xxx_messageInfo_Matchers.DiscardUnknown(m)
}

var xxx_messageInfo_Matchers proto.InternalMessageInfo

func (m *Matchers) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Matchers) GetMatchers() []*Matcher {
	if m != nil {
		return m.Matchers
	}
	return nil
}

type Matcher struct {
	// The name of the matcher
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The matcher's wildcards against the incoming resource. If any of the wildcards
	// matches against the resources the rule will be active.
	Scope []string `protobuf:"bytes,2,rep,name=scope,proto3" json:"scope,omitempty"`
	// A human readable description as to what this matcher represents
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Units of the metrics that this matcher applies to
	Units string `protobuf:"bytes,4,opt,name=units,proto3" json:"units,omitempty"`
	// Alignment of this data, for example "30s" would align this data to every 30 seconds (4:30, 5:00, 5:30 ...)
	Align string `protobuf:"bytes,5,opt,name=align,proto3" json:"align,omitempty"`
	// A list of processors to run as a result of this match on the incoming metric event. A processor will
	// transform this Event into another Event (with a different metric name) that may match other Matchers.
	Processors []*Processor `protobuf:"bytes,6,rep,name=processors,proto3" json:"processors,omitempty"`
	// A list of Outputs which will write or otherwise emit the data, for example to a specific table.
	Outputs              []*Output `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Matcher) Reset()         { *m = Matcher{} }
func (m *Matcher) String() string { return proto.CompactTextString(m) }
func (*Matcher) ProtoMessage()    {}
func (*Matcher) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{14}
}

func (m *Matcher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Matcher.Unmarshal(m, b)
}
func (m *Matcher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Matcher.Marshal(b, m, deterministic)
}
func (m *Matcher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Matcher.Merge(m, src)
}
func (m *Matcher) XXX_Size() int {
	return xxx_messageInfo_Matcher.Size(m)
}
func (m *Matcher) XXX_DiscardUnknown() {
	xxx_messageInfo_Matcher.DiscardUnknown(m)
}

var xxx_messageInfo_Matcher proto.InternalMessageInfo

func (m *Matcher) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Matcher) GetScope() []string {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *Matcher) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Matcher) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

func (m *Matcher) GetAlign() string {
	if m != nil {
		return m.Align
	}
	return ""
}

func (m *Matcher) GetProcessors() []*Processor {
	if m != nil {
		return m.Processors
	}
	return nil
}

func (m *Matcher) GetOutputs() []*Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type Processor struct {
	// The type of the processor: rate or convert
	Type Processor_Type `protobuf:"varint,1,opt,name=type,proto3,enum=netbeam.Processor_Type" json:"type,omitempty"`
	// The target metric name and a path of string e.g. ["traffic", "bytes", direction]
	Target []string `protobuf:"bytes,2,rep,name=target,proto3" json:"target,omitempty"`
	// The processor args
	//
	// Types that are valid to be assigned to Args:
	//	*Processor_ConvertArgs
	//	*Processor_RateArgs
	//	*Processor_RollupArgs
	Args                 isProcessor_Args `protobuf_oneof:"args"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Processor) Reset()         { *m = Processor{} }
func (m *Processor) String() string { return proto.CompactTextString(m) }
func (*Processor) ProtoMessage()    {}
func (*Processor) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{15}
}

func (m *Processor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Processor.Unmarshal(m, b)
}
func (m *Processor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Processor.Marshal(b, m, deterministic)
}
func (m *Processor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Processor.Merge(m, src)
}
func (m *Processor) XXX_Size() int {
	return xxx_messageInfo_Processor.Size(m)
}
func (m *Processor) XXX_DiscardUnknown() {
	xxx_messageInfo_Processor.DiscardUnknown(m)
}

var xxx_messageInfo_Processor proto.InternalMessageInfo

func (m *Processor) GetType() Processor_Type {
	if m != nil {
		return m.Type
	}
	return Processor_ROLLUP
}

func (m *Processor) GetTarget() []string {
	if m != nil {
		return m.Target
	}
	return nil
}

type isProcessor_Args interface {
	isProcessor_Args()
}

type Processor_ConvertArgs struct {
	ConvertArgs *ConvertProcessorArgs `protobuf:"bytes,3,opt,name=convert_args,json=convertArgs,proto3,oneof"`
}

type Processor_RateArgs struct {
	RateArgs *RateProcessorArgs `protobuf:"bytes,4,opt,name=rate_args,json=rateArgs,proto3,oneof"`
}

type Processor_RollupArgs struct {
	RollupArgs *RollupProcessorArgs `protobuf:"bytes,5,opt,name=rollup_args,json=rollupArgs,proto3,oneof"`
}

func (*Processor_ConvertArgs) isProcessor_Args() {}

func (*Processor_RateArgs) isProcessor_Args() {}

func (*Processor_RollupArgs) isProcessor_Args() {}

func (m *Processor) GetArgs() isProcessor_Args {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Processor) GetConvertArgs() *ConvertProcessorArgs {
	if x, ok := m.GetArgs().(*Processor_ConvertArgs); ok {
		return x.ConvertArgs
	}
	return nil
}

func (m *Processor) GetRateArgs() *RateProcessorArgs {
	if x, ok := m.GetArgs().(*Processor_RateArgs); ok {
		return x.RateArgs
	}
	return nil
}

func (m *Processor) GetRollupArgs() *RollupProcessorArgs {
	if x, ok := m.GetArgs().(*Processor_RollupArgs); ok {
		return x.RollupArgs
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Processor) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Processor_ConvertArgs)(nil),
		(*Processor_RateArgs)(nil),
		(*Processor_RollupArgs)(nil),
	}
}

type ConvertProcessorArgs struct {
	Factor               float64  `protobuf:"fixed64,1,opt,name=factor,proto3" json:"factor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConvertProcessorArgs) Reset()         { *m = ConvertProcessorArgs{} }
func (m *ConvertProcessorArgs) String() string { return proto.CompactTextString(m) }
func (*ConvertProcessorArgs) ProtoMessage()    {}
func (*ConvertProcessorArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{16}
}

func (m *ConvertProcessorArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConvertProcessorArgs.Unmarshal(m, b)
}
func (m *ConvertProcessorArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConvertProcessorArgs.Marshal(b, m, deterministic)
}
func (m *ConvertProcessorArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConvertProcessorArgs.Merge(m, src)
}
func (m *ConvertProcessorArgs) XXX_Size() int {
	return xxx_messageInfo_ConvertProcessorArgs.Size(m)
}
func (m *ConvertProcessorArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConvertProcessorArgs.DiscardUnknown(m)
}

var xxx_messageInfo_ConvertProcessorArgs proto.InternalMessageInfo

func (m *ConvertProcessorArgs) GetFactor() float64 {
	if m != nil {
		return m.Factor
	}
	return 0
}

type RateProcessorArgs struct {
	AllowNegative        bool     `protobuf:"varint,1,opt,name=allow_negative,json=allowNegative,proto3" json:"allow_negative,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RateProcessorArgs) Reset()         { *m = RateProcessorArgs{} }
func (m *RateProcessorArgs) String() string { return proto.CompactTextString(m) }
func (*RateProcessorArgs) ProtoMessage()    {}
func (*RateProcessorArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{17}
}

func (m *RateProcessorArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateProcessorArgs.Unmarshal(m, b)
}
func (m *RateProcessorArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateProcessorArgs.Marshal(b, m, deterministic)
}
func (m *RateProcessorArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateProcessorArgs.Merge(m, src)
}
func (m *RateProcessorArgs) XXX_Size() int {
	return xxx_messageInfo_RateProcessorArgs.Size(m)
}
func (m *RateProcessorArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_RateProcessorArgs.DiscardUnknown(m)
}

var xxx_messageInfo_RateProcessorArgs proto.InternalMessageInfo

func (m *RateProcessorArgs) GetAllowNegative() bool {
	if m != nil {
		return m.AllowNegative
	}
	return false
}

type RollupProcessorArgs struct {
	// The aggregation function, either SUM, AVG or MAX
	Agg RollupProcessorArgs_AggregationFunction `protobuf:"varint,1,opt,name=agg,proto3,enum=netbeam.RollupProcessorArgs_AggregationFunction" json:"agg,omitempty"`
	// The rollup window, e.g. "5m"
	Period               string   `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollupProcessorArgs) Reset()         { *m = RollupProcessorArgs{} }
func (m *RollupProcessorArgs) String() string { return proto.CompactTextString(m) }
func (*RollupProcessorArgs) ProtoMessage()    {}
func (*RollupProcessorArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{18}
}

func (m *RollupProcessorArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollupProcessorArgs.Unmarshal(m, b)
}
func (m *RollupProcessorArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollupProcessorArgs.Marshal(b, m, deterministic)
}
func (m *RollupProcessorArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollupProcessorArgs.Merge(m, src)
}
func (m *RollupProcessorArgs) XXX_Size() int {
	return xxx_messageInfo_RollupProcessorArgs.Size(m)
}
func (m *RollupProcessorArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_RollupProcessorArgs.DiscardUnknown(m)
}

var xxx_messageInfo_RollupProcessorArgs proto.InternalMessageInfo

func (m *RollupProcessorArgs) GetAgg() RollupProcessorArgs_AggregationFunction {
	if m != nil {
		return m.Agg
	}
	return RollupProcessorArgs_SUM
}

func (m *RollupProcessorArgs) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

type Output struct {
	// The type of the metric: bytes, counter, gauge or string
	Type Output_Type `protobuf:"varint,1,opt,name=type,proto3,enum=netbeam.Output_Type" json:"type,omitempty"`
	// Output args
	//
	// Types that are valid to be assigned to Args:
	//	*Output_TileArgs
	//	*Output_CurrentArgs
	//	*Output_TagArgs
	Args                 isOutput_Args `protobuf_oneof:"args"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{19}
}

func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (m *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(m, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

func (m *Output) GetType() Output_Type {
	if m != nil {
		return m.Type
	}
	return Output_TILE
}

type isOutput_Args interface {
	isOutput_Args()
}

type Output_TileArgs struct {
	TileArgs *TileOutputArgs `protobuf:"bytes,2,opt,name=tile_args,json=tileArgs,proto3,oneof"`
}

type Output_CurrentArgs struct {
	CurrentArgs *CurrentOutputArgs `protobuf:"bytes,3,opt,name=current_args,json=currentArgs,proto3,oneof"`
}

type Output_TagArgs struct {
	TagArgs *TagOutputArgs `protobuf:"bytes,4,opt,name=tag_args,json=tagArgs,proto3,oneof"`
}

func (*Output_TileArgs) isOutput_Args() {}

func (*Output_CurrentArgs) isOutput_Args() {}

func (*Output_TagArgs) isOutput_Args() {}

func (m *Output) GetArgs() isOutput_Args {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Output) GetTileArgs() *TileOutputArgs {
	if x, ok := m.GetArgs().(*Output_TileArgs); ok {
		return x.TileArgs
	}
	return nil
}

func (m *Output) GetCurrentArgs() *CurrentOutputArgs {
	if x, ok := m.GetArgs().(*Output_CurrentArgs); ok {
		return x.CurrentArgs
	}
	return nil
}

func (m *Output) GetTagArgs() *TagOutputArgs {
	if x, ok := m.GetArgs().(*Output_TagArgs); ok {
		return x.TagArgs
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Output) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Output_TileArgs)(nil),
		(*Output_CurrentArgs)(nil),
		(*Output_TagArgs)(nil),
	}
}

type TileOutputArgs struct {
	// The span of the tile to write into e.g. 30s samples into a span of "1d" (2880 points per tile)
	Span                 string   `protobuf:"bytes,1,opt,name=span,proto3" json:"span,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TileOutputArgs) Reset()         { *m = TileOutputArgs{} }
func (m *TileOutputArgs) String() string { return proto.CompactTextString(m) }
func (*TileOutputArgs) ProtoMessage()    {}
func (*TileOutputArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{20}
}

func (m *TileOutputArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TileOutputArgs.Unmarshal(m, b)
}
func (m *TileOutputArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TileOutputArgs.Marshal(b, m, deterministic)
}
func (m *TileOutputArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TileOutputArgs.Merge(m, src)
}
func (m *TileOutputArgs) XXX_Size() int {
	return xxx_messageInfo_TileOutputArgs.Size(m)
}
func (m *TileOutputArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_TileOutputArgs.DiscardUnknown(m)
}

var xxx_messageInfo_TileOutputArgs proto.InternalMessageInfo

func (m *TileOutputArgs) GetSpan() string {
	if m != nil {
		return m.Span
	}
	return ""
}

type CurrentOutputArgs struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentOutputArgs) Reset()         { *m = CurrentOutputArgs{} }
func (m *CurrentOutputArgs) String() string { return proto.CompactTextString(m) }
func (*CurrentOutputArgs) ProtoMessage()    {}
func (*CurrentOutputArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{21}
}

func (m *CurrentOutputArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentOutputArgs.Unmarshal(m, b)
}
func (m *CurrentOutputArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentOutputArgs.Marshal(b, m, deterministic)
}
func (m *CurrentOutputArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentOutputArgs.Merge(m, src)
}
func (m *CurrentOutputArgs) XXX_Size() int {
	return xxx_messageInfo_CurrentOutputArgs.Size(m)
}
func (m *CurrentOutputArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentOutputArgs.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentOutputArgs proto.InternalMessageInfo

type TagOutputArgs struct {
	// The span of the tile to write into e.g. 30s samples into a span of "1d" (2880 points per tile)
	Span string `protobuf:"bytes,1,opt,name=span,proto3" json:"span,omitempty"`
	// The output metric name for the tag resource e.g. tags/sites/anl::traffic/$suffix
	Metric               []string `protobuf:"bytes,2,rep,name=metric,proto3" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagOutputArgs) Reset()         { *m = TagOutputArgs{} }
func (m *TagOutputArgs) String() string { return proto.CompactTextString(m) }
func (*TagOutputArgs) ProtoMessage()    {}
func (*TagOutputArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{22}
}

func (m *TagOutputArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagOutputArgs.Unmarshal(m, b)
}
func (m *TagOutputArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagOutputArgs.Marshal(b, m, deterministic)
}
func (m *TagOutputArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagOutputArgs.Merge(m, src)
}
func (m *TagOutputArgs) XXX_Size() int {
	return xxx_messageInfo_TagOutputArgs.Size(m)
}
func (m *TagOutputArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_TagOutputArgs.DiscardUnknown(m)
}

var xxx_messageInfo_TagOutputArgs proto.InternalMessageInfo

func (m *TagOutputArgs) GetSpan() string {
	if m != nil {
		return m.Span
	}
	return ""
}

func (m *TagOutputArgs) GetMetric() []string {
	if m != nil {
		return m.Metric
	}
	return nil
}

type TileRequest struct {
	// The namespace
	Namespace *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The resource as a path
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// The metric to get the tile from, for example "traffic/in"
	Metric string `protobuf:"bytes,3,opt,name=metric,proto3" json:"metric,omitempty"`
	// The tile index, for example "1d-1234"
	Index                string   `protobuf:"bytes,4,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TileRequest) Reset()         { *m = TileRequest{} }
func (m *TileRequest) String() string { return proto.CompactTextString(m) }
func (*TileRequest) ProtoMessage()    {}
func (*TileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{23}
}

func (m *TileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TileRequest.Unmarshal(m, b)
}
func (m *TileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TileRequest.Marshal(b, m, deterministic)
}
func (m *TileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TileRequest.Merge(m, src)
}
func (m *TileRequest) XXX_Size() int {
	return xxx_messageInfo_TileRequest.Size(m)
}
func (m *TileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TileRequest proto.InternalMessageInfo

func (m *TileRequest) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *TileRequest) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *TileRequest) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *TileRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type OrganizationListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrganizationListRequest) Reset()         { *m = OrganizationListRequest{} }
func (m *OrganizationListRequest) String() string { return proto.CompactTextString(m) }
func (*OrganizationListRequest) ProtoMessage()    {}
func (*OrganizationListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{24}
}

func (m *OrganizationListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationListRequest.Unmarshal(m, b)
}
func (m *OrganizationListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationListRequest.Marshal(b, m, deterministic)
}
func (m *OrganizationListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationListRequest.Merge(m, src)
}
func (m *OrganizationListRequest) XXX_Size() int {
	return xxx_messageInfo_OrganizationListRequest.Size(m)
}
func (m *OrganizationListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationListRequest proto.InternalMessageInfo

type OrganizationRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrganizationRequest) Reset()         { *m = OrganizationRequest{} }
func (m *OrganizationRequest) String() string { return proto.CompactTextString(m) }
func (*OrganizationRequest) ProtoMessage()    {}
func (*OrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{25}
}

func (m *OrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationRequest.Unmarshal(m, b)
}
func (m *OrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationRequest.Marshal(b, m, deterministic)
}
func (m *OrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationRequest.Merge(m, src)
}
func (m *OrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_OrganizationRequest.Size(m)
}
func (m *OrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationRequest proto.InternalMessageInfo

func (m *OrganizationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CollectionListRequest struct {
	// The short name of the Organization containing the Collections
	Organization         string   `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectionListRequest) Reset()         { *m = CollectionListRequest{} }
func (m *CollectionListRequest) String() string { return proto.CompactTextString(m) }
func (*CollectionListRequest) ProtoMessage()    {}
func (*CollectionListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{26}
}

func (m *CollectionListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionListRequest.Unmarshal(m, b)
}
func (m *CollectionListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionListRequest.Marshal(b, m, deterministic)
}
func (m *CollectionListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionListRequest.Merge(m, src)
}
func (m *CollectionListRequest) XXX_Size() int {
	return xxx_messageInfo_CollectionListRequest.Size(m)
}
func (m *CollectionListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionListRequest proto.InternalMessageInfo

func (m *CollectionListRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type CollectionRequest struct {
	// The Organization to look up the Collection in
	Organization string `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	// The short name of the Collection
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectionRequest) Reset()         { *m = CollectionRequest{} }
func (m *CollectionRequest) String() string { return proto.CompactTextString(m) }
func (*CollectionRequest) ProtoMessage()    {}
func (*CollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{27}
}

func (m *CollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionRequest.Unmarshal(m, b)
}
func (m *CollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionRequest.Marshal(b, m, deterministic)
}
func (m *CollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionRequest.Merge(m, src)
}
func (m *CollectionRequest) XXX_Size() int {
	return xxx_messageInfo_CollectionRequest.Size(m)
}
func (m *CollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionRequest proto.InternalMessageInfo

func (m *CollectionRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *CollectionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ResourceGroupListRequest struct {
	// The short name of the Collection containing the Resource Groups
	Collection           string   `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceGroupListRequest) Reset()         { *m = ResourceGroupListRequest{} }
func (m *ResourceGroupListRequest) String() string { return proto.CompactTextString(m) }
func (*ResourceGroupListRequest) ProtoMessage()    {}
func (*ResourceGroupListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{28}
}

func (m *ResourceGroupListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceGroupListRequest.Unmarshal(m, b)
}
func (m *ResourceGroupListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceGroupListRequest.Marshal(b, m, deterministic)
}
func (m *ResourceGroupListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceGroupListRequest.Merge(m, src)
}
func (m *ResourceGroupListRequest) XXX_Size() int {
	return xxx_messageInfo_ResourceGroupListRequest.Size(m)
}
func (m *ResourceGroupListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceGroupListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceGroupListRequest proto.InternalMessageInfo

func (m *ResourceGroupListRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

type ResourceGroupRequest struct {
	// The Collection to look up the Resource Group in
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// The short name of the Resource Group
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceGroupRequest) Reset()         { *m = ResourceGroupRequest{} }
func (m *ResourceGroupRequest) String() string { return proto.CompactTextString(m) }
func (*ResourceGroupRequest) ProtoMessage()    {}
func (*ResourceGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{29}
}

func (m *ResourceGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceGroupRequest.Unmarshal(m, b)
}
func (m *ResourceGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceGroupRequest.Marshal(b, m, deterministic)
}
func (m *ResourceGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceGroupRequest.Merge(m, src)
}
func (m *ResourceGroupRequest) XXX_Size() int {
	return xxx_messageInfo_ResourceGroupRequest.Size(m)
}
func (m *ResourceGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceGroupRequest proto.InternalMessageInfo

func (m *ResourceGroupRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *ResourceGroupRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateSourceRequest struct {
	// The namespace containing the Source
	Namespace *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The index of the Source, which should be unique, and is how the source is referred to within ingest events
	Index int32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	// The relative priority of the Source used to merge events
	Priority int32 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	// A human friendly escription of the Source and what it represents
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSourceRequest) Reset()         { *m = CreateSourceRequest{} }
func (m *CreateSourceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSourceRequest) ProtoMessage()    {}
func (*CreateSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{30}
}

func (m *CreateSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSourceRequest.Unmarshal(m, b)
}
func (m *CreateSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSourceRequest.Marshal(b, m, deterministic)
}
func (m *CreateSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSourceRequest.Merge(m, src)
}
func (m *CreateSourceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSourceRequest.Size(m)
}
func (m *CreateSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSourceRequest proto.InternalMessageInfo

func (m *CreateSourceRequest) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *CreateSourceRequest) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *CreateSourceRequest) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *CreateSourceRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ChangeSourcePriorityRequest struct {
	// The namespace containing the Source
	Namespace *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The index of the Source to update
	Index int32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	// The new relative priority of the Source
	Priority             int32    `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeSourcePriorityRequest) Reset()         { *m = ChangeSourcePriorityRequest{} }
func (m *ChangeSourcePriorityRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeSourcePriorityRequest) ProtoMessage()    {}
func (*ChangeSourcePriorityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{31}
}

func (m *ChangeSourcePriorityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeSourcePriorityRequest.Unmarshal(m, b)
}
func (m *ChangeSourcePriorityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeSourcePriorityRequest.Marshal(b, m, deterministic)
}
func (m *ChangeSourcePriorityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeSourcePriorityRequest.Merge(m, src)
}
func (m *ChangeSourcePriorityRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeSourcePriorityRequest.Size(m)
}
func (m *ChangeSourcePriorityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeSourcePriorityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeSourcePriorityRequest proto.InternalMessageInfo

func (m *ChangeSourcePriorityRequest) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *ChangeSourcePriorityRequest) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ChangeSourcePriorityRequest) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type SourceListRequest struct {
	Namespace            *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SourceListRequest) Reset()         { *m = SourceListRequest{} }
func (m *SourceListRequest) String() string { return proto.CompactTextString(m) }
func (*SourceListRequest) ProtoMessage()    {}
func (*SourceListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{32}
}

func (m *SourceListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceListRequest.Unmarshal(m, b)
}
func (m *SourceListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceListRequest.Marshal(b, m, deterministic)
}
func (m *SourceListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceListRequest.Merge(m, src)
}
func (m *SourceListRequest) XXX_Size() int {
	return xxx_messageInfo_SourceListRequest.Size(m)
}
func (m *SourceListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SourceListRequest proto.InternalMessageInfo

func (m *SourceListRequest) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

type SourceRequest struct {
	// The Organization and Collection of the source
	Namespace *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The index of the Source
	Index                string   `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourceRequest) Reset()         { *m = SourceRequest{} }
func (m *SourceRequest) String() string { return proto.CompactTextString(m) }
func (*SourceRequest) ProtoMessage()    {}
func (*SourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{33}
}

func (m *SourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceRequest.Unmarshal(m, b)
}
func (m *SourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceRequest.Marshal(b, m, deterministic)
}
func (m *SourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceRequest.Merge(m, src)
}
func (m *SourceRequest) XXX_Size() int {
	return xxx_messageInfo_SourceRequest.Size(m)
}
func (m *SourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SourceRequest proto.InternalMessageInfo

func (m *SourceRequest) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *SourceRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type DeleteSourceRequest struct {
	// The namespace containing the Source
	Namespace *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The index of the Source to delete
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSourceRequest) Reset()         { *m = DeleteSourceRequest{} }
func (m *DeleteSourceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSourceRequest) ProtoMessage()    {}
func (*DeleteSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{34}
}

func (m *DeleteSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSourceRequest.Unmarshal(m, b)
}
func (m *DeleteSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSourceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSourceRequest.Merge(m, src)
}
func (m *DeleteSourceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSourceRequest.Size(m)
}
func (m *DeleteSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSourceRequest proto.InternalMessageInfo

func (m *DeleteSourceRequest) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *DeleteSourceRequest) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type RuleListRequest struct {
	// The namespace to request the ingest rules within
	Namespace            *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RuleListRequest) Reset()         { *m = RuleListRequest{} }
func (m *RuleListRequest) String() string { return proto.CompactTextString(m) }
func (*RuleListRequest) ProtoMessage()    {}
func (*RuleListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{35}
}

func (m *RuleListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleListRequest.Unmarshal(m, b)
}
func (m *RuleListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleListRequest.Marshal(b, m, deterministic)
}
func (m *RuleListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleListRequest.Merge(m, src)
}
func (m *RuleListRequest) XXX_Size() int {
	return xxx_messageInfo_RuleListRequest.Size(m)
}
func (m *RuleListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RuleListRequest proto.InternalMessageInfo

func (m *RuleListRequest) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

type RuleRequest struct {
	// The namespace containing the ingest rule
	Namespace *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The id of the rule to fetch
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuleRequest) Reset()         { *m = RuleRequest{} }
func (m *RuleRequest) String() string { return proto.CompactTextString(m) }
func (*RuleRequest) ProtoMessage()    {}
func (*RuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{36}
}

func (m *RuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleRequest.Unmarshal(m, b)
}
func (m *RuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleRequest.Marshal(b, m, deterministic)
}
func (m *RuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleRequest.Merge(m, src)
}
func (m *RuleRequest) XXX_Size() int {
	return xxx_messageInfo_RuleRequest.Size(m)
}
func (m *RuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RuleRequest proto.InternalMessageInfo

func (m *RuleRequest) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *RuleRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CreateRuleRequest struct {
	// The type of the metric to ingest, may be counter, gauge or string
	Type CreateRuleRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=netbeam.CreateRuleRequest_Type" json:"type,omitempty"`
	// The namespace to register the rule within
	Namespace *Namespace `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The scope wildcard which determines which Resources the Metric will apply to.
	// e.g. "devices/*/interfaces/*"
	Scope string `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	// The base name of the metric e.g. "traffic"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Units, applicable to counter and gauge types. For counter types the output rates
	// will be ${units}/s and for gauges the output units will just be ${units}. For example
	// a counter of errors my have units "errors" and will output "errors/sec", while a
	// temperature gauge may have units "deg C" which will be its output units as well
	//
	// If the counter units is "bytes" then the counter is assumed to be a traffic counter
	// and rate outputs will be converted automatically to bits per second (bps).
	//
	Units string `protobuf:"bytes,5,opt,name=units,proto3" json:"units,omitempty"`
	// The suffix of the metric e.g. "in" and "out"
	Suffix string `protobuf:"bytes,6,opt,name=suffix,proto3" json:"suffix,omitempty"`
	// The tag suffix of the metric e.g. "in" maybe mapped to from both "in_inProfile" and "in_outProfile"
	// to sum those together in the resulting tag metric.
	TagSuffix string `protobuf:"bytes,7,opt,name=tag_suffix,json=tagSuffix,proto3" json:"tag_suffix,omitempty"`
	// The alignment of the data to periodic boundaries e.g. "30s" or "5m"
	Align                string   `protobuf:"bytes,8,opt,name=align,proto3" json:"align,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRuleRequest) Reset()         { *m = CreateRuleRequest{} }
func (m *CreateRuleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRuleRequest) ProtoMessage()    {}
func (*CreateRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{37}
}

func (m *CreateRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRuleRequest.Unmarshal(m, b)
}
func (m *CreateRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRuleRequest.Marshal(b, m, deterministic)
}
func (m *CreateRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRuleRequest.Merge(m, src)
}
func (m *CreateRuleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRuleRequest.Size(m)
}
func (m *CreateRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRuleRequest proto.InternalMessageInfo

func (m *CreateRuleRequest) GetType() CreateRuleRequest_Type {
	if m != nil {
		return m.Type
	}
	return CreateRuleRequest_BYTES
}

func (m *CreateRuleRequest) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *CreateRuleRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *CreateRuleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRuleRequest) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

func (m *CreateRuleRequest) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

func (m *CreateRuleRequest) GetTagSuffix() string {
	if m != nil {
		return m.TagSuffix
	}
	return ""
}

func (m *CreateRuleRequest) GetAlign() string {
	if m != nil {
		return m.Align
	}
	return ""
}

type MatchersRequest struct {
	// The namespace to request the Matchers within, based on the Rules registered for the
	// Organization and Collection
	Namespace            *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MatchersRequest) Reset()         { *m = MatchersRequest{} }
func (m *MatchersRequest) String() string { return proto.CompactTextString(m) }
func (*MatchersRequest) ProtoMessage()    {}
func (*MatchersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38d69b4fdff410ff, []int{38}
}

func (m *MatchersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchersRequest.Unmarshal(m, b)
}
func (m *MatchersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchersRequest.Marshal(b, m, deterministic)
}
func (m *MatchersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchersRequest.Merge(m, src)
}
func (m *MatchersRequest) XXX_Size() int {
	return xxx_messageInfo_MatchersRequest.Size(m)
}
func (m *MatchersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MatchersRequest proto.InternalMessageInfo

func (m *MatchersRequest) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func init() {
	proto.RegisterEnum("netbeam.Rule_Type", Rule_Type_name, Rule_Type_value)
	proto.RegisterEnum("netbeam.Processor_Type", Processor_Type_name, Processor_Type_value)
	proto.RegisterEnum("netbeam.RollupProcessorArgs_AggregationFunction", RollupProcessorArgs_AggregationFunction_name, RollupProcessorArgs_AggregationFunction_value)
	proto.RegisterEnum("netbeam.Output_Type", Output_Type_name, Output_Type_value)
	proto.RegisterEnum("netbeam.CreateRuleRequest_Type", CreateRuleRequest_Type_name, CreateRuleRequest_Type_value)
	proto.RegisterType((*Empty)(nil), "netbeam.Empty")
	proto.RegisterType((*Namespace)(nil), "netbeam.Namespace")
	proto.RegisterType((*Resource)(nil), "netbeam.Resource")
	proto.RegisterType((*Organization)(nil), "netbeam.Organization")
	proto.RegisterType((*OrganizationList)(nil), "netbeam.OrganizationList")
	proto.RegisterType((*Collection)(nil), "netbeam.Collection")
	proto.RegisterType((*CollectionList)(nil), "netbeam.CollectionList")
	proto.RegisterType((*ResourceGroup)(nil), "netbeam.ResourceGroup")
	proto.RegisterType((*ResourceGroupList)(nil), "netbeam.ResourceGroupList")
	proto.RegisterType((*Source)(nil), "netbeam.Source")
	proto.RegisterType((*SourceList)(nil), "netbeam.SourceList")
	proto.RegisterType((*Rule)(nil), "netbeam.Rule")
	proto.RegisterType((*RuleList)(nil), "netbeam.RuleList")
	proto.RegisterType((*Matchers)(nil), "netbeam.Matchers")
	proto.RegisterType((*Matcher)(nil), "netbeam.Matcher")
	proto.RegisterType((*Processor)(nil), "netbeam.Processor")
	proto.RegisterType((*ConvertProcessorArgs)(nil), "netbeam.ConvertProcessorArgs")
	proto.RegisterType((*RateProcessorArgs)(nil), "netbeam.RateProcessorArgs")
	proto.RegisterType((*RollupProcessorArgs)(nil), "netbeam.RollupProcessorArgs")
	proto.RegisterType((*Output)(nil), "netbeam.Output")
	proto.RegisterType((*TileOutputArgs)(nil), "netbeam.TileOutputArgs")
	proto.RegisterType((*CurrentOutputArgs)(nil), "netbeam.CurrentOutputArgs")
	proto.RegisterType((*TagOutputArgs)(nil), "netbeam.TagOutputArgs")
	proto.RegisterType((*TileRequest)(nil), "netbeam.TileRequest")
	proto.RegisterType((*OrganizationListRequest)(nil), "netbeam.OrganizationListRequest")
	proto.RegisterType((*OrganizationRequest)(nil), "netbeam.OrganizationRequest")
	proto.RegisterType((*CollectionListRequest)(nil), "netbeam.CollectionListRequest")
	proto.RegisterType((*CollectionRequest)(nil), "netbeam.CollectionRequest")
	proto.RegisterType((*ResourceGroupListRequest)(nil), "netbeam.ResourceGroupListRequest")
	proto.RegisterType((*ResourceGroupRequest)(nil), "netbeam.ResourceGroupRequest")
	proto.RegisterType((*CreateSourceRequest)(nil), "netbeam.CreateSourceRequest")
	proto.RegisterType((*ChangeSourcePriorityRequest)(nil), "netbeam.ChangeSourcePriorityRequest")
	proto.RegisterType((*SourceListRequest)(nil), "netbeam.SourceListRequest")
	proto.RegisterType((*SourceRequest)(nil), "netbeam.SourceRequest")
	proto.RegisterType((*DeleteSourceRequest)(nil), "netbeam.DeleteSourceRequest")
	proto.RegisterType((*RuleListRequest)(nil), "netbeam.RuleListRequest")
	proto.RegisterType((*RuleRequest)(nil), "netbeam.RuleRequest")
	proto.RegisterType((*CreateRuleRequest)(nil), "netbeam.CreateRuleRequest")
	proto.RegisterType((*MatchersRequest)(nil), "netbeam.MatchersRequest")
}

func init() { proto.RegisterFile("netbeam.proto", fileDescriptor_38d69b4fdff410ff) }

var fileDescriptor_38d69b4fdff410ff = []byte{
	// 1691 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xdb, 0x72, 0xdb, 0xd4,
	0x1a, 0x96, 0x1c, 0x1f, 0x7f, 0xc7, 0x89, 0xbd, 0x92, 0xa6, 0xae, 0x77, 0xdb, 0x9d, 0xae, 0x76,
	0x77, 0xda, 0xd9, 0x7b, 0xdb, 0x21, 0x9d, 0xc2, 0xb4, 0x1d, 0xca, 0x24, 0xc1, 0x75, 0x4b, 0x53,
	0xbb, 0xa3, 0xd8, 0xe5, 0x30, 0x30, 0x1d, 0xd5, 0x59, 0x55, 0xc4, 0xd8, 0x92, 0x90, 0x96, 0x4b,
	0x43, 0xa7, 0x17, 0xf0, 0x04, 0x0c, 0x70, 0x07, 0xc3, 0x0d, 0xaf, 0xc0, 0x35, 0x37, 0x3c, 0x02,
	0x2f, 0xc0, 0x05, 0x4f, 0xc1, 0x15, 0xb3, 0x0e, 0x92, 0x96, 0x6c, 0xa5, 0x64, 0x4c, 0xe0, 0xce,
	0x6b, 0xfd, 0x87, 0xf5, 0xfd, 0x07, 0xff, 0x07, 0x41, 0xc5, 0x21, 0xf4, 0x09, 0x31, 0xc7, 0x4d,
	0xcf, 0x77, 0xa9, 0x8b, 0x0a, 0xf2, 0xd8, 0x00, 0xcf, 0x75, 0xf6, 0xc5, 0x65, 0xe3, 0xac, 0xe5,
	0xba, 0xd6, 0x88, 0xb4, 0x4c, 0xcf, 0x6e, 0x99, 0x8e, 0xe3, 0x52, 0x93, 0xda, 0xae, 0x13, 0x08,
	0x2a, 0x2e, 0x40, 0xae, 0x3d, 0xf6, 0xe8, 0x21, 0xee, 0x41, 0xa9, 0x6b, 0x8e, 0x49, 0xe0, 0x99,
	0x43, 0x82, 0x30, 0x2c, 0xba, 0xbe, 0x65, 0x3a, 0xf6, 0x67, 0x9c, 0xb9, 0xae, 0xaf, 0xeb, 0x57,
	0x4a, 0x46, 0xe2, 0x0e, 0x9d, 0x07, 0x18, 0xba, 0xa3, 0x11, 0x19, 0x72, 0x8e, 0x0c, 0xe7, 0x50,
	0x6e, 0xf0, 0x79, 0x28, 0x1a, 0x24, 0x70, 0x27, 0xfe, 0x90, 0x20, 0x04, 0x59, 0xcf, 0xa4, 0x07,
	0x75, 0x7d, 0x7d, 0xe1, 0x4a, 0xc9, 0xe0, 0xbf, 0x71, 0x1f, 0x16, 0x7b, 0xaa, 0xbe, 0x25, 0xc8,
	0xd8, 0xfb, 0xfc, 0xa5, 0x9c, 0x91, 0xb1, 0xf7, 0x99, 0x8c, 0x63, 0x8e, 0x89, 0xd4, 0xcc, 0x7f,
	0xa3, 0x75, 0x28, 0xef, 0x93, 0x60, 0xe8, 0xdb, 0x1e, 0x7f, 0x74, 0x81, 0x93, 0xd4, 0x2b, 0xdc,
	0x83, 0xaa, 0xaa, 0x75, 0xd7, 0x0e, 0x28, 0xba, 0x05, 0x15, 0x15, 0x79, 0xc0, 0x61, 0x94, 0x37,
	0x4f, 0x35, 0x43, 0xef, 0xa9, 0x12, 0x46, 0x92, 0x17, 0x7b, 0x00, 0x3b, 0x91, 0x51, 0x33, 0x20,
	0x37, 0xa0, 0xe4, 0x84, 0x5e, 0xe3, 0x48, 0xcb, 0x9b, 0x28, 0x52, 0x1b, 0xf9, 0xd3, 0x88, 0x99,
	0x8e, 0x61, 0x42, 0x07, 0x96, 0xe2, 0x17, 0xb9, 0x01, 0xd7, 0xa1, 0x1c, 0x3b, 0x36, 0x84, 0xbf,
	0x12, 0xbd, 0x13, 0x73, 0x1b, 0x2a, 0x1f, 0x1e, 0x40, 0x25, 0x8c, 0x40, 0xc7, 0x77, 0x27, 0xde,
	0x09, 0xb9, 0x78, 0x0f, 0x6a, 0x09, 0xb5, 0x1c, 0xe2, 0x6d, 0x58, 0xf2, 0xd5, 0xcb, 0x10, 0xe5,
	0x5a, 0x84, 0x32, 0x21, 0x63, 0x4c, 0x71, 0xe3, 0xef, 0x75, 0xc8, 0xef, 0x89, 0x64, 0xf9, 0xeb,
	0x3e, 0x5e, 0x85, 0x9c, 0xed, 0xec, 0x93, 0xe7, 0x1c, 0x7d, 0xce, 0x10, 0x07, 0xd4, 0x80, 0xa2,
	0xe7, 0xdb, 0xae, 0x6f, 0xd3, 0xc3, 0x7a, 0x96, 0x13, 0xa2, 0xf3, 0xb4, 0xd5, 0xb9, 0x59, 0xab,
	0xdf, 0x00, 0x10, 0xf8, 0xb8, 0xb9, 0x57, 0xa1, 0x20, 0xe0, 0x87, 0x76, 0x2e, 0x47, 0x88, 0x04,
	0x97, 0x11, 0xd2, 0xf1, 0x8f, 0x19, 0xc8, 0x1a, 0x93, 0xd1, 0x49, 0xd8, 0x75, 0x19, 0xb2, 0xf4,
	0xd0, 0x23, 0xdc, 0xac, 0x25, 0x85, 0x99, 0xa9, 0x6f, 0xf6, 0x0f, 0x3d, 0x62, 0x70, 0x3a, 0xb3,
	0x3f, 0x18, 0xba, 0x1e, 0xe1, 0x66, 0x96, 0x0c, 0x71, 0x88, 0xa2, 0x9d, 0x53, 0xa2, 0xbd, 0x06,
	0xf9, 0x60, 0xf2, 0xf4, 0xa9, 0xfd, 0xbc, 0x9e, 0xe7, 0xb7, 0xf2, 0x84, 0xce, 0x01, 0x50, 0xd3,
	0x7a, 0x2c, 0x69, 0x05, 0x4e, 0x2b, 0x51, 0xd3, 0xda, 0x13, 0xe4, 0x55, 0xc8, 0x99, 0x23, 0xdb,
	0x72, 0xea, 0x45, 0xf1, 0x00, 0x3f, 0xb0, 0xdb, 0x89, 0x63, 0xd3, 0xa0, 0x5e, 0x12, 0xb7, 0xfc,
	0x80, 0xaf, 0x43, 0x96, 0x41, 0x43, 0x25, 0xc8, 0x6d, 0xbf, 0xdf, 0x6f, 0xef, 0x55, 0x35, 0x54,
	0x86, 0xc2, 0x4e, 0x6f, 0xd0, 0xed, 0xb7, 0x8d, 0xaa, 0xce, 0xee, 0x3b, 0x5b, 0x83, 0x4e, 0xbb,
	0x9a, 0x41, 0x00, 0xf9, 0xbd, 0xbe, 0x71, 0xaf, 0xdb, 0xa9, 0x2e, 0xe0, 0x16, 0x14, 0x99, 0x59,
	0xdc, 0xdb, 0x17, 0x21, 0xe7, 0x4f, 0x46, 0x91, 0xaf, 0x2b, 0x09, 0xc3, 0x0d, 0x41, 0xc3, 0x1f,
	0x43, 0xf1, 0x81, 0x49, 0x87, 0x07, 0xc4, 0x0f, 0x92, 0xae, 0xd5, 0x8f, 0xe3, 0xda, 0xff, 0x41,
	0x71, 0x2c, 0xa5, 0xeb, 0x19, 0xfe, 0x4a, 0x35, 0x12, 0x90, 0x6a, 0x8d, 0x88, 0x03, 0xff, 0xaa,
	0x43, 0x41, 0xde, 0x46, 0x6e, 0xd5, 0x15, 0xb7, 0x46, 0x01, 0xc8, 0xf0, 0x82, 0x27, 0x03, 0xf0,
	0xa7, 0x7f, 0xad, 0xd8, 0x83, 0x59, 0xc5, 0x83, 0xb1, 0xb7, 0x73, 0xaa, 0xb7, 0x37, 0x01, 0x3c,
	0xdf, 0x1d, 0x92, 0x20, 0x70, 0xfd, 0xa0, 0x9e, 0xe7, 0x98, 0x63, 0x23, 0x1f, 0x86, 0x24, 0x43,
	0xe1, 0x62, 0x69, 0xeb, 0x4e, 0xa8, 0x37, 0xa1, 0x41, 0xbd, 0x30, 0x95, 0xb6, 0x3d, 0x7e, 0x6f,
	0x84, 0x74, 0xfc, 0x73, 0x06, 0x4a, 0x91, 0x12, 0xf4, 0x5f, 0x99, 0x79, 0x3a, 0xcf, 0xbc, 0xd3,
	0xb3, 0xcf, 0xa8, 0xe9, 0xb7, 0x06, 0x79, 0x6a, 0xfa, 0x16, 0xa1, 0xd2, 0x7c, 0x79, 0x42, 0xdb,
	0xb0, 0x38, 0x74, 0x9d, 0x67, 0xc4, 0xa7, 0x8f, 0x4d, 0xdf, 0x0a, 0xb8, 0x03, 0xca, 0x9b, 0xe7,
	0x94, 0x3a, 0xc6, 0x89, 0x91, 0xce, 0x2d, 0xdf, 0x0a, 0xee, 0x6a, 0xac, 0xa6, 0xf1, 0x7b, 0x76,
	0x44, 0x37, 0xa0, 0xe4, 0x9b, 0x94, 0x08, 0x05, 0x59, 0xae, 0xa0, 0x11, 0xa7, 0x83, 0x49, 0xc9,
	0xb4, 0x74, 0x91, 0xb1, 0x73, 0xd1, 0xb7, 0xa0, 0xec, 0xbb, 0xa3, 0xd1, 0xc4, 0x13, 0xc2, 0x39,
	0x2e, 0x7c, 0x36, 0x16, 0xe6, 0xb4, 0x69, 0x71, 0x10, 0x22, 0xec, 0x84, 0xaf, 0xca, 0x4c, 0x06,
	0xc8, 0x1b, 0xbd, 0xdd, 0xdd, 0xc1, 0xc3, 0xaa, 0x86, 0x8a, 0x90, 0x35, 0xb6, 0xfa, 0xed, 0xaa,
	0x2e, 0x92, 0xba, 0xfb, 0xa8, 0x6d, 0xf4, 0xab, 0x99, 0xed, 0x3c, 0x64, 0xd9, 0x23, 0xb8, 0x09,
	0xab, 0x69, 0x56, 0x31, 0x17, 0x3d, 0x35, 0x87, 0xd4, 0xf5, 0xb9, 0x47, 0x75, 0x43, 0x9e, 0xf0,
	0x4d, 0xa8, 0xcd, 0x18, 0x81, 0xfe, 0x03, 0x4b, 0xe6, 0x68, 0xe4, 0x7e, 0xfa, 0xd8, 0x21, 0x96,
	0x49, 0xed, 0x67, 0x22, 0x0c, 0x45, 0xa3, 0xc2, 0x6f, 0xbb, 0xf2, 0x12, 0xff, 0xa0, 0xc3, 0x4a,
	0x8a, 0x11, 0x68, 0x1b, 0x16, 0x4c, 0xcb, 0x92, 0xa1, 0xdb, 0x78, 0x95, 0xbd, 0xcd, 0x2d, 0xcb,
	0xf2, 0xb9, 0x3a, 0xd7, 0xb9, 0x33, 0x71, 0x44, 0x4b, 0x61, 0xc2, 0x0c, 0xaf, 0x47, 0x7c, 0xdb,
	0xdd, 0x97, 0xbd, 0x42, 0x9e, 0xf0, 0x06, 0xac, 0xa4, 0xc8, 0xa0, 0x02, 0x2c, 0xec, 0x0d, 0x1e,
	0x54, 0x35, 0xf6, 0x63, 0xeb, 0x51, 0xa7, 0xaa, 0xb3, 0x1f, 0x0f, 0xb6, 0xde, 0xab, 0x66, 0xf0,
	0x97, 0x19, 0xc8, 0x8b, 0x5c, 0x43, 0x57, 0x12, 0x49, 0xb5, 0x3a, 0x95, 0x8a, 0x6a, 0x46, 0xbd,
	0x0e, 0x25, 0x6a, 0x8f, 0x64, 0xd4, 0x45, 0xa9, 0x8c, 0x73, 0xb0, 0x6f, 0x8f, 0x88, 0x10, 0x09,
	0x43, 0xce, 0x78, 0x65, 0xc8, 0x17, 0x87, 0x13, 0xdf, 0x27, 0x4e, 0x22, 0xe3, 0xe2, 0x84, 0xd9,
	0x11, 0xc4, 0x84, 0x74, 0x59, 0x4a, 0x70, 0x05, 0xd7, 0xa0, 0xc8, 0xea, 0xa0, 0x92, 0x6d, 0x71,
	0x43, 0xeb, 0x9b, 0x56, 0x42, 0xb0, 0x40, 0x4d, 0x8b, 0xe7, 0xc9, 0x65, 0x99, 0x27, 0x45, 0xc8,
	0xf6, 0xef, 0xed, 0xb6, 0x65, 0xc1, 0x1b, 0x18, 0x46, 0xbb, 0xdb, 0x17, 0xae, 0xe8, 0x6f, 0x75,
	0x94, 0x24, 0xb9, 0x04, 0x4b, 0x49, 0x1b, 0x58, 0x4d, 0x09, 0x3c, 0x33, 0x9c, 0xbb, 0xf8, 0x6f,
	0xbc, 0x02, 0xb5, 0x19, 0xb8, 0xf8, 0x16, 0x54, 0x12, 0x30, 0xd2, 0x24, 0x59, 0xf0, 0xc6, 0x84,
	0xfa, 0xf6, 0x30, 0xfc, 0x3f, 0x8a, 0x13, 0xfe, 0x4e, 0x87, 0x32, 0x7b, 0xd8, 0x20, 0x9f, 0x4c,
	0x48, 0x40, 0xe7, 0xa8, 0x9a, 0xff, 0x87, 0x62, 0xd8, 0xc7, 0x65, 0x58, 0x6a, 0x33, 0xfd, 0xde,
	0x88, 0x58, 0x14, 0x20, 0xa2, 0xf6, 0xc9, 0x53, 0xdc, 0xaf, 0x65, 0xd9, 0xe3, 0x07, 0x7c, 0x06,
	0x4e, 0x4f, 0x8f, 0x72, 0x12, 0x29, 0xbe, 0x0a, 0x2b, 0x89, 0x99, 0x4d, 0x1a, 0x90, 0x52, 0x8a,
	0xf1, 0x2d, 0x38, 0x95, 0x9c, 0xa6, 0x42, 0xe6, 0x63, 0xcc, 0xb8, 0xf8, 0x3e, 0xd4, 0x94, 0xe1,
	0xea, 0xf8, 0x82, 0x69, 0x93, 0x15, 0xbe, 0x09, 0xf5, 0x99, 0xb9, 0x29, 0xd4, 0x99, 0x1c, 0xa6,
	0xf5, 0x99, 0x61, 0xfa, 0x1d, 0x58, 0x4d, 0xce, 0x4f, 0xc7, 0x93, 0x4b, 0xc5, 0xf1, 0xad, 0x0e,
	0x2b, 0x3b, 0x3e, 0x31, 0x29, 0x91, 0xa3, 0xca, 0xdc, 0xe1, 0x8f, 0xe2, 0x96, 0x39, 0x6a, 0xce,
	0x5a, 0x78, 0xf5, 0x9c, 0x95, 0x9d, 0x9d, 0xb3, 0x3e, 0xd7, 0xe1, 0x5f, 0x3b, 0x07, 0xa6, 0x63,
	0x49, 0x74, 0x0f, 0xa5, 0xe8, 0x3f, 0x88, 0x12, 0xb7, 0xa1, 0x16, 0xcf, 0x7a, 0x73, 0x3f, 0x8c,
	0xdf, 0x85, 0xca, 0x89, 0x7a, 0x38, 0xfa, 0x67, 0x7c, 0x04, 0x2b, 0x6f, 0x93, 0x11, 0xf9, 0x9b,
	0x02, 0x88, 0x77, 0x60, 0x39, 0x1c, 0xbd, 0xe6, 0x37, 0xbe, 0x07, 0x65, 0x3e, 0x9d, 0xcd, 0x8d,
	0x4d, 0x8c, 0xcb, 0x99, 0x70, 0x5c, 0xc6, 0x3f, 0x65, 0xa0, 0x26, 0xd2, 0x56, 0xd5, 0x7b, 0x2d,
	0xd1, 0x43, 0xfe, 0x1d, 0x57, 0xf6, 0x69, 0x4e, 0xb5, 0x9d, 0xcc, 0xb5, 0x51, 0x88, 0x81, 0x6e,
	0x21, 0x6d, 0xa2, 0xce, 0x26, 0x47, 0x3f, 0x31, 0xc2, 0xe5, 0xd4, 0x11, 0xee, 0x24, 0xe7, 0xec,
	0x79, 0x27, 0xea, 0x1d, 0x58, 0x0e, 0x07, 0xe4, 0xb9, 0xa3, 0xb2, 0xf9, 0x7b, 0x09, 0x0a, 0x5d,
	0xc1, 0x80, 0xae, 0x43, 0xe9, 0x0e, 0xa1, 0xc3, 0x03, 0xd6, 0x43, 0xd0, 0x6a, 0xa2, 0x1f, 0xcb,
	0x07, 0x1a, 0xd5, 0x26, 0xff, 0x12, 0xd1, 0xb7, 0xc7, 0x64, 0x8f, 0xf8, 0x36, 0x09, 0xb0, 0x86,
	0x0c, 0xa8, 0xb1, 0xd4, 0x52, 0x0b, 0x78, 0x80, 0xd6, 0x53, 0x97, 0x71, 0x25, 0x05, 0x1b, 0x67,
	0x8e, 0xe4, 0xc0, 0x1a, 0xba, 0x0b, 0xcb, 0x1d, 0x92, 0x50, 0x89, 0xce, 0xa6, 0xaf, 0xf7, 0x52,
	0x5b, 0xfa, 0xf2, 0x8f, 0x35, 0xb4, 0x0b, 0xcb, 0x4c, 0x67, 0x5c, 0xf6, 0x03, 0x74, 0x3e, 0x65,
	0xd3, 0x56, 0x91, 0x9d, 0x3e, 0x82, 0x8e, 0x35, 0xb4, 0x0d, 0x95, 0x0e, 0x51, 0x94, 0xa1, 0x46,
	0xda, 0xd6, 0x2e, 0xf5, 0xa4, 0x6d, 0xf4, 0x58, 0x43, 0x03, 0x40, 0xe2, 0x35, 0x75, 0x61, 0x46,
	0x17, 0xd2, 0x17, 0x6b, 0x15, 0x57, 0xe3, 0x68, 0x16, 0xac, 0xa1, 0xfb, 0x50, 0xb5, 0x48, 0x52,
	0x2b, 0x3a, 0x77, 0xc4, 0xb6, 0x2e, 0x15, 0x1e, 0xb1, 0xcc, 0x63, 0x0d, 0x7d, 0xa3, 0x43, 0x99,
	0xe9, 0x15, 0x05, 0x29, 0x50, 0xcc, 0x9c, 0x29, 0xa4, 0x8a, 0x99, 0x31, 0x0d, 0xf7, 0xbf, 0xf8,
	0xe5, 0xb7, 0xaf, 0x33, 0x5d, 0xb4, 0xdb, 0x7a, 0xf6, 0x5a, 0xcb, 0xf5, 0xad, 0xa0, 0xf5, 0x22,
	0x4a, 0xba, 0xa6, 0xda, 0x5a, 0x5f, 0xb6, 0x94, 0x4f, 0x1c, 0x2a, 0x53, 0x7c, 0xfd, 0xb2, 0x25,
	0x77, 0x6f, 0xf4, 0x95, 0x0e, 0xa5, 0x0e, 0x91, 0xa8, 0xd0, 0xda, 0xf4, 0x8e, 0x2e, 0x01, 0x4d,
	0xef, 0xee, 0xf8, 0x43, 0x0e, 0xe6, 0x11, 0xea, 0x9f, 0x24, 0x98, 0xd6, 0x0b, 0x5e, 0x5d, 0x5f,
	0xb2, 0xa1, 0x54, 0x6d, 0xbf, 0x4a, 0xa2, 0xa6, 0x74, 0xe5, 0x59, 0x70, 0x1a, 0xea, 0xc1, 0xea,
	0xc0, 0xdb, 0x8f, 0x38, 0xc3, 0x0e, 0x89, 0x2e, 0xc5, 0x8a, 0x8e, 0x6e, 0xa0, 0x69, 0x0a, 0x6f,
	0xc3, 0xa2, 0xda, 0x4f, 0x14, 0x44, 0x29, 0x6d, 0xa6, 0xb1, 0x14, 0x51, 0xc5, 0x97, 0x43, 0x0d,
	0xdd, 0x84, 0x12, 0x0f, 0x30, 0xdb, 0xc3, 0x51, 0x3d, 0xb1, 0x9d, 0xab, 0x81, 0xaf, 0xcd, 0x50,
	0xb0, 0x86, 0x36, 0xa0, 0xd0, 0x21, 0x5c, 0x54, 0x29, 0x21, 0x4a, 0xdd, 0x6e, 0x24, 0xb7, 0x7d,
	0xac, 0xa1, 0x1b, 0x00, 0x71, 0x75, 0x57, 0xff, 0x50, 0xd3, 0x25, 0x7f, 0x56, 0xf4, 0x4d, 0x58,
	0x64, 0xcf, 0x46, 0xdf, 0x09, 0xea, 0xd3, 0x3b, 0x7e, 0x30, 0x8b, 0x35, 0xa4, 0x60, 0x6d, 0xfb,
	0xe2, 0x07, 0x17, 0x2c, 0x9b, 0x1e, 0x4c, 0x9e, 0x34, 0x87, 0xee, 0xb8, 0x45, 0x02, 0x87, 0xd0,
	0x16, 0xff, 0x8c, 0xda, 0xb2, 0xdc, 0x96, 0xe4, 0x7f, 0x92, 0xe7, 0x37, 0xd7, 0xfe, 0x08, 0x00,
	0x00, 0xff, 0xff, 0x90, 0x5b, 0x61, 0xef, 0x9c, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NetbeamClient is the client API for Netbeam service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetbeamClient interface {
	// Requests a tile from the netbeam core for a specific metric
	FetchTile(ctx context.Context, in *TileRequest, opts ...grpc.CallOption) (*pond.TimeSeries, error)
	// Request the list of Organizations registered with netbeam
	ListOrganizations(ctx context.Context, in *OrganizationListRequest, opts ...grpc.CallOption) (*OrganizationList, error)
	// Get a specific Organization by supplying it's short name
	GetOrganization(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*Organization, error)
	// Request the list of Collections within an Organization registered with netbeam
	ListCollections(ctx context.Context, in *CollectionListRequest, opts ...grpc.CallOption) (*CollectionList, error)
	// Get a specific Collection by supplying the Organization it is in as well as the Collection short name
	GetCollection(ctx context.Context, in *CollectionRequest, opts ...grpc.CallOption) (*Collection, error)
	// Request the list of resource groups within a Collection registered with netbeam
	ListResourceGroups(ctx context.Context, in *ResourceGroupListRequest, opts ...grpc.CallOption) (*ResourceGroupList, error)
	// Get a specific Resource Group by supplying the Collection it is in as well as the Resource Group short name
	GetResourceGroup(ctx context.Context, in *ResourceGroupRequest, opts ...grpc.CallOption) (*ResourceGroup, error)
	// Request the list of all Sources within a Collection. The list will be returned in order of priority.
	ListSources(ctx context.Context, in *SourceListRequest, opts ...grpc.CallOption) (*SourceList, error)
	// Get a specific Source by supplying the Organization, Collection and the Source index
	GetSource(ctx context.Context, in *SourceRequest, opts ...grpc.CallOption) (*Source, error)
	// Registers a new Source with the Collection
	CreateSource(ctx context.Context, in *CreateSourceRequest, opts ...grpc.CallOption) (*Source, error)
	// Update the Source priority
	UpdateSourcePriority(ctx context.Context, in *ChangeSourcePriorityRequest, opts ...grpc.CallOption) (*Source, error)
	// Delete the Source
	DeleteSource(ctx context.Context, in *DeleteSourceRequest, opts ...grpc.CallOption) (*Empty, error)
	// Request a list of all ingest rules registered to the Collection
	ListRules(ctx context.Context, in *RuleListRequest, opts ...grpc.CallOption) (*RuleList, error)
	// Get a specific rule by supplying the Organization, Collection and rule identifier
	GetRule(ctx context.Context, in *RuleRequest, opts ...grpc.CallOption) (*Rule, error)
	// Register a new ingest rule
	CreateRule(ctx context.Context, in *CreateRuleRequest, opts ...grpc.CallOption) (*Rule, error)
	// Given an Organization and Collection, return the Matchers derived from
	// the rules registered within that Collection. Matchers describe the processing graph for
	// resources and metrics that match. Matchers are described using Rules then built into
	// a tree of matchers that describe the transformations and output sinks that should be
	// applied.
	ListMatchers(ctx context.Context, in *MatchersRequest, opts ...grpc.CallOption) (*Matchers, error)
}

type netbeamClient struct {
	cc *grpc.ClientConn
}

func NewNetbeamClient(cc *grpc.ClientConn) NetbeamClient {
	return &netbeamClient{cc}
}

func (c *netbeamClient) FetchTile(ctx context.Context, in *TileRequest, opts ...grpc.CallOption) (*pond.TimeSeries, error) {
	out := new(pond.TimeSeries)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/FetchTile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) ListOrganizations(ctx context.Context, in *OrganizationListRequest, opts ...grpc.CallOption) (*OrganizationList, error) {
	out := new(OrganizationList)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/ListOrganizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) GetOrganization(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*Organization, error) {
	out := new(Organization)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/GetOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) ListCollections(ctx context.Context, in *CollectionListRequest, opts ...grpc.CallOption) (*CollectionList, error) {
	out := new(CollectionList)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/ListCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) GetCollection(ctx context.Context, in *CollectionRequest, opts ...grpc.CallOption) (*Collection, error) {
	out := new(Collection)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/GetCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) ListResourceGroups(ctx context.Context, in *ResourceGroupListRequest, opts ...grpc.CallOption) (*ResourceGroupList, error) {
	out := new(ResourceGroupList)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/ListResourceGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) GetResourceGroup(ctx context.Context, in *ResourceGroupRequest, opts ...grpc.CallOption) (*ResourceGroup, error) {
	out := new(ResourceGroup)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/getResourceGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) ListSources(ctx context.Context, in *SourceListRequest, opts ...grpc.CallOption) (*SourceList, error) {
	out := new(SourceList)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/ListSources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) GetSource(ctx context.Context, in *SourceRequest, opts ...grpc.CallOption) (*Source, error) {
	out := new(Source)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/GetSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) CreateSource(ctx context.Context, in *CreateSourceRequest, opts ...grpc.CallOption) (*Source, error) {
	out := new(Source)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/CreateSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) UpdateSourcePriority(ctx context.Context, in *ChangeSourcePriorityRequest, opts ...grpc.CallOption) (*Source, error) {
	out := new(Source)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/UpdateSourcePriority", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) DeleteSource(ctx context.Context, in *DeleteSourceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/DeleteSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) ListRules(ctx context.Context, in *RuleListRequest, opts ...grpc.CallOption) (*RuleList, error) {
	out := new(RuleList)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/ListRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) GetRule(ctx context.Context, in *RuleRequest, opts ...grpc.CallOption) (*Rule, error) {
	out := new(Rule)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/GetRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) CreateRule(ctx context.Context, in *CreateRuleRequest, opts ...grpc.CallOption) (*Rule, error) {
	out := new(Rule)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/CreateRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netbeamClient) ListMatchers(ctx context.Context, in *MatchersRequest, opts ...grpc.CallOption) (*Matchers, error) {
	out := new(Matchers)
	err := c.cc.Invoke(ctx, "/netbeam.Netbeam/ListMatchers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetbeamServer is the server API for Netbeam service.
type NetbeamServer interface {
	// Requests a tile from the netbeam core for a specific metric
	FetchTile(context.Context, *TileRequest) (*pond.TimeSeries, error)
	// Request the list of Organizations registered with netbeam
	ListOrganizations(context.Context, *OrganizationListRequest) (*OrganizationList, error)
	// Get a specific Organization by supplying it's short name
	GetOrganization(context.Context, *OrganizationRequest) (*Organization, error)
	// Request the list of Collections within an Organization registered with netbeam
	ListCollections(context.Context, *CollectionListRequest) (*CollectionList, error)
	// Get a specific Collection by supplying the Organization it is in as well as the Collection short name
	GetCollection(context.Context, *CollectionRequest) (*Collection, error)
	// Request the list of resource groups within a Collection registered with netbeam
	ListResourceGroups(context.Context, *ResourceGroupListRequest) (*ResourceGroupList, error)
	// Get a specific Resource Group by supplying the Collection it is in as well as the Resource Group short name
	GetResourceGroup(context.Context, *ResourceGroupRequest) (*ResourceGroup, error)
	// Request the list of all Sources within a Collection. The list will be returned in order of priority.
	ListSources(context.Context, *SourceListRequest) (*SourceList, error)
	// Get a specific Source by supplying the Organization, Collection and the Source index
	GetSource(context.Context, *SourceRequest) (*Source, error)
	// Registers a new Source with the Collection
	CreateSource(context.Context, *CreateSourceRequest) (*Source, error)
	// Update the Source priority
	UpdateSourcePriority(context.Context, *ChangeSourcePriorityRequest) (*Source, error)
	// Delete the Source
	DeleteSource(context.Context, *DeleteSourceRequest) (*Empty, error)
	// Request a list of all ingest rules registered to the Collection
	ListRules(context.Context, *RuleListRequest) (*RuleList, error)
	// Get a specific rule by supplying the Organization, Collection and rule identifier
	GetRule(context.Context, *RuleRequest) (*Rule, error)
	// Register a new ingest rule
	CreateRule(context.Context, *CreateRuleRequest) (*Rule, error)
	// Given an Organization and Collection, return the Matchers derived from
	// the rules registered within that Collection. Matchers describe the processing graph for
	// resources and metrics that match. Matchers are described using Rules then built into
	// a tree of matchers that describe the transformations and output sinks that should be
	// applied.
	ListMatchers(context.Context, *MatchersRequest) (*Matchers, error)
}

// UnimplementedNetbeamServer can be embedded to have forward compatible implementations.
type UnimplementedNetbeamServer struct {
}

func (*UnimplementedNetbeamServer) FetchTile(ctx context.Context, req *TileRequest) (*pond.TimeSeries, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchTile not implemented")
}
func (*UnimplementedNetbeamServer) ListOrganizations(ctx context.Context, req *OrganizationListRequest) (*OrganizationList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrganizations not implemented")
}
func (*UnimplementedNetbeamServer) GetOrganization(ctx context.Context, req *OrganizationRequest) (*Organization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganization not implemented")
}
func (*UnimplementedNetbeamServer) ListCollections(ctx context.Context, req *CollectionListRequest) (*CollectionList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCollections not implemented")
}
func (*UnimplementedNetbeamServer) GetCollection(ctx context.Context, req *CollectionRequest) (*Collection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollection not implemented")
}
func (*UnimplementedNetbeamServer) ListResourceGroups(ctx context.Context, req *ResourceGroupListRequest) (*ResourceGroupList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResourceGroups not implemented")
}
func (*UnimplementedNetbeamServer) GetResourceGroup(ctx context.Context, req *ResourceGroupRequest) (*ResourceGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceGroup not implemented")
}
func (*UnimplementedNetbeamServer) ListSources(ctx context.Context, req *SourceListRequest) (*SourceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSources not implemented")
}
func (*UnimplementedNetbeamServer) GetSource(ctx context.Context, req *SourceRequest) (*Source, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSource not implemented")
}
func (*UnimplementedNetbeamServer) CreateSource(ctx context.Context, req *CreateSourceRequest) (*Source, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSource not implemented")
}
func (*UnimplementedNetbeamServer) UpdateSourcePriority(ctx context.Context, req *ChangeSourcePriorityRequest) (*Source, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSourcePriority not implemented")
}
func (*UnimplementedNetbeamServer) DeleteSource(ctx context.Context, req *DeleteSourceRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSource not implemented")
}
func (*UnimplementedNetbeamServer) ListRules(ctx context.Context, req *RuleListRequest) (*RuleList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRules not implemented")
}
func (*UnimplementedNetbeamServer) GetRule(ctx context.Context, req *RuleRequest) (*Rule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRule not implemented")
}
func (*UnimplementedNetbeamServer) CreateRule(ctx context.Context, req *CreateRuleRequest) (*Rule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRule not implemented")
}
func (*UnimplementedNetbeamServer) ListMatchers(ctx context.Context, req *MatchersRequest) (*Matchers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMatchers not implemented")
}

func RegisterNetbeamServer(s *grpc.Server, srv NetbeamServer) {
	s.RegisterService(&_Netbeam_serviceDesc, srv)
}

func _Netbeam_FetchTile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).FetchTile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/FetchTile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).FetchTile(ctx, req.(*TileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_ListOrganizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).ListOrganizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/ListOrganizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).ListOrganizations(ctx, req.(*OrganizationListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_GetOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).GetOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/GetOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).GetOrganization(ctx, req.(*OrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_ListCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CollectionListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).ListCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/ListCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).ListCollections(ctx, req.(*CollectionListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_GetCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).GetCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/GetCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).GetCollection(ctx, req.(*CollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_ListResourceGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceGroupListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).ListResourceGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/ListResourceGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).ListResourceGroups(ctx, req.(*ResourceGroupListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_GetResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).GetResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/GetResourceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).GetResourceGroup(ctx, req.(*ResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_ListSources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SourceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).ListSources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/ListSources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).ListSources(ctx, req.(*SourceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_GetSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).GetSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/GetSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).GetSource(ctx, req.(*SourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_CreateSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).CreateSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/CreateSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).CreateSource(ctx, req.(*CreateSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_UpdateSourcePriority_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeSourcePriorityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).UpdateSourcePriority(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/UpdateSourcePriority",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).UpdateSourcePriority(ctx, req.(*ChangeSourcePriorityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_DeleteSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).DeleteSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/DeleteSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).DeleteSource(ctx, req.(*DeleteSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_ListRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RuleListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).ListRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/ListRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).ListRules(ctx, req.(*RuleListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_GetRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).GetRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/GetRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).GetRule(ctx, req.(*RuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_CreateRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).CreateRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/CreateRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).CreateRule(ctx, req.(*CreateRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netbeam_ListMatchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetbeamServer).ListMatchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netbeam.Netbeam/ListMatchers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetbeamServer).ListMatchers(ctx, req.(*MatchersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Netbeam_serviceDesc = grpc.ServiceDesc{
	ServiceName: "netbeam.Netbeam",
	HandlerType: (*NetbeamServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchTile",
			Handler:    _Netbeam_FetchTile_Handler,
		},
		{
			MethodName: "ListOrganizations",
			Handler:    _Netbeam_ListOrganizations_Handler,
		},
		{
			MethodName: "GetOrganization",
			Handler:    _Netbeam_GetOrganization_Handler,
		},
		{
			MethodName: "ListCollections",
			Handler:    _Netbeam_ListCollections_Handler,
		},
		{
			MethodName: "GetCollection",
			Handler:    _Netbeam_GetCollection_Handler,
		},
		{
			MethodName: "ListResourceGroups",
			Handler:    _Netbeam_ListResourceGroups_Handler,
		},
		{
			MethodName: "getResourceGroup",
			Handler:    _Netbeam_GetResourceGroup_Handler,
		},
		{
			MethodName: "ListSources",
			Handler:    _Netbeam_ListSources_Handler,
		},
		{
			MethodName: "GetSource",
			Handler:    _Netbeam_GetSource_Handler,
		},
		{
			MethodName: "CreateSource",
			Handler:    _Netbeam_CreateSource_Handler,
		},
		{
			MethodName: "UpdateSourcePriority",
			Handler:    _Netbeam_UpdateSourcePriority_Handler,
		},
		{
			MethodName: "DeleteSource",
			Handler:    _Netbeam_DeleteSource_Handler,
		},
		{
			MethodName: "ListRules",
			Handler:    _Netbeam_ListRules_Handler,
		},
		{
			MethodName: "GetRule",
			Handler:    _Netbeam_GetRule_Handler,
		},
		{
			MethodName: "CreateRule",
			Handler:    _Netbeam_CreateRule_Handler,
		},
		{
			MethodName: "ListMatchers",
			Handler:    _Netbeam_ListMatchers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "netbeam.proto",
}
