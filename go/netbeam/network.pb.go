// Code generated by protoc-gen-go. DO NOT EDIT.
// source: network.proto

package esnet_netbeam_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Direction int32

const (
	Direction_IN  Direction = 0
	Direction_OUT Direction = 1
)

var Direction_name = map[int32]string{
	0: "IN",
	1: "OUT",
}
var Direction_value = map[string]int32{
	"IN":  0,
	"OUT": 1,
}

func (x Direction) String() string {
	return proto.EnumName(Direction_name, int32(x))
}
func (Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{0}
}

//
// A single timestamped Event containing a list of values associated
// with a single time for a specific network interface
type InterfaceEvent struct {
	// The device associated with this interface
	Device string `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	// The interface the traffic percentiles are calculated for
	Interface string `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
	// The direction of the Event (IN or OUT of the interface)
	Direction Direction `protobuf:"varint,3,opt,name=direction,proto3,enum=esnet.netbeam.v1.Direction" json:"direction,omitempty"`
	// An event associated with this interface, for example "current traffic"
	Event                *Event   `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InterfaceEvent) Reset()         { *m = InterfaceEvent{} }
func (m *InterfaceEvent) String() string { return proto.CompactTextString(m) }
func (*InterfaceEvent) ProtoMessage()    {}
func (*InterfaceEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{0}
}
func (m *InterfaceEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceEvent.Unmarshal(m, b)
}
func (m *InterfaceEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceEvent.Marshal(b, m, deterministic)
}
func (dst *InterfaceEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceEvent.Merge(dst, src)
}
func (m *InterfaceEvent) XXX_Size() int {
	return xxx_messageInfo_InterfaceEvent.Size(m)
}
func (m *InterfaceEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceEvent.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceEvent proto.InternalMessageInfo

func (m *InterfaceEvent) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *InterfaceEvent) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *InterfaceEvent) GetDirection() Direction {
	if m != nil {
		return m.Direction
	}
	return Direction_IN
}

func (m *InterfaceEvent) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

// *
// Represents a single interface
type InterfaceDetails struct {
	// The name of the interface
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The device the interface is associated with
	Device string `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	// The ifIndex from SNMP if applicable
	IfIndex string `protobuf:"bytes,3,opt,name=ifIndex,proto3" json:"ifIndex,omitempty"`
	// The interface description. At ESnet this encodes multiple additional fields
	// such as the site the interface faces, tags and so on
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The interface capacity or maximum theoretical data transfer speed, in bps
	Speed int32 `protobuf:"varint,5,opt,name=speed,proto3" json:"speed,omitempty"`
	// Either "SHOW" or "HIDE", depending on if this interface should be publically shown or not
	Visibility Visible `protobuf:"varint,6,opt,name=visibility,proto3,enum=esnet.netbeam.v1.Visible" json:"visibility,omitempty"`
	// The connection from this interface. May indicate a router to router connection
	// (e.g. "albq-asw1->albq-cr5"), or a site connection (e.g. "star-cr5->anl(as683)").
	Connection string `protobuf:"bytes,7,opt,name=connection,proto3" json:"connection,omitempty"`
	// The link type (e.g. "100ge" is 100 Gigabit Ethernet)
	Link string `protobuf:"bytes,8,opt,name=link,proto3" json:"link,omitempty"`
	// A list of tags associated with this interface
	Tags []string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	// Sector of the interface (typically "intercloud" or "intracloud")
	Sector string `protobuf:"bytes,10,opt,name=sector,proto3" json:"sector,omitempty"`
	// The name of the site this interface faces, if applicable
	Site string `protobuf:"bytes,11,opt,name=site,proto3" json:"site,omitempty"`
	// Flag to indicate that this interface is part of LHCONE
	Lhcone bool `protobuf:"varint,12,opt,name=lhcone,proto3" json:"lhcone,omitempty"`
	// Flag to indicate that this interface is part on an OSCARS circuit
	Oscars bool `protobuf:"varint,13,opt,name=oscars,proto3" json:"oscars,omitempty"`
	// Flag to indicate that the interface transmits data in and out of ESnet
	Intercloud bool `protobuf:"varint,14,opt,name=intercloud,proto3" json:"intercloud,omitempty"`
	// Flag to indicate that the interface transmits data within ESnet
	Intracloud           bool     `protobuf:"varint,15,opt,name=intracloud,proto3" json:"intracloud,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InterfaceDetails) Reset()         { *m = InterfaceDetails{} }
func (m *InterfaceDetails) String() string { return proto.CompactTextString(m) }
func (*InterfaceDetails) ProtoMessage()    {}
func (*InterfaceDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{1}
}
func (m *InterfaceDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceDetails.Unmarshal(m, b)
}
func (m *InterfaceDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceDetails.Marshal(b, m, deterministic)
}
func (dst *InterfaceDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceDetails.Merge(dst, src)
}
func (m *InterfaceDetails) XXX_Size() int {
	return xxx_messageInfo_InterfaceDetails.Size(m)
}
func (m *InterfaceDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceDetails.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceDetails proto.InternalMessageInfo

func (m *InterfaceDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InterfaceDetails) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *InterfaceDetails) GetIfIndex() string {
	if m != nil {
		return m.IfIndex
	}
	return ""
}

func (m *InterfaceDetails) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InterfaceDetails) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *InterfaceDetails) GetVisibility() Visible {
	if m != nil {
		return m.Visibility
	}
	return Visible_SHOW
}

func (m *InterfaceDetails) GetConnection() string {
	if m != nil {
		return m.Connection
	}
	return ""
}

func (m *InterfaceDetails) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *InterfaceDetails) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *InterfaceDetails) GetSector() string {
	if m != nil {
		return m.Sector
	}
	return ""
}

func (m *InterfaceDetails) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *InterfaceDetails) GetLhcone() bool {
	if m != nil {
		return m.Lhcone
	}
	return false
}

func (m *InterfaceDetails) GetOscars() bool {
	if m != nil {
		return m.Oscars
	}
	return false
}

func (m *InterfaceDetails) GetIntercloud() bool {
	if m != nil {
		return m.Intercloud
	}
	return false
}

func (m *InterfaceDetails) GetIntracloud() bool {
	if m != nil {
		return m.Intracloud
	}
	return false
}

// *
// Response containing a list of `interfaces`. Each element of the list is
// an `InterfaceDetails` object containing extracted information known about
// this interface.
type InterfaceList struct {
	Interfaces           []*InterfaceDetails `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *InterfaceList) Reset()         { *m = InterfaceList{} }
func (m *InterfaceList) String() string { return proto.CompactTextString(m) }
func (*InterfaceList) ProtoMessage()    {}
func (*InterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{2}
}
func (m *InterfaceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceList.Unmarshal(m, b)
}
func (m *InterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceList.Marshal(b, m, deterministic)
}
func (dst *InterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceList.Merge(dst, src)
}
func (m *InterfaceList) XXX_Size() int {
	return xxx_messageInfo_InterfaceList.Size(m)
}
func (m *InterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceList proto.InternalMessageInfo

func (m *InterfaceList) GetInterfaces() []*InterfaceDetails {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

// *
// A map of a string key to an Event
type InterfaceTrafficList struct {
	Interfaces           []*InterfaceEvent `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InterfaceTrafficList) Reset()         { *m = InterfaceTrafficList{} }
func (m *InterfaceTrafficList) String() string { return proto.CompactTextString(m) }
func (*InterfaceTrafficList) ProtoMessage()    {}
func (*InterfaceTrafficList) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{3}
}
func (m *InterfaceTrafficList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceTrafficList.Unmarshal(m, b)
}
func (m *InterfaceTrafficList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceTrafficList.Marshal(b, m, deterministic)
}
func (dst *InterfaceTrafficList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceTrafficList.Merge(dst, src)
}
func (m *InterfaceTrafficList) XXX_Size() int {
	return xxx_messageInfo_InterfaceTrafficList.Size(m)
}
func (m *InterfaceTrafficList) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceTrafficList.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceTrafficList proto.InternalMessageInfo

func (m *InterfaceTrafficList) GetInterfaces() []*InterfaceEvent {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

//
// A list of percentiles from n = 0th percentile to 100th percentile in increments
// on a single percentile for a specific month.
//
// Each nth percentile in the list gives the traffic value for both in and out
// directions [in, out] for which n percent of the traffic samples are under that value.
// Traffic samples are 5 min averages over the month.
type InterfaceMonthlyUtilization struct {
	// The month the percentiles were calculated over
	Month string `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	// The device associated with this interface
	Device string `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	// The interface the traffic percentiles are calculated for
	Interface string `protobuf:"bytes,3,opt,name=interface,proto3" json:"interface,omitempty"`
	// A list of percentiles, from 0 percentile (0.0) to 100th percentile (100.0)
	Percentiles          []*Percentile `protobuf:"bytes,4,rep,name=percentiles,proto3" json:"percentiles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *InterfaceMonthlyUtilization) Reset()         { *m = InterfaceMonthlyUtilization{} }
func (m *InterfaceMonthlyUtilization) String() string { return proto.CompactTextString(m) }
func (*InterfaceMonthlyUtilization) ProtoMessage()    {}
func (*InterfaceMonthlyUtilization) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{4}
}
func (m *InterfaceMonthlyUtilization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceMonthlyUtilization.Unmarshal(m, b)
}
func (m *InterfaceMonthlyUtilization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceMonthlyUtilization.Marshal(b, m, deterministic)
}
func (dst *InterfaceMonthlyUtilization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceMonthlyUtilization.Merge(dst, src)
}
func (m *InterfaceMonthlyUtilization) XXX_Size() int {
	return xxx_messageInfo_InterfaceMonthlyUtilization.Size(m)
}
func (m *InterfaceMonthlyUtilization) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceMonthlyUtilization.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceMonthlyUtilization proto.InternalMessageInfo

func (m *InterfaceMonthlyUtilization) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *InterfaceMonthlyUtilization) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *InterfaceMonthlyUtilization) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *InterfaceMonthlyUtilization) GetPercentiles() []*Percentile {
	if m != nil {
		return m.Percentiles
	}
	return nil
}

//
// A request for a single traffic tile defined by the a
// Pond index string. The request should include the network
// device and interface for the traffic required. You should
// also provide the aggregation type
type InterfaceTileRequest struct {
	// Pond index of the tile
	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	// The network interface to request
	Interface string `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
	// The device
	Device string `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	// Tile roll-up aggregation
	Agg                  AggregationType `protobuf:"varint,4,opt,name=agg,proto3,enum=esnet.netbeam.v1.AggregationType" json:"agg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InterfaceTileRequest) Reset()         { *m = InterfaceTileRequest{} }
func (m *InterfaceTileRequest) String() string { return proto.CompactTextString(m) }
func (*InterfaceTileRequest) ProtoMessage()    {}
func (*InterfaceTileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{5}
}
func (m *InterfaceTileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceTileRequest.Unmarshal(m, b)
}
func (m *InterfaceTileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceTileRequest.Marshal(b, m, deterministic)
}
func (dst *InterfaceTileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceTileRequest.Merge(dst, src)
}
func (m *InterfaceTileRequest) XXX_Size() int {
	return xxx_messageInfo_InterfaceTileRequest.Size(m)
}
func (m *InterfaceTileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceTileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceTileRequest proto.InternalMessageInfo

func (m *InterfaceTileRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *InterfaceTileRequest) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *InterfaceTileRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *InterfaceTileRequest) GetAgg() AggregationType {
	if m != nil {
		return m.Agg
	}
	return AggregationType_NONE
}

type InterfaceTrafficRequest struct {
	// Lower time bound
	Begin int64 `protobuf:"varint,1,opt,name=begin,proto3" json:"begin,omitempty"`
	// Upper time bound
	End int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	// The network interface to request
	Interface string `protobuf:"bytes,3,opt,name=interface,proto3" json:"interface,omitempty"`
	// The device
	Device string `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	// Aggregation. If data request is of sufficent duration returned data
	// will be rolled up. This lets you specify the aggregation used for that
	// rollup. (Currently only AVG is used)
	Agg                  AggregationType `protobuf:"varint,5,opt,name=agg,proto3,enum=esnet.netbeam.v1.AggregationType" json:"agg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InterfaceTrafficRequest) Reset()         { *m = InterfaceTrafficRequest{} }
func (m *InterfaceTrafficRequest) String() string { return proto.CompactTextString(m) }
func (*InterfaceTrafficRequest) ProtoMessage()    {}
func (*InterfaceTrafficRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{6}
}
func (m *InterfaceTrafficRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceTrafficRequest.Unmarshal(m, b)
}
func (m *InterfaceTrafficRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceTrafficRequest.Marshal(b, m, deterministic)
}
func (dst *InterfaceTrafficRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceTrafficRequest.Merge(dst, src)
}
func (m *InterfaceTrafficRequest) XXX_Size() int {
	return xxx_messageInfo_InterfaceTrafficRequest.Size(m)
}
func (m *InterfaceTrafficRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceTrafficRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceTrafficRequest proto.InternalMessageInfo

func (m *InterfaceTrafficRequest) GetBegin() int64 {
	if m != nil {
		return m.Begin
	}
	return 0
}

func (m *InterfaceTrafficRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *InterfaceTrafficRequest) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *InterfaceTrafficRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *InterfaceTrafficRequest) GetAgg() AggregationType {
	if m != nil {
		return m.Agg
	}
	return AggregationType_NONE
}

// *
// Requests for the list of interfaces. Currently takes has no options
type InterfaceListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InterfaceListRequest) Reset()         { *m = InterfaceListRequest{} }
func (m *InterfaceListRequest) String() string { return proto.CompactTextString(m) }
func (*InterfaceListRequest) ProtoMessage()    {}
func (*InterfaceListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{7}
}
func (m *InterfaceListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceListRequest.Unmarshal(m, b)
}
func (m *InterfaceListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceListRequest.Marshal(b, m, deterministic)
}
func (dst *InterfaceListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceListRequest.Merge(dst, src)
}
func (m *InterfaceListRequest) XXX_Size() int {
	return xxx_messageInfo_InterfaceListRequest.Size(m)
}
func (m *InterfaceListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceListRequest proto.InternalMessageInfo

// *
// Requests for the list of interface current traffic. Currently takes has no options
type InterfaceTrafficListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InterfaceTrafficListRequest) Reset()         { *m = InterfaceTrafficListRequest{} }
func (m *InterfaceTrafficListRequest) String() string { return proto.CompactTextString(m) }
func (*InterfaceTrafficListRequest) ProtoMessage()    {}
func (*InterfaceTrafficListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{8}
}
func (m *InterfaceTrafficListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceTrafficListRequest.Unmarshal(m, b)
}
func (m *InterfaceTrafficListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceTrafficListRequest.Marshal(b, m, deterministic)
}
func (dst *InterfaceTrafficListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceTrafficListRequest.Merge(dst, src)
}
func (m *InterfaceTrafficListRequest) XXX_Size() int {
	return xxx_messageInfo_InterfaceTrafficListRequest.Size(m)
}
func (m *InterfaceTrafficListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceTrafficListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceTrafficListRequest proto.InternalMessageInfo

type InterfaceUtilizationRequest struct {
	// The month of the request in the format YYYY-MM
	Month string `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	// The network interface to request
	Interface string `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
	// The device
	Device               string   `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InterfaceUtilizationRequest) Reset()         { *m = InterfaceUtilizationRequest{} }
func (m *InterfaceUtilizationRequest) String() string { return proto.CompactTextString(m) }
func (*InterfaceUtilizationRequest) ProtoMessage()    {}
func (*InterfaceUtilizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{9}
}
func (m *InterfaceUtilizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceUtilizationRequest.Unmarshal(m, b)
}
func (m *InterfaceUtilizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceUtilizationRequest.Marshal(b, m, deterministic)
}
func (dst *InterfaceUtilizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceUtilizationRequest.Merge(dst, src)
}
func (m *InterfaceUtilizationRequest) XXX_Size() int {
	return xxx_messageInfo_InterfaceUtilizationRequest.Size(m)
}
func (m *InterfaceUtilizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceUtilizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceUtilizationRequest proto.InternalMessageInfo

func (m *InterfaceUtilizationRequest) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *InterfaceUtilizationRequest) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *InterfaceUtilizationRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type AuthorizeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizeRequest) Reset()         { *m = AuthorizeRequest{} }
func (m *AuthorizeRequest) String() string { return proto.CompactTextString(m) }
func (*AuthorizeRequest) ProtoMessage()    {}
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{10}
}
func (m *AuthorizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeRequest.Unmarshal(m, b)
}
func (m *AuthorizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeRequest.Marshal(b, m, deterministic)
}
func (dst *AuthorizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeRequest.Merge(dst, src)
}
func (m *AuthorizeRequest) XXX_Size() int {
	return xxx_messageInfo_AuthorizeRequest.Size(m)
}
func (m *AuthorizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeRequest proto.InternalMessageInfo

type AuthorizeResponse struct {
	// If there is an error, that will be shown here
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// If there is not an error the JWT containing the user
	// temp access token will be returned. This token should be used
	// in future API calls
	AccessToken          string   `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizeResponse) Reset()         { *m = AuthorizeResponse{} }
func (m *AuthorizeResponse) String() string { return proto.CompactTextString(m) }
func (*AuthorizeResponse) ProtoMessage()    {}
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_6c5cd6d12b8985bc, []int{11}
}
func (m *AuthorizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeResponse.Unmarshal(m, b)
}
func (m *AuthorizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeResponse.Marshal(b, m, deterministic)
}
func (dst *AuthorizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeResponse.Merge(dst, src)
}
func (m *AuthorizeResponse) XXX_Size() int {
	return xxx_messageInfo_AuthorizeResponse.Size(m)
}
func (m *AuthorizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeResponse proto.InternalMessageInfo

func (m *AuthorizeResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *AuthorizeResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func init() {
	proto.RegisterType((*InterfaceEvent)(nil), "esnet.netbeam.v1.InterfaceEvent")
	proto.RegisterType((*InterfaceDetails)(nil), "esnet.netbeam.v1.InterfaceDetails")
	proto.RegisterType((*InterfaceList)(nil), "esnet.netbeam.v1.InterfaceList")
	proto.RegisterType((*InterfaceTrafficList)(nil), "esnet.netbeam.v1.InterfaceTrafficList")
	proto.RegisterType((*InterfaceMonthlyUtilization)(nil), "esnet.netbeam.v1.InterfaceMonthlyUtilization")
	proto.RegisterType((*InterfaceTileRequest)(nil), "esnet.netbeam.v1.InterfaceTileRequest")
	proto.RegisterType((*InterfaceTrafficRequest)(nil), "esnet.netbeam.v1.InterfaceTrafficRequest")
	proto.RegisterType((*InterfaceListRequest)(nil), "esnet.netbeam.v1.InterfaceListRequest")
	proto.RegisterType((*InterfaceTrafficListRequest)(nil), "esnet.netbeam.v1.InterfaceTrafficListRequest")
	proto.RegisterType((*InterfaceUtilizationRequest)(nil), "esnet.netbeam.v1.InterfaceUtilizationRequest")
	proto.RegisterType((*AuthorizeRequest)(nil), "esnet.netbeam.v1.AuthorizeRequest")
	proto.RegisterType((*AuthorizeResponse)(nil), "esnet.netbeam.v1.AuthorizeResponse")
	proto.RegisterEnum("esnet.netbeam.v1.Direction", Direction_name, Direction_value)
}

func init() { proto.RegisterFile("network.proto", fileDescriptor_network_6c5cd6d12b8985bc) }

var fileDescriptor_network_6c5cd6d12b8985bc = []byte{
	// 948 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0xe7, 0x72, 0x76, 0x5c, 0x8f, 0xb1, 0x6b, 0x56, 0x25, 0x3d, 0xdc, 0xa4, 0x35, 0x87, 0xa8,
	0x0c, 0x52, 0x6d, 0xd5, 0x11, 0x12, 0x05, 0x09, 0x35, 0x55, 0x51, 0x14, 0x51, 0x5a, 0x74, 0x75,
	0x11, 0x6f, 0xd5, 0xe5, 0x3c, 0xb9, 0xac, 0x72, 0xde, 0x35, 0xb7, 0x1b, 0xd3, 0x34, 0xca, 0x0b,
	0x5f, 0x81, 0x07, 0x9e, 0x90, 0x78, 0x04, 0x81, 0x04, 0xdf, 0x84, 0x07, 0xbe, 0x02, 0x1f, 0x04,
	0xed, 0xee, 0xdd, 0x79, 0xe3, 0x73, 0x9d, 0xa6, 0x6f, 0x3b, 0x33, 0xbf, 0x9b, 0xf9, 0xcd, 0x5f,
	0x1b, 0x9a, 0x0c, 0xe5, 0x0f, 0x3c, 0x3d, 0xea, 0x4f, 0x53, 0x2e, 0x39, 0x69, 0xa3, 0x60, 0x28,
	0xfb, 0x0c, 0xe5, 0x3e, 0x86, 0x93, 0xfe, 0xec, 0x6e, 0x67, 0x33, 0xe6, 0x3c, 0x4e, 0x70, 0x10,
	0x4e, 0xe9, 0x20, 0x64, 0x8c, 0xcb, 0x50, 0x52, 0xce, 0x84, 0xc1, 0x77, 0x9a, 0x39, 0x52, 0x8b,
	0xfe, 0xdf, 0x0e, 0xb4, 0xf6, 0x98, 0xc4, 0xf4, 0x20, 0x8c, 0xf0, 0xcb, 0x19, 0x32, 0x49, 0x36,
	0x60, 0x7d, 0x8c, 0x33, 0x1a, 0xa1, 0xe7, 0x74, 0x9d, 0x5e, 0x3d, 0xc8, 0x24, 0xb2, 0x09, 0x75,
	0x9a, 0x23, 0xbd, 0x35, 0x6d, 0x9a, 0x2b, 0xc8, 0x3d, 0xa8, 0x8f, 0x69, 0x8a, 0x91, 0x8a, 0xe5,
	0xb9, 0x5d, 0xa7, 0xd7, 0x1a, 0xde, 0xe8, 0x2f, 0x72, 0xeb, 0x3f, 0xcc, 0x21, 0xc1, 0x1c, 0x4d,
	0xee, 0x40, 0x15, 0x55, 0x64, 0xaf, 0xd2, 0x75, 0x7a, 0x8d, 0xe1, 0xf5, 0xf2, 0x67, 0x9a, 0x58,
	0x60, 0x50, 0xfe, 0x5f, 0x2e, 0xb4, 0x0b, 0xca, 0x0f, 0x51, 0x86, 0x34, 0x11, 0x84, 0x40, 0x85,
	0x85, 0x93, 0x9c, 0xb2, 0x7e, 0x5b, 0x89, 0xac, 0x9d, 0x4b, 0xc4, 0x83, 0x1a, 0x3d, 0xd8, 0x63,
	0x63, 0x7c, 0xa1, 0x89, 0xd6, 0x83, 0x5c, 0x24, 0x5d, 0x68, 0x8c, 0x51, 0x44, 0x29, 0x9d, 0xea,
	0x34, 0x2a, 0xda, 0x6a, 0xab, 0xc8, 0x35, 0xa8, 0x8a, 0x29, 0xe2, 0xd8, 0xab, 0x76, 0x9d, 0x5e,
	0x35, 0x30, 0x02, 0xb9, 0x07, 0x30, 0xa3, 0x82, 0xee, 0xd3, 0x84, 0xca, 0x13, 0x6f, 0x5d, 0x67,
	0xff, 0x5e, 0x39, 0x8d, 0x6f, 0x15, 0x26, 0xc1, 0xc0, 0x02, 0x93, 0x9b, 0x00, 0x11, 0x67, 0x2c,
	0x2b, 0x5c, 0x4d, 0x47, 0xb4, 0x34, 0x2a, 0xb1, 0x84, 0xb2, 0x23, 0xef, 0x8a, 0x49, 0x4c, 0xbd,
	0x95, 0x4e, 0x86, 0xb1, 0xf0, 0xea, 0x5d, 0x57, 0xe9, 0xd4, 0x5b, 0x25, 0x2b, 0x30, 0x92, 0x3c,
	0xf5, 0xc0, 0x24, 0x6b, 0x24, 0x85, 0x15, 0x54, 0xa2, 0xd7, 0x30, 0xdf, 0xab, 0xb7, 0xc2, 0x26,
	0x87, 0x11, 0x67, 0xe8, 0xbd, 0xdd, 0x75, 0x7a, 0x57, 0x82, 0x4c, 0x52, 0x7a, 0x2e, 0xa2, 0x30,
	0x15, 0x5e, 0xd3, 0xe8, 0x8d, 0xa4, 0x38, 0xea, 0x46, 0x47, 0x09, 0x3f, 0x1e, 0x7b, 0x2d, 0x6d,
	0xb3, 0x34, 0x99, 0x3d, 0x0d, 0x8d, 0xfd, 0x6a, 0x61, 0xcf, 0x34, 0xfe, 0x53, 0x68, 0x16, 0x0d,
	0x7b, 0x44, 0x85, 0x24, 0x0f, 0x32, 0x87, 0x4a, 0x21, 0x3c, 0xa7, 0xeb, 0xf6, 0x1a, 0x43, 0xbf,
	0x5c, 0xaf, 0xc5, 0x2e, 0x07, 0xd6, 0x57, 0xfe, 0x77, 0x70, 0xad, 0xb0, 0x8f, 0xd2, 0xf0, 0xe0,
	0x80, 0x46, 0xda, 0xf7, 0xfd, 0x25, 0xbe, 0xbb, 0x2b, 0x7c, 0x9b, 0xd9, 0xb2, 0x3d, 0xff, 0xee,
	0xc0, 0x8d, 0xc2, 0xfc, 0x35, 0x67, 0xf2, 0x30, 0x39, 0x79, 0x26, 0x69, 0x42, 0x5f, 0x86, 0xf9,
	0x0c, 0x4c, 0x94, 0x36, 0x1b, 0x36, 0x23, 0xbc, 0x72, 0xda, 0xce, 0xad, 0x8d, 0xbb, 0xb8, 0x36,
	0x5f, 0x40, 0x63, 0x8a, 0x69, 0x84, 0x4c, 0xd2, 0x04, 0x85, 0x57, 0xd1, 0x74, 0x37, 0xcb, 0x74,
	0xbf, 0x29, 0x40, 0x81, 0xfd, 0x81, 0xff, 0xb3, 0x63, 0x97, 0x41, 0x99, 0xf1, 0xfb, 0x63, 0x14,
	0x52, 0x91, 0xa4, 0x7a, 0xc4, 0x33, 0x92, 0x5a, 0xb8, 0x60, 0x87, 0xe7, 0x29, 0xb8, 0xe7, 0x52,
	0xd8, 0x06, 0x37, 0x8c, 0x63, 0xbd, 0x0e, 0xad, 0xe1, 0xfb, 0x65, 0x72, 0x3b, 0x71, 0x9c, 0x62,
	0xac, 0x8b, 0x33, 0x3a, 0x99, 0x62, 0xa0, 0xd0, 0xfe, 0x9f, 0x0e, 0x5c, 0x5f, 0x6c, 0x90, 0x45,
	0x6e, 0x1f, 0x63, 0xca, 0x34, 0x39, 0x37, 0x30, 0x02, 0x69, 0x83, 0x8b, 0x6c, 0xac, 0x69, 0xb9,
	0x81, 0x7a, 0x5e, 0x50, 0xbb, 0x39, 0xdd, 0xca, 0x32, 0xba, 0xd5, 0x4b, 0xd1, 0xdd, 0xb0, 0xea,
	0xa8, 0xe6, 0x28, 0xa3, 0xea, 0x6f, 0x59, 0xb3, 0x60, 0x8d, 0x59, 0x6e, 0xa6, 0x96, 0xd9, 0x9a,
	0x11, 0x2b, 0xd1, 0x25, 0xa3, 0xf2, 0x46, 0x5d, 0xf0, 0x09, 0xb4, 0x77, 0x8e, 0xe5, 0x21, 0x4f,
	0xe9, 0xcb, 0xbc, 0xcb, 0xfe, 0x57, 0xf0, 0x8e, 0xa5, 0x13, 0x53, 0xce, 0x04, 0xaa, 0xa0, 0x98,
	0xa6, 0x3c, 0xcd, 0x83, 0x6a, 0x41, 0xdd, 0xb6, 0x30, 0x8a, 0x50, 0x88, 0x11, 0x3f, 0x42, 0x96,
	0x85, 0xb5, 0x55, 0x1f, 0x6f, 0x42, 0xbd, 0xb8, 0xcf, 0x64, 0x1d, 0xd6, 0xf6, 0x1e, 0xb7, 0xdf,
	0x22, 0x35, 0x70, 0x9f, 0x3c, 0x1b, 0xb5, 0x9d, 0xe1, 0x1f, 0x35, 0xa8, 0x3d, 0x36, 0x3f, 0x3d,
	0xe4, 0x08, 0xea, 0x45, 0x58, 0xb2, 0x64, 0x71, 0x17, 0x79, 0x76, 0x3e, 0x58, 0x89, 0x31, 0xbc,
	0xfd, 0x77, 0x7f, 0xfc, 0xf7, 0xbf, 0x9f, 0xd6, 0xae, 0x92, 0xe6, 0x60, 0x76, 0x77, 0x10, 0x16,
	0xfe, 0x05, 0xb4, 0x77, 0x51, 0xee, 0x24, 0x49, 0x51, 0x68, 0x41, 0x6e, 0xaf, 0x58, 0x68, 0xab,
	0x3d, 0x9d, 0x5b, 0x17, 0xe0, 0xfc, 0x0d, 0x1d, 0xb3, 0x4d, 0x5a, 0x2a, 0xe6, 0xfc, 0x06, 0x90,
	0x5f, 0x1c, 0xd8, 0x5a, 0x8c, 0xfa, 0x28, 0x94, 0x28, 0x64, 0x36, 0x04, 0xe4, 0xce, 0x0a, 0xd7,
	0xe5, 0x41, 0xe9, 0xdc, 0x7e, 0x3d, 0xb8, 0xff, 0xa1, 0x26, 0x74, 0x8b, 0x6c, 0x9d, 0x27, 0x34,
	0x48, 0x74, 0xf0, 0xe7, 0x32, 0x8b, 0xfe, 0x9b, 0x03, 0x37, 0x77, 0x51, 0x96, 0x16, 0x4c, 0xa1,
	0x1e, 0x9c, 0xa8, 0x43, 0xb0, 0xb2, 0x46, 0xd6, 0xa5, 0xe8, 0x2c, 0xb9, 0x36, 0x23, 0x3a, 0xc1,
	0xa7, 0x98, 0x52, 0x14, 0xfe, 0x7d, 0xcd, 0xe7, 0x33, 0xf2, 0xa9, 0xe2, 0x63, 0x26, 0x51, 0x0c,
	0x4e, 0xcd, 0xe3, 0xcc, 0x26, 0x78, 0x5a, 0xbc, 0xcf, 0x06, 0xea, 0x36, 0x29, 0xc5, 0x18, 0x5f,
	0x9c, 0x91, 0x5f, 0x1d, 0xf0, 0x5e, 0x45, 0x95, 0x7c, 0x74, 0x71, 0x59, 0x5e, 0x8f, 0xe7, 0xe7,
	0x9a, 0xe7, 0x27, 0x64, 0xfb, 0x52, 0x3c, 0xb3, 0x6a, 0xfe, 0x63, 0xaa, 0x99, 0xdd, 0xfa, 0x65,
	0x0b, 0xbd, 0xb2, 0xdd, 0xe5, 0xc5, 0xef, 0xac, 0x82, 0x97, 0x7f, 0x52, 0xfc, 0x27, 0x9a, 0xfd,
	0x1e, 0xd9, 0xbd, 0x0c, 0xfb, 0x89, 0xf1, 0xf3, 0xfc, 0x78, 0xee, 0x68, 0x70, 0xaa, 0x95, 0x67,
	0xfb, 0xeb, 0xfa, 0xef, 0xdd, 0xf6, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x3e, 0x73, 0xee,
	0x2e, 0x0a, 0x00, 0x00,
}
