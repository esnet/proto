// Code generated by protoc-gen-go. DO NOT EDIT.
// source: netbeam.proto

package esnet_netbeam_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Aggregation type of tile
type AggregationType int32

const (
	AggregationType_NONE AggregationType = 0
	AggregationType_AVG  AggregationType = 1
	AggregationType_MAX  AggregationType = 2
	AggregationType_MIN  AggregationType = 3
)

var AggregationType_name = map[int32]string{
	0: "NONE",
	1: "AVG",
	2: "MAX",
	3: "MIN",
}
var AggregationType_value = map[string]int32{
	"NONE": 0,
	"AVG":  1,
	"MAX":  2,
	"MIN":  3,
}

func (x AggregationType) String() string {
	return proto.EnumName(AggregationType_name, int32(x))
}
func (AggregationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{0}
}

// A general visibility enum, used to show or hide interfaces
type Visible int32

const (
	Visible_SHOW Visible = 0
	Visible_HIDE Visible = 1
)

var Visible_name = map[int32]string{
	0: "SHOW",
	1: "HIDE",
}
var Visible_value = map[string]int32{
	"SHOW": 0,
	"HIDE": 1,
}

func (x Visible) String() string {
	return proto.EnumName(Visible_name, int32(x))
}
func (Visible) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{1}
}

type SubscriptionCommand int32

const (
	SubscriptionCommand_SUBSCRIBE   SubscriptionCommand = 0
	SubscriptionCommand_UNSUBSCRIBE SubscriptionCommand = 1
)

var SubscriptionCommand_name = map[int32]string{
	0: "SUBSCRIBE",
	1: "UNSUBSCRIBE",
}
var SubscriptionCommand_value = map[string]int32{
	"SUBSCRIBE":   0,
	"UNSUBSCRIBE": 1,
}

func (x SubscriptionCommand) String() string {
	return proto.EnumName(SubscriptionCommand_name, int32(x))
}
func (SubscriptionCommand) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{2}
}

//
// Defines the value type of a Metric
type MetricType int32

const (
	MetricType_COUNTER MetricType = 0
	MetricType_GUAGE   MetricType = 1
	MetricType_STRING  MetricType = 3
	MetricType_BOOL    MetricType = 4
)

var MetricType_name = map[int32]string{
	0: "COUNTER",
	1: "GUAGE",
	3: "STRING",
	4: "BOOL",
}
var MetricType_value = map[string]int32{
	"COUNTER": 0,
	"GUAGE":   1,
	"STRING":  3,
	"BOOL":    4,
}

func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}
func (MetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{3}
}

//
// Defines the metric processor type. Metric processors are used to
// transform metric measurements into other metrics
type MetricProcessorType int32

const (
	MetricProcessorType_ROLLUP MetricProcessorType = 0
	MetricProcessorType_RATE   MetricProcessorType = 1
)

var MetricProcessorType_name = map[int32]string{
	0: "ROLLUP",
	1: "RATE",
}
var MetricProcessorType_value = map[string]int32{
	"ROLLUP": 0,
	"RATE":   1,
}

func (x MetricProcessorType) String() string {
	return proto.EnumName(MetricProcessorType_name, int32(x))
}
func (MetricProcessorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{4}
}

//
// Defines a metric output type, one of the available outputs that
// can be specified as a MetricOutput
type MetricOutputType int32

const (
	MetricOutputType_TILE    MetricOutputType = 0
	MetricOutputType_CURRENT MetricOutputType = 1
	MetricOutputType_ROLLING MetricOutputType = 2
)

var MetricOutputType_name = map[int32]string{
	0: "TILE",
	1: "CURRENT",
	2: "ROLLING",
}
var MetricOutputType_value = map[string]int32{
	"TILE":    0,
	"CURRENT": 1,
	"ROLLING": 2,
}

func (x MetricOutputType) String() string {
	return proto.EnumName(MetricOutputType_name, int32(x))
}
func (MetricOutputType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{5}
}

// A single strongly-typed value.
type TypedValue struct {
	// The typed value field.
	//
	// Types that are valid to be assigned to Value:
	//	*TypedValue_BoolValue
	//	*TypedValue_Int64Value
	//	*TypedValue_DoubleValue
	//	*TypedValue_StringValue
	Value                isTypedValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TypedValue) Reset()         { *m = TypedValue{} }
func (m *TypedValue) String() string { return proto.CompactTextString(m) }
func (*TypedValue) ProtoMessage()    {}
func (*TypedValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{0}
}
func (m *TypedValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypedValue.Unmarshal(m, b)
}
func (m *TypedValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypedValue.Marshal(b, m, deterministic)
}
func (dst *TypedValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypedValue.Merge(dst, src)
}
func (m *TypedValue) XXX_Size() int {
	return xxx_messageInfo_TypedValue.Size(m)
}
func (m *TypedValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TypedValue.DiscardUnknown(m)
}

var xxx_messageInfo_TypedValue proto.InternalMessageInfo

type isTypedValue_Value interface {
	isTypedValue_Value()
}

type TypedValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=bool_value,json=boolValue,oneof"`
}
type TypedValue_Int64Value struct {
	Int64Value int64 `protobuf:"varint,2,opt,name=int64_value,json=int64Value,oneof"`
}
type TypedValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,oneof"`
}
type TypedValue_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,oneof"`
}

func (*TypedValue_BoolValue) isTypedValue_Value()   {}
func (*TypedValue_Int64Value) isTypedValue_Value()  {}
func (*TypedValue_DoubleValue) isTypedValue_Value() {}
func (*TypedValue_StringValue) isTypedValue_Value() {}

func (m *TypedValue) GetValue() isTypedValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TypedValue) GetBoolValue() bool {
	if x, ok := m.GetValue().(*TypedValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *TypedValue) GetInt64Value() int64 {
	if x, ok := m.GetValue().(*TypedValue_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (m *TypedValue) GetDoubleValue() float64 {
	if x, ok := m.GetValue().(*TypedValue_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *TypedValue) GetStringValue() string {
	if x, ok := m.GetValue().(*TypedValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TypedValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TypedValue_OneofMarshaler, _TypedValue_OneofUnmarshaler, _TypedValue_OneofSizer, []interface{}{
		(*TypedValue_BoolValue)(nil),
		(*TypedValue_Int64Value)(nil),
		(*TypedValue_DoubleValue)(nil),
		(*TypedValue_StringValue)(nil),
	}
}

func _TypedValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TypedValue)
	// value
	switch x := m.Value.(type) {
	case *TypedValue_BoolValue:
		t := uint64(0)
		if x.BoolValue {
			t = 1
		}
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *TypedValue_Int64Value:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Int64Value))
	case *TypedValue_DoubleValue:
		b.EncodeVarint(3<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.DoubleValue))
	case *TypedValue_StringValue:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StringValue)
	case nil:
	default:
		return fmt.Errorf("TypedValue.Value has unexpected type %T", x)
	}
	return nil
}

func _TypedValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TypedValue)
	switch tag {
	case 1: // value.bool_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &TypedValue_BoolValue{x != 0}
		return true, err
	case 2: // value.int64_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &TypedValue_Int64Value{int64(x)}
		return true, err
	case 3: // value.double_value
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &TypedValue_DoubleValue{math.Float64frombits(x)}
		return true, err
	case 4: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &TypedValue_StringValue{x}
		return true, err
	default:
		return false, nil
	}
}

func _TypedValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TypedValue)
	// value
	switch x := m.Value.(type) {
	case *TypedValue_BoolValue:
		n += 1 // tag and wire
		n += 1
	case *TypedValue_Int64Value:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Int64Value))
	case *TypedValue_DoubleValue:
		n += 1 // tag and wire
		n += 8
	case *TypedValue_StringValue:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.StringValue)))
		n += len(x.StringValue)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

//
// A single Path to a resource on a namespace
type ResourcePath struct {
	// The namespace as a two element array containing organization and collection
	Namespace []string `protobuf:"bytes,1,rep,name=namespace" json:"namespace,omitempty"`
	// The resource path
	Resource             []string `protobuf:"bytes,2,rep,name=resource" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourcePath) Reset()         { *m = ResourcePath{} }
func (m *ResourcePath) String() string { return proto.CompactTextString(m) }
func (*ResourcePath) ProtoMessage()    {}
func (*ResourcePath) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{1}
}
func (m *ResourcePath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePath.Unmarshal(m, b)
}
func (m *ResourcePath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePath.Marshal(b, m, deterministic)
}
func (dst *ResourcePath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePath.Merge(dst, src)
}
func (m *ResourcePath) XXX_Size() int {
	return xxx_messageInfo_ResourcePath.Size(m)
}
func (m *ResourcePath) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePath.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePath proto.InternalMessageInfo

func (m *ResourcePath) GetNamespace() []string {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *ResourcePath) GetResource() []string {
	if m != nil {
		return m.Resource
	}
	return nil
}

// Defines the shape of data sent into netbeam
type MetricIngestEvent struct {
	// The resource path
	ResourcePath []string `protobuf:"bytes,1,rep,name=resourcePath" json:"resourcePath,omitempty"`
	// The metric path
	MetricPath *MetricPath `protobuf:"bytes,2,opt,name=metricPath" json:"metricPath,omitempty"`
	// the timestamp of the value in ms since 1/1/1970
	Timestamp float64 `protobuf:"fixed64,3,opt,name=timestamp" json:"timestamp,omitempty"`
	// the value of the metric at this timestamp
	Value *TypedValue `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	// tags for aggregation
	Tags                 []string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricIngestEvent) Reset()         { *m = MetricIngestEvent{} }
func (m *MetricIngestEvent) String() string { return proto.CompactTextString(m) }
func (*MetricIngestEvent) ProtoMessage()    {}
func (*MetricIngestEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{2}
}
func (m *MetricIngestEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricIngestEvent.Unmarshal(m, b)
}
func (m *MetricIngestEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricIngestEvent.Marshal(b, m, deterministic)
}
func (dst *MetricIngestEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricIngestEvent.Merge(dst, src)
}
func (m *MetricIngestEvent) XXX_Size() int {
	return xxx_messageInfo_MetricIngestEvent.Size(m)
}
func (m *MetricIngestEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricIngestEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MetricIngestEvent proto.InternalMessageInfo

func (m *MetricIngestEvent) GetResourcePath() []string {
	if m != nil {
		return m.ResourcePath
	}
	return nil
}

func (m *MetricIngestEvent) GetMetricPath() *MetricPath {
	if m != nil {
		return m.MetricPath
	}
	return nil
}

func (m *MetricIngestEvent) GetTimestamp() float64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MetricIngestEvent) GetValue() *TypedValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MetricIngestEvent) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// Specified a contiguous range of microsecond timestamps.
type TimeRange struct {
	// Inclusive lower bound
	Begin int64 `protobuf:"varint,1,opt,name=begin" json:"begin,omitempty"`
	// Exclusive upper bound
	End                  int64    `protobuf:"varint,2,opt,name=end" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}
func (*TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{3}
}
func (m *TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRange.Unmarshal(m, b)
}
func (m *TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRange.Marshal(b, m, deterministic)
}
func (dst *TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRange.Merge(dst, src)
}
func (m *TimeRange) XXX_Size() int {
	return xxx_messageInfo_TimeRange.Size(m)
}
func (m *TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRange proto.InternalMessageInfo

func (m *TimeRange) GetBegin() int64 {
	if m != nil {
		return m.Begin
	}
	return 0
}

func (m *TimeRange) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

//
// A single timestamped Event containing a list of values associated
// with athat single time. For example: "in" and "out" traffic [in, out] at the
// given timestamp.
type Event struct {
	// Event time - milliseconds since the unix epoch
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	// Event values
	Values               []*TypedValue `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{4}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Event) GetValues() []*TypedValue {
	if m != nil {
		return m.Values
	}
	return nil
}

//
// A percentile pair, with the percentile (e.g. 95th, and the value
// at that percentile)
type Percentile struct {
	Percentile           int32     `protobuf:"varint,1,opt,name=percentile" json:"percentile,omitempty"`
	Values               []float64 `protobuf:"fixed64,2,rep,packed,name=values" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Percentile) Reset()         { *m = Percentile{} }
func (m *Percentile) String() string { return proto.CompactTextString(m) }
func (*Percentile) ProtoMessage()    {}
func (*Percentile) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{5}
}
func (m *Percentile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Percentile.Unmarshal(m, b)
}
func (m *Percentile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Percentile.Marshal(b, m, deterministic)
}
func (dst *Percentile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Percentile.Merge(dst, src)
}
func (m *Percentile) XXX_Size() int {
	return xxx_messageInfo_Percentile.Size(m)
}
func (m *Percentile) XXX_DiscardUnknown() {
	xxx_messageInfo_Percentile.DiscardUnknown(m)
}

var xxx_messageInfo_Percentile proto.InternalMessageInfo

func (m *Percentile) GetPercentile() int32 {
	if m != nil {
		return m.Percentile
	}
	return 0
}

func (m *Percentile) GetValues() []float64 {
	if m != nil {
		return m.Values
	}
	return nil
}

//
// A TimeSeries, containing the a name and a list
// of points. Each point is an `Event` and contains a timestamp and
// a list of assocated values at that time. For example to represent
// interface traffic those values would be inbound and outbound network
// traffic. This is roughly equivalent to a Pond `TimeSeries`, but some
// transformation needs to occur.
type TimeSeries struct {
	// The name of the TimeSeries
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Columns of data in the TimeSeries
	Columns []string `protobuf:"bytes,2,rep,name=columns" json:"columns,omitempty"`
	// A list of `Event` points that make up the TimeSeries. Each
	// point contains a timestamp and list of values. Each value
	// corresponds to a column described in the `columns` field.
	Points               []*Event `protobuf:"bytes,3,rep,name=points" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeSeries) Reset()         { *m = TimeSeries{} }
func (m *TimeSeries) String() string { return proto.CompactTextString(m) }
func (*TimeSeries) ProtoMessage()    {}
func (*TimeSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{6}
}
func (m *TimeSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeSeries.Unmarshal(m, b)
}
func (m *TimeSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeSeries.Marshal(b, m, deterministic)
}
func (dst *TimeSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeSeries.Merge(dst, src)
}
func (m *TimeSeries) XXX_Size() int {
	return xxx_messageInfo_TimeSeries.Size(m)
}
func (m *TimeSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeSeries.DiscardUnknown(m)
}

var xxx_messageInfo_TimeSeries proto.InternalMessageInfo

func (m *TimeSeries) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TimeSeries) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *TimeSeries) GetPoints() []*Event {
	if m != nil {
		return m.Points
	}
	return nil
}

type MetricSubscriptionRequest struct {
	// Start or stop the stream
	Cmd SubscriptionCommand `protobuf:"varint,1,opt,name=cmd,enum=esnet.netbeam.v1.SubscriptionCommand" json:"cmd,omitempty"`
	// The metric to request, expressed as the namespace,
	// the resource path and the metric path
	Path                 *MetricPath `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MetricSubscriptionRequest) Reset()         { *m = MetricSubscriptionRequest{} }
func (m *MetricSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*MetricSubscriptionRequest) ProtoMessage()    {}
func (*MetricSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{7}
}
func (m *MetricSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricSubscriptionRequest.Unmarshal(m, b)
}
func (m *MetricSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricSubscriptionRequest.Marshal(b, m, deterministic)
}
func (dst *MetricSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricSubscriptionRequest.Merge(dst, src)
}
func (m *MetricSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_MetricSubscriptionRequest.Size(m)
}
func (m *MetricSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetricSubscriptionRequest proto.InternalMessageInfo

func (m *MetricSubscriptionRequest) GetCmd() SubscriptionCommand {
	if m != nil {
		return m.Cmd
	}
	return SubscriptionCommand_SUBSCRIBE
}

func (m *MetricSubscriptionRequest) GetPath() *MetricPath {
	if m != nil {
		return m.Path
	}
	return nil
}

//
// Defines the args for a ROLLUP processor, used to take measurements
// of one metric and build a new metric containing an aggregated rollup
// over a fixed window of size specified.
type RollupArgs struct {
	// The aggregation function to use e.g AVG
	Function AggregationType `protobuf:"varint,1,opt,name=function,enum=esnet.netbeam.v1.AggregationType" json:"function,omitempty"`
	// The window bucket to use, e.g. "5m"
	Window               string   `protobuf:"bytes,2,opt,name=window" json:"window,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollupArgs) Reset()         { *m = RollupArgs{} }
func (m *RollupArgs) String() string { return proto.CompactTextString(m) }
func (*RollupArgs) ProtoMessage()    {}
func (*RollupArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{8}
}
func (m *RollupArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollupArgs.Unmarshal(m, b)
}
func (m *RollupArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollupArgs.Marshal(b, m, deterministic)
}
func (dst *RollupArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollupArgs.Merge(dst, src)
}
func (m *RollupArgs) XXX_Size() int {
	return xxx_messageInfo_RollupArgs.Size(m)
}
func (m *RollupArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_RollupArgs.DiscardUnknown(m)
}

var xxx_messageInfo_RollupArgs proto.InternalMessageInfo

func (m *RollupArgs) GetFunction() AggregationType {
	if m != nil {
		return m.Function
	}
	return AggregationType_NONE
}

func (m *RollupArgs) GetWindow() string {
	if m != nil {
		return m.Window
	}
	return ""
}

//
// Defines the args for the RATE processor, used to take measurements
// and output a new metric with the derivative of those measurements.
// You can constrain that the output should always be positive, which
// is useful when you are getting rates from a supposedly always increasing
// counter
type RateArgs struct {
	AllowNegative        bool     `protobuf:"varint,1,opt,name=allowNegative" json:"allowNegative,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RateArgs) Reset()         { *m = RateArgs{} }
func (m *RateArgs) String() string { return proto.CompactTextString(m) }
func (*RateArgs) ProtoMessage()    {}
func (*RateArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{9}
}
func (m *RateArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateArgs.Unmarshal(m, b)
}
func (m *RateArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateArgs.Marshal(b, m, deterministic)
}
func (dst *RateArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateArgs.Merge(dst, src)
}
func (m *RateArgs) XXX_Size() int {
	return xxx_messageInfo_RateArgs.Size(m)
}
func (m *RateArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_RateArgs.DiscardUnknown(m)
}

var xxx_messageInfo_RateArgs proto.InternalMessageInfo

func (m *RateArgs) GetAllowNegative() bool {
	if m != nil {
		return m.AllowNegative
	}
	return false
}

//
// Defines a metric processor for transforming metric measurements into a new
// metric. All metric processors define the `type` (currently either ROLLUP or
// RATE) and the output `metric`. In addition they define `args` for those
// processors.
type MetricProcessor struct {
	// The type of this processor, e.g. ROLLUP or RATE
	Type MetricProcessorType `protobuf:"varint,1,opt,name=type,enum=esnet.netbeam.v1.MetricProcessorType" json:"type,omitempty"`
	// The args used by the processor
	//
	// Types that are valid to be assigned to Args:
	//	*MetricProcessor_RollupArgs
	//	*MetricProcessor_RateArgs
	Args isMetricProcessor_Args `protobuf_oneof:"args"`
	// The output metric after this processor has been applied
	Metric               string   `protobuf:"bytes,4,opt,name=metric" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricProcessor) Reset()         { *m = MetricProcessor{} }
func (m *MetricProcessor) String() string { return proto.CompactTextString(m) }
func (*MetricProcessor) ProtoMessage()    {}
func (*MetricProcessor) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{10}
}
func (m *MetricProcessor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricProcessor.Unmarshal(m, b)
}
func (m *MetricProcessor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricProcessor.Marshal(b, m, deterministic)
}
func (dst *MetricProcessor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricProcessor.Merge(dst, src)
}
func (m *MetricProcessor) XXX_Size() int {
	return xxx_messageInfo_MetricProcessor.Size(m)
}
func (m *MetricProcessor) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricProcessor.DiscardUnknown(m)
}

var xxx_messageInfo_MetricProcessor proto.InternalMessageInfo

type isMetricProcessor_Args interface {
	isMetricProcessor_Args()
}

type MetricProcessor_RollupArgs struct {
	RollupArgs *RollupArgs `protobuf:"bytes,2,opt,name=rollup_args,json=rollupArgs,oneof"`
}
type MetricProcessor_RateArgs struct {
	RateArgs *RateArgs `protobuf:"bytes,3,opt,name=rate_args,json=rateArgs,oneof"`
}

func (*MetricProcessor_RollupArgs) isMetricProcessor_Args() {}
func (*MetricProcessor_RateArgs) isMetricProcessor_Args()   {}

func (m *MetricProcessor) GetArgs() isMetricProcessor_Args {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *MetricProcessor) GetType() MetricProcessorType {
	if m != nil {
		return m.Type
	}
	return MetricProcessorType_ROLLUP
}

func (m *MetricProcessor) GetRollupArgs() *RollupArgs {
	if x, ok := m.GetArgs().(*MetricProcessor_RollupArgs); ok {
		return x.RollupArgs
	}
	return nil
}

func (m *MetricProcessor) GetRateArgs() *RateArgs {
	if x, ok := m.GetArgs().(*MetricProcessor_RateArgs); ok {
		return x.RateArgs
	}
	return nil
}

func (m *MetricProcessor) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MetricProcessor) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MetricProcessor_OneofMarshaler, _MetricProcessor_OneofUnmarshaler, _MetricProcessor_OneofSizer, []interface{}{
		(*MetricProcessor_RollupArgs)(nil),
		(*MetricProcessor_RateArgs)(nil),
	}
}

func _MetricProcessor_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MetricProcessor)
	// args
	switch x := m.Args.(type) {
	case *MetricProcessor_RollupArgs:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RollupArgs); err != nil {
			return err
		}
	case *MetricProcessor_RateArgs:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RateArgs); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MetricProcessor.Args has unexpected type %T", x)
	}
	return nil
}

func _MetricProcessor_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MetricProcessor)
	switch tag {
	case 2: // args.rollup_args
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RollupArgs)
		err := b.DecodeMessage(msg)
		m.Args = &MetricProcessor_RollupArgs{msg}
		return true, err
	case 3: // args.rate_args
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RateArgs)
		err := b.DecodeMessage(msg)
		m.Args = &MetricProcessor_RateArgs{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MetricProcessor_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MetricProcessor)
	// args
	switch x := m.Args.(type) {
	case *MetricProcessor_RollupArgs:
		s := proto.Size(x.RollupArgs)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MetricProcessor_RateArgs:
		s := proto.Size(x.RateArgs)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TileArgs struct {
	// The tile size to use e.g. tiles of 1 day would be "1d" and metrics
	// will be inserted into fixed window tiles of this size, which generally means
	// into a row in Bigtable containing all timestamps within the bounds of this span.
	Span                 string   `protobuf:"bytes,1,opt,name=span" json:"span,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TileArgs) Reset()         { *m = TileArgs{} }
func (m *TileArgs) String() string { return proto.CompactTextString(m) }
func (*TileArgs) ProtoMessage()    {}
func (*TileArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{11}
}
func (m *TileArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TileArgs.Unmarshal(m, b)
}
func (m *TileArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TileArgs.Marshal(b, m, deterministic)
}
func (dst *TileArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TileArgs.Merge(dst, src)
}
func (m *TileArgs) XXX_Size() int {
	return xxx_messageInfo_TileArgs.Size(m)
}
func (m *TileArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_TileArgs.DiscardUnknown(m)
}

var xxx_messageInfo_TileArgs proto.InternalMessageInfo

func (m *TileArgs) GetSpan() string {
	if m != nil {
		return m.Span
	}
	return ""
}

type CurrentArgs struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentArgs) Reset()         { *m = CurrentArgs{} }
func (m *CurrentArgs) String() string { return proto.CompactTextString(m) }
func (*CurrentArgs) ProtoMessage()    {}
func (*CurrentArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{12}
}
func (m *CurrentArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentArgs.Unmarshal(m, b)
}
func (m *CurrentArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentArgs.Marshal(b, m, deterministic)
}
func (dst *CurrentArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentArgs.Merge(dst, src)
}
func (m *CurrentArgs) XXX_Size() int {
	return xxx_messageInfo_CurrentArgs.Size(m)
}
func (m *CurrentArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentArgs.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentArgs proto.InternalMessageInfo

type MetricOutput struct {
	// The type of this sink, e.g. TILE or CURRENT
	Type MetricOutputType `protobuf:"varint,1,opt,name=type,enum=esnet.netbeam.v1.MetricOutputType" json:"type,omitempty"`
	// The sink args
	//
	// Types that are valid to be assigned to Args:
	//	*MetricOutput_TileArgs
	//	*MetricOutput_CurrentArgs
	//	*MetricOutput_RollingArgs
	Args                 isMetricOutput_Args `protobuf_oneof:"args"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MetricOutput) Reset()         { *m = MetricOutput{} }
func (m *MetricOutput) String() string { return proto.CompactTextString(m) }
func (*MetricOutput) ProtoMessage()    {}
func (*MetricOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{13}
}
func (m *MetricOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricOutput.Unmarshal(m, b)
}
func (m *MetricOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricOutput.Marshal(b, m, deterministic)
}
func (dst *MetricOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricOutput.Merge(dst, src)
}
func (m *MetricOutput) XXX_Size() int {
	return xxx_messageInfo_MetricOutput.Size(m)
}
func (m *MetricOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricOutput.DiscardUnknown(m)
}

var xxx_messageInfo_MetricOutput proto.InternalMessageInfo

type isMetricOutput_Args interface {
	isMetricOutput_Args()
}

type MetricOutput_TileArgs struct {
	TileArgs *TileArgs `protobuf:"bytes,2,opt,name=tile_args,json=tileArgs,oneof"`
}
type MetricOutput_CurrentArgs struct {
	CurrentArgs *CurrentArgs `protobuf:"bytes,3,opt,name=current_args,json=currentArgs,oneof"`
}
type MetricOutput_RollingArgs struct {
	RollingArgs *RollupArgs `protobuf:"bytes,4,opt,name=rolling_args,json=rollingArgs,oneof"`
}

func (*MetricOutput_TileArgs) isMetricOutput_Args()    {}
func (*MetricOutput_CurrentArgs) isMetricOutput_Args() {}
func (*MetricOutput_RollingArgs) isMetricOutput_Args() {}

func (m *MetricOutput) GetArgs() isMetricOutput_Args {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *MetricOutput) GetType() MetricOutputType {
	if m != nil {
		return m.Type
	}
	return MetricOutputType_TILE
}

func (m *MetricOutput) GetTileArgs() *TileArgs {
	if x, ok := m.GetArgs().(*MetricOutput_TileArgs); ok {
		return x.TileArgs
	}
	return nil
}

func (m *MetricOutput) GetCurrentArgs() *CurrentArgs {
	if x, ok := m.GetArgs().(*MetricOutput_CurrentArgs); ok {
		return x.CurrentArgs
	}
	return nil
}

func (m *MetricOutput) GetRollingArgs() *RollupArgs {
	if x, ok := m.GetArgs().(*MetricOutput_RollingArgs); ok {
		return x.RollingArgs
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MetricOutput) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MetricOutput_OneofMarshaler, _MetricOutput_OneofUnmarshaler, _MetricOutput_OneofSizer, []interface{}{
		(*MetricOutput_TileArgs)(nil),
		(*MetricOutput_CurrentArgs)(nil),
		(*MetricOutput_RollingArgs)(nil),
	}
}

func _MetricOutput_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MetricOutput)
	// args
	switch x := m.Args.(type) {
	case *MetricOutput_TileArgs:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TileArgs); err != nil {
			return err
		}
	case *MetricOutput_CurrentArgs:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CurrentArgs); err != nil {
			return err
		}
	case *MetricOutput_RollingArgs:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RollingArgs); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MetricOutput.Args has unexpected type %T", x)
	}
	return nil
}

func _MetricOutput_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MetricOutput)
	switch tag {
	case 2: // args.tile_args
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TileArgs)
		err := b.DecodeMessage(msg)
		m.Args = &MetricOutput_TileArgs{msg}
		return true, err
	case 3: // args.current_args
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CurrentArgs)
		err := b.DecodeMessage(msg)
		m.Args = &MetricOutput_CurrentArgs{msg}
		return true, err
	case 4: // args.rolling_args
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RollupArgs)
		err := b.DecodeMessage(msg)
		m.Args = &MetricOutput_RollingArgs{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MetricOutput_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MetricOutput)
	// args
	switch x := m.Args.(type) {
	case *MetricOutput_TileArgs:
		s := proto.Size(x.TileArgs)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MetricOutput_CurrentArgs:
		s := proto.Size(x.CurrentArgs)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MetricOutput_RollingArgs:
		s := proto.Size(x.RollingArgs)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MetricDescription struct {
	// The type of this metric, e.g. COUNTER, RATE, GUAGE, STRING, BOOL
	Type MetricType `protobuf:"varint,1,opt,name=type,enum=esnet.netbeam.v1.MetricType" json:"type,omitempty"`
	// A description for the metric
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// The units the metric is in
	Units string `protobuf:"bytes,3,opt,name=units" json:"units,omitempty"`
	// A list of wildcard strings which match resources this metric applies to
	Scopes []string `protobuf:"bytes,4,rep,name=scopes" json:"scopes,omitempty"`
	// The alignment period, for example you might align data to 30 second boundaries
	// by setting this to "30s". Aligning is necessary to be able to aggregate multiple
	// timeseries together because such operations are done using corresponding timestamps.
	Align                string   `protobuf:"bytes,5,opt,name=align" json:"align,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricDescription) Reset()         { *m = MetricDescription{} }
func (m *MetricDescription) String() string { return proto.CompactTextString(m) }
func (*MetricDescription) ProtoMessage()    {}
func (*MetricDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{14}
}
func (m *MetricDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricDescription.Unmarshal(m, b)
}
func (m *MetricDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricDescription.Marshal(b, m, deterministic)
}
func (dst *MetricDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricDescription.Merge(dst, src)
}
func (m *MetricDescription) XXX_Size() int {
	return xxx_messageInfo_MetricDescription.Size(m)
}
func (m *MetricDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricDescription.DiscardUnknown(m)
}

var xxx_messageInfo_MetricDescription proto.InternalMessageInfo

func (m *MetricDescription) GetType() MetricType {
	if m != nil {
		return m.Type
	}
	return MetricType_COUNTER
}

func (m *MetricDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MetricDescription) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

func (m *MetricDescription) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *MetricDescription) GetAlign() string {
	if m != nil {
		return m.Align
	}
	return ""
}

//
// A metric, including the meta data about the metric contained in the
// description field, along with `processors` and `outputs` that govern
// the behavior of the metric
type Metric struct {
	Path                 *MetricPath        `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Description          *MetricDescription `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Outputs              []*MetricOutput    `protobuf:"bytes,3,rep,name=outputs" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{15}
}
func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (dst *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(dst, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetPath() *MetricPath {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *Metric) GetDescription() *MetricDescription {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Metric) GetOutputs() []*MetricOutput {
	if m != nil {
		return m.Outputs
	}
	return nil
}

//
// Object used to create (register) a new metric. To do so
// you need to provide the path to the new metric which
// consists of the organization and collection the metric
// should be in, along with the new name of the metric.
// In the description portion of the request you provide
// details about the actual metric.
type CreateMetricRequest struct {
	Path                 *MetricPath        `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Description          *MetricDescription `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateMetricRequest) Reset()         { *m = CreateMetricRequest{} }
func (m *CreateMetricRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMetricRequest) ProtoMessage()    {}
func (*CreateMetricRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{16}
}
func (m *CreateMetricRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMetricRequest.Unmarshal(m, b)
}
func (m *CreateMetricRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMetricRequest.Marshal(b, m, deterministic)
}
func (dst *CreateMetricRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMetricRequest.Merge(dst, src)
}
func (m *CreateMetricRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMetricRequest.Size(m)
}
func (m *CreateMetricRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMetricRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMetricRequest proto.InternalMessageInfo

func (m *CreateMetricRequest) GetPath() *MetricPath {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *CreateMetricRequest) GetDescription() *MetricDescription {
	if m != nil {
		return m.Description
	}
	return nil
}

//
// Internal identifier for the Metric
type MetricId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricId) Reset()         { *m = MetricId{} }
func (m *MetricId) String() string { return proto.CompactTextString(m) }
func (*MetricId) ProtoMessage()    {}
func (*MetricId) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{17}
}
func (m *MetricId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricId.Unmarshal(m, b)
}
func (m *MetricId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricId.Marshal(b, m, deterministic)
}
func (dst *MetricId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricId.Merge(dst, src)
}
func (m *MetricId) XXX_Size() int {
	return xxx_messageInfo_MetricId.Size(m)
}
func (m *MetricId) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricId.DiscardUnknown(m)
}

var xxx_messageInfo_MetricId proto.InternalMessageInfo

func (m *MetricId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//
// Internal identifier for the MetricOutput
type MetricOutputId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricOutputId) Reset()         { *m = MetricOutputId{} }
func (m *MetricOutputId) String() string { return proto.CompactTextString(m) }
func (*MetricOutputId) ProtoMessage()    {}
func (*MetricOutputId) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{18}
}
func (m *MetricOutputId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricOutputId.Unmarshal(m, b)
}
func (m *MetricOutputId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricOutputId.Marshal(b, m, deterministic)
}
func (dst *MetricOutputId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricOutputId.Merge(dst, src)
}
func (m *MetricOutputId) XXX_Size() int {
	return xxx_messageInfo_MetricOutputId.Size(m)
}
func (m *MetricOutputId) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricOutputId.DiscardUnknown(m)
}

var xxx_messageInfo_MetricOutputId proto.InternalMessageInfo

func (m *MetricOutputId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//
// Internal identifier for the MetricProcessor
type MetricProcessorId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricProcessorId) Reset()         { *m = MetricProcessorId{} }
func (m *MetricProcessorId) String() string { return proto.CompactTextString(m) }
func (*MetricProcessorId) ProtoMessage()    {}
func (*MetricProcessorId) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{19}
}
func (m *MetricProcessorId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricProcessorId.Unmarshal(m, b)
}
func (m *MetricProcessorId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricProcessorId.Marshal(b, m, deterministic)
}
func (dst *MetricProcessorId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricProcessorId.Merge(dst, src)
}
func (m *MetricProcessorId) XXX_Size() int {
	return xxx_messageInfo_MetricProcessorId.Size(m)
}
func (m *MetricProcessorId) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricProcessorId.DiscardUnknown(m)
}

var xxx_messageInfo_MetricProcessorId proto.InternalMessageInfo

func (m *MetricProcessorId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MetricDescriptionList struct {
	// A list of MetricDesciption objects
	Descriptions         []*MetricDescription `protobuf:"bytes,1,rep,name=descriptions" json:"descriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MetricDescriptionList) Reset()         { *m = MetricDescriptionList{} }
func (m *MetricDescriptionList) String() string { return proto.CompactTextString(m) }
func (*MetricDescriptionList) ProtoMessage()    {}
func (*MetricDescriptionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{20}
}
func (m *MetricDescriptionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricDescriptionList.Unmarshal(m, b)
}
func (m *MetricDescriptionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricDescriptionList.Marshal(b, m, deterministic)
}
func (dst *MetricDescriptionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricDescriptionList.Merge(dst, src)
}
func (m *MetricDescriptionList) XXX_Size() int {
	return xxx_messageInfo_MetricDescriptionList.Size(m)
}
func (m *MetricDescriptionList) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricDescriptionList.DiscardUnknown(m)
}

var xxx_messageInfo_MetricDescriptionList proto.InternalMessageInfo

func (m *MetricDescriptionList) GetDescriptions() []*MetricDescription {
	if m != nil {
		return m.Descriptions
	}
	return nil
}

//
// A list of Metrics
type MetricList struct {
	Metrics              []*Metric `protobuf:"bytes,1,rep,name=metrics" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MetricList) Reset()         { *m = MetricList{} }
func (m *MetricList) String() string { return proto.CompactTextString(m) }
func (*MetricList) ProtoMessage()    {}
func (*MetricList) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{21}
}
func (m *MetricList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricList.Unmarshal(m, b)
}
func (m *MetricList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricList.Marshal(b, m, deterministic)
}
func (dst *MetricList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricList.Merge(dst, src)
}
func (m *MetricList) XXX_Size() int {
	return xxx_messageInfo_MetricList.Size(m)
}
func (m *MetricList) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricList.DiscardUnknown(m)
}

var xxx_messageInfo_MetricList proto.InternalMessageInfo

func (m *MetricList) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

//
// When requesting a list of metrics
type CollectionPath struct {
	// The organization the metrics are in
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	// The collection the metrics are in
	Collection           string   `protobuf:"bytes,2,opt,name=collection" json:"collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectionPath) Reset()         { *m = CollectionPath{} }
func (m *CollectionPath) String() string { return proto.CompactTextString(m) }
func (*CollectionPath) ProtoMessage()    {}
func (*CollectionPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{22}
}
func (m *CollectionPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionPath.Unmarshal(m, b)
}
func (m *CollectionPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionPath.Marshal(b, m, deterministic)
}
func (dst *CollectionPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionPath.Merge(dst, src)
}
func (m *CollectionPath) XXX_Size() int {
	return xxx_messageInfo_CollectionPath.Size(m)
}
func (m *CollectionPath) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionPath.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionPath proto.InternalMessageInfo

func (m *CollectionPath) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *CollectionPath) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

//
// Internal identifier for the Collection
type CollectionId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectionId) Reset()         { *m = CollectionId{} }
func (m *CollectionId) String() string { return proto.CompactTextString(m) }
func (*CollectionId) ProtoMessage()    {}
func (*CollectionId) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{23}
}
func (m *CollectionId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionId.Unmarshal(m, b)
}
func (m *CollectionId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionId.Marshal(b, m, deterministic)
}
func (dst *CollectionId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionId.Merge(dst, src)
}
func (m *CollectionId) XXX_Size() int {
	return xxx_messageInfo_CollectionId.Size(m)
}
func (m *CollectionId) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionId.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionId proto.InternalMessageInfo

func (m *CollectionId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MetricPath struct {
	// The organization the metric is in
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	// The collection the metric is in
	Collection string `protobuf:"bytes,2,opt,name=collection" json:"collection,omitempty"`
	// The name of the metric
	Metric               string   `protobuf:"bytes,3,opt,name=metric" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricPath) Reset()         { *m = MetricPath{} }
func (m *MetricPath) String() string { return proto.CompactTextString(m) }
func (*MetricPath) ProtoMessage()    {}
func (*MetricPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{24}
}
func (m *MetricPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricPath.Unmarshal(m, b)
}
func (m *MetricPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricPath.Marshal(b, m, deterministic)
}
func (dst *MetricPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricPath.Merge(dst, src)
}
func (m *MetricPath) XXX_Size() int {
	return xxx_messageInfo_MetricPath.Size(m)
}
func (m *MetricPath) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricPath.DiscardUnknown(m)
}

var xxx_messageInfo_MetricPath proto.InternalMessageInfo

func (m *MetricPath) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *MetricPath) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *MetricPath) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

type CreateMetricProcessorRequest struct {
	// The organization the metric is in
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	// The collection the metric is in
	Collection string `protobuf:"bytes,2,opt,name=collection" json:"collection,omitempty"`
	// The name of the metric
	Metric string `protobuf:"bytes,3,opt,name=metric" json:"metric,omitempty"`
	// The processor to add
	Processor            *MetricProcessor `protobuf:"bytes,4,opt,name=processor" json:"processor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateMetricProcessorRequest) Reset()         { *m = CreateMetricProcessorRequest{} }
func (m *CreateMetricProcessorRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMetricProcessorRequest) ProtoMessage()    {}
func (*CreateMetricProcessorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{25}
}
func (m *CreateMetricProcessorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMetricProcessorRequest.Unmarshal(m, b)
}
func (m *CreateMetricProcessorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMetricProcessorRequest.Marshal(b, m, deterministic)
}
func (dst *CreateMetricProcessorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMetricProcessorRequest.Merge(dst, src)
}
func (m *CreateMetricProcessorRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMetricProcessorRequest.Size(m)
}
func (m *CreateMetricProcessorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMetricProcessorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMetricProcessorRequest proto.InternalMessageInfo

func (m *CreateMetricProcessorRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *CreateMetricProcessorRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *CreateMetricProcessorRequest) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *CreateMetricProcessorRequest) GetProcessor() *MetricProcessor {
	if m != nil {
		return m.Processor
	}
	return nil
}

type CreateMetricOutputRequest struct {
	// The organization the metric is in
	Path *MetricPath `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	// The processor to add
	Output               *MetricOutput `protobuf:"bytes,2,opt,name=output" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateMetricOutputRequest) Reset()         { *m = CreateMetricOutputRequest{} }
func (m *CreateMetricOutputRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMetricOutputRequest) ProtoMessage()    {}
func (*CreateMetricOutputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{26}
}
func (m *CreateMetricOutputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMetricOutputRequest.Unmarshal(m, b)
}
func (m *CreateMetricOutputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMetricOutputRequest.Marshal(b, m, deterministic)
}
func (dst *CreateMetricOutputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMetricOutputRequest.Merge(dst, src)
}
func (m *CreateMetricOutputRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMetricOutputRequest.Size(m)
}
func (m *CreateMetricOutputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMetricOutputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMetricOutputRequest proto.InternalMessageInfo

func (m *CreateMetricOutputRequest) GetPath() *MetricPath {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *CreateMetricOutputRequest) GetOutput() *MetricOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

//
// Internal identifier for the Organization
type OrganizationId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrganizationId) Reset()         { *m = OrganizationId{} }
func (m *OrganizationId) String() string { return proto.CompactTextString(m) }
func (*OrganizationId) ProtoMessage()    {}
func (*OrganizationId) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{27}
}
func (m *OrganizationId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationId.Unmarshal(m, b)
}
func (m *OrganizationId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationId.Marshal(b, m, deterministic)
}
func (dst *OrganizationId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationId.Merge(dst, src)
}
func (m *OrganizationId) XXX_Size() int {
	return xxx_messageInfo_OrganizationId.Size(m)
}
func (m *OrganizationId) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationId.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationId proto.InternalMessageInfo

func (m *OrganizationId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateOrganizationRequest struct {
	// A short string id for the name. This name will be used in keys
	// thoughout the system, so a short concise name should be chosen.
	// The name needs to be globally unique.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The full UI friendly name
	FullName             string   `protobuf:"bytes,2,opt,name=fullName" json:"fullName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrganizationRequest) Reset()         { *m = CreateOrganizationRequest{} }
func (m *CreateOrganizationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrganizationRequest) ProtoMessage()    {}
func (*CreateOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{28}
}
func (m *CreateOrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrganizationRequest.Unmarshal(m, b)
}
func (m *CreateOrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrganizationRequest.Marshal(b, m, deterministic)
}
func (dst *CreateOrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrganizationRequest.Merge(dst, src)
}
func (m *CreateOrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrganizationRequest.Size(m)
}
func (m *CreateOrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrganizationRequest proto.InternalMessageInfo

func (m *CreateOrganizationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateOrganizationRequest) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

type CreateCollectionRequest struct {
	// The organization to attach this collection to
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	// A short string id for the collection. This name will be used in keys
	// thoughout the system, so a short concise name should be chosen.
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// A description of what the collection is that may be exposed in the UI
	Description          string   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCollectionRequest) Reset()         { *m = CreateCollectionRequest{} }
func (m *CreateCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCollectionRequest) ProtoMessage()    {}
func (*CreateCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_netbeam_2943e32d8bafdf66, []int{29}
}
func (m *CreateCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCollectionRequest.Unmarshal(m, b)
}
func (m *CreateCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCollectionRequest.Marshal(b, m, deterministic)
}
func (dst *CreateCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCollectionRequest.Merge(dst, src)
}
func (m *CreateCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCollectionRequest.Size(m)
}
func (m *CreateCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCollectionRequest proto.InternalMessageInfo

func (m *CreateCollectionRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *CreateCollectionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateCollectionRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*TypedValue)(nil), "esnet.netbeam.v1.TypedValue")
	proto.RegisterType((*ResourcePath)(nil), "esnet.netbeam.v1.ResourcePath")
	proto.RegisterType((*MetricIngestEvent)(nil), "esnet.netbeam.v1.MetricIngestEvent")
	proto.RegisterType((*TimeRange)(nil), "esnet.netbeam.v1.TimeRange")
	proto.RegisterType((*Event)(nil), "esnet.netbeam.v1.Event")
	proto.RegisterType((*Percentile)(nil), "esnet.netbeam.v1.Percentile")
	proto.RegisterType((*TimeSeries)(nil), "esnet.netbeam.v1.TimeSeries")
	proto.RegisterType((*MetricSubscriptionRequest)(nil), "esnet.netbeam.v1.MetricSubscriptionRequest")
	proto.RegisterType((*RollupArgs)(nil), "esnet.netbeam.v1.RollupArgs")
	proto.RegisterType((*RateArgs)(nil), "esnet.netbeam.v1.RateArgs")
	proto.RegisterType((*MetricProcessor)(nil), "esnet.netbeam.v1.MetricProcessor")
	proto.RegisterType((*TileArgs)(nil), "esnet.netbeam.v1.TileArgs")
	proto.RegisterType((*CurrentArgs)(nil), "esnet.netbeam.v1.CurrentArgs")
	proto.RegisterType((*MetricOutput)(nil), "esnet.netbeam.v1.MetricOutput")
	proto.RegisterType((*MetricDescription)(nil), "esnet.netbeam.v1.MetricDescription")
	proto.RegisterType((*Metric)(nil), "esnet.netbeam.v1.Metric")
	proto.RegisterType((*CreateMetricRequest)(nil), "esnet.netbeam.v1.CreateMetricRequest")
	proto.RegisterType((*MetricId)(nil), "esnet.netbeam.v1.MetricId")
	proto.RegisterType((*MetricOutputId)(nil), "esnet.netbeam.v1.MetricOutputId")
	proto.RegisterType((*MetricProcessorId)(nil), "esnet.netbeam.v1.MetricProcessorId")
	proto.RegisterType((*MetricDescriptionList)(nil), "esnet.netbeam.v1.MetricDescriptionList")
	proto.RegisterType((*MetricList)(nil), "esnet.netbeam.v1.MetricList")
	proto.RegisterType((*CollectionPath)(nil), "esnet.netbeam.v1.CollectionPath")
	proto.RegisterType((*CollectionId)(nil), "esnet.netbeam.v1.CollectionId")
	proto.RegisterType((*MetricPath)(nil), "esnet.netbeam.v1.MetricPath")
	proto.RegisterType((*CreateMetricProcessorRequest)(nil), "esnet.netbeam.v1.CreateMetricProcessorRequest")
	proto.RegisterType((*CreateMetricOutputRequest)(nil), "esnet.netbeam.v1.CreateMetricOutputRequest")
	proto.RegisterType((*OrganizationId)(nil), "esnet.netbeam.v1.OrganizationId")
	proto.RegisterType((*CreateOrganizationRequest)(nil), "esnet.netbeam.v1.CreateOrganizationRequest")
	proto.RegisterType((*CreateCollectionRequest)(nil), "esnet.netbeam.v1.CreateCollectionRequest")
	proto.RegisterEnum("esnet.netbeam.v1.AggregationType", AggregationType_name, AggregationType_value)
	proto.RegisterEnum("esnet.netbeam.v1.Visible", Visible_name, Visible_value)
	proto.RegisterEnum("esnet.netbeam.v1.SubscriptionCommand", SubscriptionCommand_name, SubscriptionCommand_value)
	proto.RegisterEnum("esnet.netbeam.v1.MetricType", MetricType_name, MetricType_value)
	proto.RegisterEnum("esnet.netbeam.v1.MetricProcessorType", MetricProcessorType_name, MetricProcessorType_value)
	proto.RegisterEnum("esnet.netbeam.v1.MetricOutputType", MetricOutputType_name, MetricOutputType_value)
}

func init() { proto.RegisterFile("netbeam.proto", fileDescriptor_netbeam_2943e32d8bafdf66) }

var fileDescriptor_netbeam_2943e32d8bafdf66 = []byte{
	// 1456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xdd, 0x6e, 0xdb, 0x54,
	0x1c, 0x8f, 0xf3, 0xed, 0x7f, 0xd2, 0xce, 0x9c, 0xb1, 0xad, 0x8b, 0xba, 0x92, 0x9d, 0x32, 0xa9,
	0xb4, 0x52, 0x37, 0xba, 0x51, 0x18, 0x02, 0x8d, 0xb6, 0x8b, 0x92, 0x4a, 0x5d, 0x52, 0x9d, 0xa4,
	0x1b, 0x88, 0x8b, 0xe1, 0x38, 0x67, 0x9e, 0x85, 0x63, 0x1b, 0xfb, 0xa4, 0xd3, 0xb8, 0x87, 0x4b,
	0xc4, 0x3b, 0x70, 0xc9, 0x23, 0xf0, 0x28, 0xbc, 0x00, 0xef, 0xc0, 0x0d, 0x3a, 0x1f, 0x76, 0x9c,
	0xc4, 0x69, 0x0b, 0x02, 0x71, 0x77, 0xfe, 0x7f, 0xff, 0xfe, 0xdf, 0x1f, 0xe7, 0x24, 0xb0, 0xe2,
	0x51, 0x36, 0xa4, 0xe6, 0x78, 0x37, 0x08, 0x7d, 0xe6, 0x23, 0x83, 0x46, 0x1e, 0x65, 0xbb, 0x31,
	0xf3, 0xfc, 0xc3, 0xc6, 0xba, 0xed, 0xfb, 0xb6, 0x4b, 0xef, 0x9b, 0x81, 0x73, 0xdf, 0xf4, 0x3c,
	0x9f, 0x99, 0xcc, 0xf1, 0xbd, 0x48, 0xe2, 0xf1, 0x2f, 0x1a, 0xc0, 0xe0, 0x6d, 0x40, 0x47, 0xcf,
	0x4d, 0x77, 0x42, 0xd1, 0x7b, 0x00, 0x43, 0xdf, 0x77, 0x5f, 0x9e, 0x73, 0x6a, 0x4d, 0x6b, 0x6a,
	0x5b, 0xd5, 0x4e, 0x8e, 0xe8, 0x9c, 0x27, 0x01, 0x77, 0xa1, 0xe6, 0x78, 0x6c, 0xff, 0x91, 0x42,
	0xe4, 0x9b, 0xda, 0x56, 0xa1, 0x93, 0x23, 0x20, 0x98, 0x12, 0xb2, 0x09, 0xf5, 0x91, 0x3f, 0x19,
	0xba, 0x54, 0x61, 0x0a, 0x4d, 0x6d, 0x4b, 0xeb, 0xe4, 0x48, 0x4d, 0x72, 0x13, 0x50, 0xc4, 0x42,
	0xc7, 0xb3, 0x15, 0xa8, 0xd8, 0xd4, 0xb6, 0x74, 0x0e, 0x92, 0x5c, 0x01, 0x3a, 0xac, 0x40, 0x49,
	0x7c, 0xc5, 0x1d, 0xa8, 0x13, 0x1a, 0xf9, 0x93, 0xd0, 0xa2, 0xa7, 0x26, 0x7b, 0x8d, 0xd6, 0x41,
	0xf7, 0xcc, 0x31, 0x8d, 0x02, 0xd3, 0xe2, 0x5e, 0x16, 0xb6, 0x74, 0x32, 0x65, 0xa0, 0x06, 0x54,
	0x43, 0x85, 0x5e, 0xcb, 0x8b, 0x8f, 0x09, 0x8d, 0x7f, 0xd7, 0xe0, 0x9d, 0x67, 0x94, 0x85, 0x8e,
	0x75, 0xec, 0xd9, 0x34, 0x62, 0xad, 0x73, 0xea, 0x31, 0x84, 0xa1, 0x1e, 0xa6, 0xf4, 0x2b, 0x95,
	0x33, 0x3c, 0xf4, 0x19, 0xc0, 0x58, 0x08, 0x0a, 0x04, 0x0f, 0xbc, 0xb6, 0xb7, 0xbe, 0x3b, 0x9f,
	0xee, 0xdd, 0x67, 0x09, 0x86, 0xa4, 0xf0, 0xdc, 0x63, 0xe6, 0x8c, 0x69, 0xc4, 0xcc, 0x71, 0x20,
	0x33, 0x42, 0xa6, 0x0c, 0xb4, 0xa7, 0x02, 0x15, 0x69, 0xc8, 0x54, 0x3b, 0xad, 0x11, 0x91, 0x50,
	0x84, 0xa0, 0xc8, 0x4c, 0x3b, 0x5a, 0x2b, 0x09, 0x5f, 0xc5, 0x19, 0x3f, 0x04, 0x7d, 0xe0, 0x8c,
	0x29, 0x31, 0x3d, 0x9b, 0xa2, 0x77, 0xa1, 0x34, 0xa4, 0xb6, 0xe3, 0x89, 0x32, 0x16, 0x88, 0x24,
	0x90, 0x01, 0x05, 0xea, 0x8d, 0x64, 0xe1, 0x08, 0x3f, 0xe2, 0xaf, 0xa1, 0x24, 0xb3, 0x30, 0xe3,
	0xa3, 0x14, 0x4a, 0xf9, 0xf8, 0x08, 0xca, 0xc2, 0x70, 0x24, 0x72, 0x7a, 0x99, 0x93, 0x0a, 0x8b,
	0x9f, 0x02, 0x9c, 0xd2, 0xd0, 0xa2, 0x1e, 0x73, 0x5c, 0x8a, 0x36, 0x00, 0x82, 0x84, 0x12, 0x26,
	0x4a, 0x24, 0xc5, 0x41, 0x37, 0x67, 0x6c, 0x68, 0x89, 0x96, 0x6f, 0x01, 0x78, 0x5c, 0x7d, 0x1a,
	0x3a, 0x34, 0xe2, 0x91, 0xf3, 0x62, 0x0b, 0x79, 0x9d, 0x88, 0x33, 0x5a, 0x83, 0x8a, 0xe5, 0xbb,
	0x93, 0xb1, 0x17, 0xa9, 0x92, 0xc7, 0x24, 0xba, 0x0f, 0xe5, 0xc0, 0x77, 0x3c, 0x16, 0xad, 0x15,
	0x84, 0xdf, 0xb7, 0x16, 0xfd, 0x16, 0xe1, 0x13, 0x05, 0xc3, 0x3f, 0x6a, 0x70, 0x5b, 0x56, 0xb1,
	0x3f, 0x19, 0x46, 0x56, 0xe8, 0x04, 0x7c, 0x60, 0x08, 0xfd, 0x6e, 0x42, 0x23, 0x86, 0x3e, 0x86,
	0x82, 0x35, 0x1e, 0x09, 0xdb, 0xab, 0x7b, 0xf7, 0x16, 0x75, 0xa5, 0x65, 0x8e, 0xfc, 0xf1, 0xd8,
	0xf4, 0x46, 0x84, 0x4b, 0xa0, 0x07, 0x50, 0x0c, 0xae, 0xda, 0x39, 0x02, 0x89, 0x2d, 0x00, 0xe2,
	0xbb, 0xee, 0x24, 0x38, 0x08, 0xed, 0x08, 0x7d, 0x0e, 0xd5, 0x57, 0x13, 0xcf, 0xe2, 0x7a, 0x95,
	0xf5, 0xbb, 0x8b, 0x3a, 0x0e, 0x6c, 0x3b, 0xa4, 0xb6, 0x98, 0x70, 0x5e, 0x0c, 0x92, 0x88, 0xf0,
	0xd4, 0xbe, 0x71, 0xbc, 0x91, 0xff, 0x46, 0x38, 0xa0, 0x13, 0x45, 0xe1, 0x07, 0x50, 0x25, 0x26,
	0xa3, 0xc2, 0xc4, 0xfb, 0xb0, 0x62, 0xba, 0xae, 0xff, 0xa6, 0x2b, 0x54, 0x9c, 0xab, 0x05, 0x40,
	0x66, 0x99, 0xf8, 0x0f, 0x0d, 0xae, 0x29, 0x5f, 0x43, 0xdf, 0xa2, 0x51, 0xe4, 0x87, 0xe8, 0x31,
	0x14, 0xd9, 0xdb, 0x80, 0x2e, 0x4f, 0xcb, 0x9c, 0x80, 0x70, 0x4e, 0x88, 0xa0, 0x27, 0x50, 0x0b,
	0x45, 0x94, 0x2f, 0xcd, 0xd0, 0x8e, 0x96, 0xa7, 0x67, 0x9a, 0x0a, 0xbe, 0x6f, 0xc2, 0x69, 0x62,
	0x1e, 0x83, 0x1e, 0x9a, 0x8c, 0x4a, 0xf1, 0x82, 0x10, 0x6f, 0x64, 0x88, 0xab, 0x20, 0x3b, 0x39,
	0x52, 0x0d, 0xe3, 0x80, 0x6f, 0x42, 0x59, 0xce, 0xa8, 0xdc, 0x3f, 0x44, 0x51, 0x87, 0x65, 0x28,
	0x72, 0x6d, 0x78, 0x03, 0xaa, 0x03, 0xc7, 0x95, 0x58, 0x04, 0xc5, 0x28, 0x30, 0xbd, 0xb8, 0xeb,
	0xf8, 0x19, 0xaf, 0x40, 0xed, 0x68, 0x12, 0x86, 0xd4, 0x63, 0x1c, 0x82, 0x7f, 0xce, 0x43, 0x5d,
	0x06, 0xda, 0x9b, 0xb0, 0x60, 0xc2, 0xd0, 0xfe, 0x4c, 0x5a, 0xf0, 0xb2, 0xb4, 0x48, 0x74, 0x2a,
	0x27, 0x8f, 0xf9, 0x24, 0xba, 0x34, 0x9d, 0x91, 0x8c, 0x90, 0x62, 0xd7, 0x78, 0x48, 0x2c, 0x76,
	0xf3, 0x10, 0xea, 0x96, 0x74, 0x29, 0x9d, 0x90, 0x3b, 0x8b, 0xd2, 0x29, 0xc7, 0xf9, 0xde, 0xb5,
	0xa6, 0x24, 0x3a, 0x80, 0x3a, 0xcf, 0x2f, 0xdf, 0xce, 0x42, 0x47, 0xf1, 0x4a, 0x35, 0xa9, 0x29,
	0x19, 0x4e, 0x26, 0x19, 0xfc, 0x35, 0xd9, 0xb7, 0x4f, 0x69, 0x32, 0x17, 0x7c, 0x16, 0x52, 0x79,
	0x59, 0x3a, 0x0b, 0xa9, 0x8c, 0x34, 0xa1, 0x36, 0x9a, 0x2a, 0x50, 0x3d, 0x9c, 0x66, 0xf1, 0x75,
	0x37, 0xf1, 0x1c, 0x26, 0x23, 0xd6, 0x89, 0x24, 0x78, 0x85, 0x23, 0xcb, 0x0f, 0x28, 0x0f, 0x82,
	0xaf, 0x05, 0x45, 0x71, 0xb4, 0xe9, 0x3a, 0xb6, 0xb7, 0x56, 0x92, 0x68, 0x41, 0xe0, 0xdf, 0x34,
	0x28, 0x4b, 0xd3, 0xc9, 0xb8, 0x6a, 0x57, 0x1d, 0x57, 0xd4, 0x5a, 0x74, 0xb1, 0xb6, 0xb7, 0xb9,
	0x4c, 0x30, 0x95, 0x8e, 0xd9, 0x38, 0x3e, 0x81, 0x8a, 0x2f, 0xfa, 0x21, 0x5e, 0x58, 0x1b, 0x17,
	0xb7, 0x0d, 0x89, 0xe1, 0xf8, 0x27, 0x0d, 0xae, 0x1f, 0x85, 0xd4, 0x64, 0x54, 0x7e, 0x8f, 0x57,
	0xd6, 0xff, 0x15, 0x0a, 0x6e, 0x40, 0x55, 0xdd, 0xb5, 0x23, 0xb4, 0x0a, 0x79, 0x67, 0xa4, 0x86,
	0x27, 0xef, 0x8c, 0x70, 0x13, 0x56, 0xd3, 0x51, 0x64, 0x20, 0x36, 0xe3, 0xce, 0x49, 0xb6, 0x46,
	0x06, 0xe8, 0x1b, 0xb8, 0xb1, 0xe0, 0xc4, 0x89, 0x13, 0x31, 0xd4, 0x86, 0x7a, 0xca, 0x95, 0x48,
	0x5c, 0xe9, 0x57, 0x8c, 0x61, 0x46, 0x10, 0x7f, 0x01, 0x20, 0x21, 0x42, 0xed, 0x1e, 0x54, 0xe4,
	0x8e, 0x88, 0x35, 0xae, 0x2d, 0xd3, 0x48, 0x62, 0x20, 0x1e, 0xc0, 0xea, 0x91, 0xef, 0xba, 0x54,
	0x2c, 0x62, 0xf1, 0x1a, 0xc0, 0x50, 0xf7, 0x43, 0xdb, 0xf4, 0x9c, 0xef, 0xcd, 0x64, 0x9f, 0xeb,
	0x64, 0x86, 0xc7, 0xef, 0x4a, 0x2b, 0x91, 0x52, 0x0d, 0x9f, 0xe2, 0xe0, 0x0d, 0xa8, 0x4f, 0xb5,
	0x66, 0x64, 0xe6, 0x75, 0xec, 0xf7, 0xbf, 0x65, 0x31, 0xb5, 0x2d, 0x0b, 0xe9, 0x6d, 0xc9, 0xa7,
	0x66, 0x3d, 0xdd, 0x77, 0x49, 0xbd, 0xe2, 0x06, 0xfc, 0x0f, 0x8d, 0xa3, 0x27, 0xa0, 0x07, 0xb1,
	0x3d, 0xb5, 0xa8, 0xee, 0x5e, 0x7a, 0xfd, 0x90, 0xa9, 0x0c, 0xfe, 0x41, 0x83, 0xdb, 0x69, 0xef,
	0xd5, 0x54, 0xfd, 0xe3, 0xd9, 0xd9, 0x87, 0xb2, 0x1c, 0x48, 0x35, 0x36, 0x97, 0x8d, 0xaf, 0x42,
	0xf3, 0x81, 0xe8, 0xa5, 0x12, 0x92, 0x51, 0xd1, 0x76, 0xec, 0x68, 0x1a, 0x17, 0x3b, 0x3a, 0x07,
	0xe6, 0x8f, 0xe0, 0x57, 0x13, 0xd7, 0xed, 0xf2, 0x87, 0x92, 0xcc, 0x66, 0x42, 0xe3, 0x08, 0x6e,
	0x49, 0x45, 0xd3, 0x06, 0xfa, 0x3b, 0xa5, 0x8a, 0xdf, 0x5f, 0xf9, 0xd4, 0xfb, 0x6b, 0x6e, 0x3f,
	0x17, 0x16, 0xf6, 0xf3, 0xf6, 0x3e, 0x5c, 0x9b, 0x7b, 0x9d, 0xa0, 0x2a, 0x14, 0xbb, 0xbd, 0x6e,
	0xcb, 0xc8, 0xa1, 0x0a, 0x14, 0x0e, 0x9e, 0xb7, 0x0d, 0x8d, 0x1f, 0x9e, 0x1d, 0x7c, 0x69, 0xe4,
	0xc5, 0xe1, 0xb8, 0x6b, 0x14, 0xb6, 0xef, 0x40, 0xe5, 0xb9, 0x13, 0x39, 0x43, 0x57, 0xe0, 0xfb,
	0x9d, 0xde, 0x0b, 0x23, 0xc7, 0x4f, 0x9d, 0xe3, 0xa7, 0x2d, 0x43, 0xdb, 0xfe, 0x08, 0xae, 0x67,
	0x3c, 0xb9, 0xd0, 0x0a, 0xe8, 0xfd, 0xb3, 0xc3, 0xfe, 0x11, 0x39, 0x3e, 0xe4, 0xfa, 0xaf, 0x41,
	0xed, 0xac, 0x3b, 0x65, 0x68, 0xdb, 0x9f, 0xc6, 0xd3, 0x21, 0x1c, 0xa9, 0x41, 0xe5, 0xa8, 0x77,
	0xd6, 0x1d, 0xb4, 0x88, 0x91, 0x43, 0x3a, 0x94, 0xda, 0x67, 0x07, 0xed, 0x96, 0xa1, 0x21, 0x80,
	0x72, 0x7f, 0x40, 0x8e, 0xbb, 0x6d, 0xa3, 0xc0, 0x4d, 0x1e, 0xf6, 0x7a, 0x27, 0x46, 0x71, 0x7b,
	0x07, 0xae, 0x67, 0x3c, 0x67, 0x38, 0x98, 0xf4, 0x4e, 0x4e, 0xce, 0x4e, 0xa5, 0x7f, 0xe4, 0x60,
	0xc0, 0x0d, 0xed, 0x83, 0x31, 0x7f, 0xc9, 0xf3, 0xaf, 0x83, 0xe3, 0x13, 0xee, 0x17, 0x37, 0x7c,
	0x46, 0x48, 0xab, 0x3b, 0x30, 0x34, 0x4e, 0x70, 0x05, 0xdc, 0x5c, 0x7e, 0xef, 0xcf, 0x12, 0x54,
	0xba, 0xb2, 0x65, 0x10, 0x05, 0xb4, 0x58, 0x78, 0xb4, 0x93, 0x71, 0xa7, 0x2f, 0x6b, 0x8f, 0x46,
	0x73, 0x11, 0x3c, 0xdb, 0x6d, 0x38, 0x87, 0x5e, 0x82, 0x31, 0xdf, 0x16, 0xe8, 0x83, 0x65, 0x46,
	0x16, 0x5a, 0xa7, 0x91, 0xd1, 0xe8, 0xe9, 0x05, 0x85, 0x73, 0xa8, 0x0f, 0xf5, 0xf4, 0xa4, 0xa1,
	0x7b, 0xcb, 0x94, 0xcf, 0xdc, 0x5f, 0x8d, 0xc6, 0xb2, 0x09, 0x12, 0x4a, 0x3d, 0xb8, 0x91, 0xb9,
	0x7c, 0xd0, 0xee, 0xc5, 0xda, 0xe7, 0xb7, 0x54, 0x63, 0xf3, 0xd2, 0xb5, 0x21, 0xec, 0x25, 0xc5,
	0x98, 0x79, 0xe9, 0xed, 0x5c, 0x6c, 0x6c, 0x66, 0xa9, 0x64, 0x15, 0x63, 0xf6, 0x2e, 0xc4, 0x39,
	0xd4, 0x83, 0x1a, 0xbf, 0x70, 0x24, 0x3f, 0x42, 0xcd, 0x8b, 0x92, 0xcb, 0xb7, 0x4f, 0x63, 0xe9,
	0x6e, 0xe2, 0x6a, 0x70, 0x0e, 0x9d, 0x82, 0xde, 0xa6, 0x4a, 0x1f, 0xba, 0x70, 0x91, 0x35, 0xae,
	0x72, 0x4b, 0xe2, 0x1c, 0xfa, 0x0a, 0x6a, 0x2f, 0x4c, 0x66, 0xbd, 0x56, 0x3a, 0x77, 0x96, 0x49,
	0x65, 0xfc, 0x8c, 0x6a, 0x2c, 0xfb, 0x15, 0x86, 0x73, 0x5b, 0xda, 0x03, 0x6d, 0x58, 0x16, 0xff,
	0x4e, 0x3c, 0xfc, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x6c, 0xa3, 0x70, 0x8c, 0xde, 0x10, 0x00, 0x00,
}
