/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
var netbeam_pb = require('./netbeam_pb.js');
goog.exportSymbol('proto.esnet.netbeam.v1.Direction', null, global);
goog.exportSymbol('proto.esnet.netbeam.v1.InterfaceDetails', null, global);
goog.exportSymbol('proto.esnet.netbeam.v1.InterfaceEvent', null, global);
goog.exportSymbol('proto.esnet.netbeam.v1.InterfaceList', null, global);
goog.exportSymbol('proto.esnet.netbeam.v1.InterfaceListRequest', null, global);
goog.exportSymbol('proto.esnet.netbeam.v1.InterfaceMonthlyUtilization', null, global);
goog.exportSymbol('proto.esnet.netbeam.v1.InterfaceTileRequest', null, global);
goog.exportSymbol('proto.esnet.netbeam.v1.InterfaceTrafficList', null, global);
goog.exportSymbol('proto.esnet.netbeam.v1.InterfaceTrafficListRequest', null, global);
goog.exportSymbol('proto.esnet.netbeam.v1.InterfaceTrafficRequest', null, global);
goog.exportSymbol('proto.esnet.netbeam.v1.InterfaceUtilizationRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.esnet.netbeam.v1.InterfaceEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.esnet.netbeam.v1.InterfaceEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.esnet.netbeam.v1.InterfaceEvent.displayName = 'proto.esnet.netbeam.v1.InterfaceEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.esnet.netbeam.v1.InterfaceEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.esnet.netbeam.v1.InterfaceEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    device: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_interface: jspb.Message.getFieldWithDefault(msg, 2, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 3, 0),
    event: (f = msg.getEvent()) && netbeam_pb.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.esnet.netbeam.v1.InterfaceEvent}
 */
proto.esnet.netbeam.v1.InterfaceEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.esnet.netbeam.v1.InterfaceEvent;
  return proto.esnet.netbeam.v1.InterfaceEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.esnet.netbeam.v1.InterfaceEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.esnet.netbeam.v1.InterfaceEvent}
 */
proto.esnet.netbeam.v1.InterfaceEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterface(value);
      break;
    case 3:
      var value = /** @type {!proto.esnet.netbeam.v1.Direction} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 4:
      var value = new netbeam_pb.Event;
      reader.readMessage(value,netbeam_pb.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.esnet.netbeam.v1.InterfaceEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.esnet.netbeam.v1.InterfaceEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInterface();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      netbeam_pb.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional string device = 1;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.setDevice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string interface = 2;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.getInterface = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.setInterface = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional Direction direction = 3;
 * @return {!proto.esnet.netbeam.v1.Direction}
 */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.getDirection = function() {
  return /** @type {!proto.esnet.netbeam.v1.Direction} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.esnet.netbeam.v1.Direction} value */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.setDirection = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional Event event = 4;
 * @return {?proto.esnet.netbeam.v1.Event}
 */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.getEvent = function() {
  return /** @type{?proto.esnet.netbeam.v1.Event} */ (
    jspb.Message.getWrapperField(this, netbeam_pb.Event, 4));
};


/** @param {?proto.esnet.netbeam.v1.Event|undefined} value */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.esnet.netbeam.v1.InterfaceEvent.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.esnet.netbeam.v1.InterfaceEvent.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.esnet.netbeam.v1.InterfaceDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.esnet.netbeam.v1.InterfaceDetails.repeatedFields_, null);
};
goog.inherits(proto.esnet.netbeam.v1.InterfaceDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.esnet.netbeam.v1.InterfaceDetails.displayName = 'proto.esnet.netbeam.v1.InterfaceDetails';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.esnet.netbeam.v1.InterfaceDetails.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.esnet.netbeam.v1.InterfaceDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.esnet.netbeam.v1.InterfaceDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    device: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ifindex: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    speed: jspb.Message.getFieldWithDefault(msg, 5, 0),
    visibility: jspb.Message.getFieldWithDefault(msg, 6, 0),
    connection: jspb.Message.getFieldWithDefault(msg, 7, ""),
    link: jspb.Message.getFieldWithDefault(msg, 8, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 9),
    sector: jspb.Message.getFieldWithDefault(msg, 10, ""),
    site: jspb.Message.getFieldWithDefault(msg, 11, ""),
    lhcone: jspb.Message.getFieldWithDefault(msg, 12, false),
    oscars: jspb.Message.getFieldWithDefault(msg, 13, false),
    intercloud: jspb.Message.getFieldWithDefault(msg, 14, false),
    intracloud: jspb.Message.getFieldWithDefault(msg, 15, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.esnet.netbeam.v1.InterfaceDetails}
 */
proto.esnet.netbeam.v1.InterfaceDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.esnet.netbeam.v1.InterfaceDetails;
  return proto.esnet.netbeam.v1.InterfaceDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.esnet.netbeam.v1.InterfaceDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.esnet.netbeam.v1.InterfaceDetails}
 */
proto.esnet.netbeam.v1.InterfaceDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIfindex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpeed(value);
      break;
    case 6:
      var value = /** @type {!proto.esnet.netbeam.v1.Visible} */ (reader.readEnum());
      msg.setVisibility(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnection(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSector(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSite(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLhcone(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOscars(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIntercloud(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIntracloud(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.esnet.netbeam.v1.InterfaceDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.esnet.netbeam.v1.InterfaceDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIfindex();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSpeed();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getVisibility();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getConnection();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getSector();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSite();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLhcone();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getOscars();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIntercloud();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getIntracloud();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string device = 2;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setDevice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string ifIndex = 3;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getIfindex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setIfindex = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 speed = 5;
 * @return {number}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setSpeed = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional Visible visibility = 6;
 * @return {!proto.esnet.netbeam.v1.Visible}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getVisibility = function() {
  return /** @type {!proto.esnet.netbeam.v1.Visible} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.esnet.netbeam.v1.Visible} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setVisibility = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string connection = 7;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getConnection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setConnection = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string link = 8;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setLink = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * repeated string tags = 9;
 * @return {!Array.<string>}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getTagsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array.<string>} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.esnet.netbeam.v1.InterfaceDetails.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string sector = 10;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getSector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setSector = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional string site = 11;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getSite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setSite = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional bool lhcone = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getLhcone = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setLhcone = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional bool oscars = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getOscars = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setOscars = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional bool intercloud = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getIntercloud = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setIntercloud = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional bool intracloud = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.getIntracloud = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.esnet.netbeam.v1.InterfaceDetails.prototype.setIntracloud = function(value) {
  jspb.Message.setField(this, 15, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.esnet.netbeam.v1.InterfaceList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.esnet.netbeam.v1.InterfaceList.repeatedFields_, null);
};
goog.inherits(proto.esnet.netbeam.v1.InterfaceList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.esnet.netbeam.v1.InterfaceList.displayName = 'proto.esnet.netbeam.v1.InterfaceList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.esnet.netbeam.v1.InterfaceList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.esnet.netbeam.v1.InterfaceList.prototype.toObject = function(opt_includeInstance) {
  return proto.esnet.netbeam.v1.InterfaceList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.esnet.netbeam.v1.InterfaceList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceList.toObject = function(includeInstance, msg) {
  var f, obj = {
    interfacesList: jspb.Message.toObjectList(msg.getInterfacesList(),
    proto.esnet.netbeam.v1.InterfaceDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.esnet.netbeam.v1.InterfaceList}
 */
proto.esnet.netbeam.v1.InterfaceList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.esnet.netbeam.v1.InterfaceList;
  return proto.esnet.netbeam.v1.InterfaceList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.esnet.netbeam.v1.InterfaceList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.esnet.netbeam.v1.InterfaceList}
 */
proto.esnet.netbeam.v1.InterfaceList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.esnet.netbeam.v1.InterfaceDetails;
      reader.readMessage(value,proto.esnet.netbeam.v1.InterfaceDetails.deserializeBinaryFromReader);
      msg.addInterfaces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.esnet.netbeam.v1.InterfaceList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.esnet.netbeam.v1.InterfaceList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.esnet.netbeam.v1.InterfaceList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterfacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.esnet.netbeam.v1.InterfaceDetails.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InterfaceDetails interfaces = 1;
 * @return {!Array.<!proto.esnet.netbeam.v1.InterfaceDetails>}
 */
proto.esnet.netbeam.v1.InterfaceList.prototype.getInterfacesList = function() {
  return /** @type{!Array.<!proto.esnet.netbeam.v1.InterfaceDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.esnet.netbeam.v1.InterfaceDetails, 1));
};


/** @param {!Array.<!proto.esnet.netbeam.v1.InterfaceDetails>} value */
proto.esnet.netbeam.v1.InterfaceList.prototype.setInterfacesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.esnet.netbeam.v1.InterfaceDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.esnet.netbeam.v1.InterfaceDetails}
 */
proto.esnet.netbeam.v1.InterfaceList.prototype.addInterfaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.esnet.netbeam.v1.InterfaceDetails, opt_index);
};


proto.esnet.netbeam.v1.InterfaceList.prototype.clearInterfacesList = function() {
  this.setInterfacesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.esnet.netbeam.v1.InterfaceTrafficList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.esnet.netbeam.v1.InterfaceTrafficList.repeatedFields_, null);
};
goog.inherits(proto.esnet.netbeam.v1.InterfaceTrafficList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.esnet.netbeam.v1.InterfaceTrafficList.displayName = 'proto.esnet.netbeam.v1.InterfaceTrafficList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.esnet.netbeam.v1.InterfaceTrafficList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.esnet.netbeam.v1.InterfaceTrafficList.prototype.toObject = function(opt_includeInstance) {
  return proto.esnet.netbeam.v1.InterfaceTrafficList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.esnet.netbeam.v1.InterfaceTrafficList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceTrafficList.toObject = function(includeInstance, msg) {
  var f, obj = {
    interfacesList: jspb.Message.toObjectList(msg.getInterfacesList(),
    proto.esnet.netbeam.v1.InterfaceEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.esnet.netbeam.v1.InterfaceTrafficList}
 */
proto.esnet.netbeam.v1.InterfaceTrafficList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.esnet.netbeam.v1.InterfaceTrafficList;
  return proto.esnet.netbeam.v1.InterfaceTrafficList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.esnet.netbeam.v1.InterfaceTrafficList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.esnet.netbeam.v1.InterfaceTrafficList}
 */
proto.esnet.netbeam.v1.InterfaceTrafficList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.esnet.netbeam.v1.InterfaceEvent;
      reader.readMessage(value,proto.esnet.netbeam.v1.InterfaceEvent.deserializeBinaryFromReader);
      msg.addInterfaces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.esnet.netbeam.v1.InterfaceTrafficList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.esnet.netbeam.v1.InterfaceTrafficList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.esnet.netbeam.v1.InterfaceTrafficList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceTrafficList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterfacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.esnet.netbeam.v1.InterfaceEvent.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InterfaceEvent interfaces = 1;
 * @return {!Array.<!proto.esnet.netbeam.v1.InterfaceEvent>}
 */
proto.esnet.netbeam.v1.InterfaceTrafficList.prototype.getInterfacesList = function() {
  return /** @type{!Array.<!proto.esnet.netbeam.v1.InterfaceEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.esnet.netbeam.v1.InterfaceEvent, 1));
};


/** @param {!Array.<!proto.esnet.netbeam.v1.InterfaceEvent>} value */
proto.esnet.netbeam.v1.InterfaceTrafficList.prototype.setInterfacesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.esnet.netbeam.v1.InterfaceEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.esnet.netbeam.v1.InterfaceEvent}
 */
proto.esnet.netbeam.v1.InterfaceTrafficList.prototype.addInterfaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.esnet.netbeam.v1.InterfaceEvent, opt_index);
};


proto.esnet.netbeam.v1.InterfaceTrafficList.prototype.clearInterfacesList = function() {
  this.setInterfacesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.repeatedFields_, null);
};
goog.inherits(proto.esnet.netbeam.v1.InterfaceMonthlyUtilization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.displayName = 'proto.esnet.netbeam.v1.InterfaceMonthlyUtilization';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.toObject = function(opt_includeInstance) {
  return proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.esnet.netbeam.v1.InterfaceMonthlyUtilization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.toObject = function(includeInstance, msg) {
  var f, obj = {
    month: jspb.Message.getFieldWithDefault(msg, 1, ""),
    device: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pb_interface: jspb.Message.getFieldWithDefault(msg, 3, ""),
    percentilesList: jspb.Message.toObjectList(msg.getPercentilesList(),
    netbeam_pb.Percentile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.esnet.netbeam.v1.InterfaceMonthlyUtilization}
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.esnet.netbeam.v1.InterfaceMonthlyUtilization;
  return proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.esnet.netbeam.v1.InterfaceMonthlyUtilization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.esnet.netbeam.v1.InterfaceMonthlyUtilization}
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMonth(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterface(value);
      break;
    case 4:
      var value = new netbeam_pb.Percentile;
      reader.readMessage(value,netbeam_pb.Percentile.deserializeBinaryFromReader);
      msg.addPercentiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.esnet.netbeam.v1.InterfaceMonthlyUtilization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMonth();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInterface();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPercentilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      netbeam_pb.Percentile.serializeBinaryToWriter
    );
  }
};


/**
 * optional string month = 1;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.getMonth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.setMonth = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string device = 2;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.setDevice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string interface = 3;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.getInterface = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.setInterface = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated Percentile percentiles = 4;
 * @return {!Array.<!proto.esnet.netbeam.v1.Percentile>}
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.getPercentilesList = function() {
  return /** @type{!Array.<!proto.esnet.netbeam.v1.Percentile>} */ (
    jspb.Message.getRepeatedWrapperField(this, netbeam_pb.Percentile, 4));
};


/** @param {!Array.<!proto.esnet.netbeam.v1.Percentile>} value */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.setPercentilesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.esnet.netbeam.v1.Percentile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.esnet.netbeam.v1.Percentile}
 */
proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.addPercentiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.esnet.netbeam.v1.Percentile, opt_index);
};


proto.esnet.netbeam.v1.InterfaceMonthlyUtilization.prototype.clearPercentilesList = function() {
  this.setPercentilesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.esnet.netbeam.v1.InterfaceTileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.esnet.netbeam.v1.InterfaceTileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.esnet.netbeam.v1.InterfaceTileRequest.displayName = 'proto.esnet.netbeam.v1.InterfaceTileRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.esnet.netbeam.v1.InterfaceTileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.esnet.netbeam.v1.InterfaceTileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.esnet.netbeam.v1.InterfaceTileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceTileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_interface: jspb.Message.getFieldWithDefault(msg, 2, ""),
    device: jspb.Message.getFieldWithDefault(msg, 3, ""),
    agg: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.esnet.netbeam.v1.InterfaceTileRequest}
 */
proto.esnet.netbeam.v1.InterfaceTileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.esnet.netbeam.v1.InterfaceTileRequest;
  return proto.esnet.netbeam.v1.InterfaceTileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.esnet.netbeam.v1.InterfaceTileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.esnet.netbeam.v1.InterfaceTileRequest}
 */
proto.esnet.netbeam.v1.InterfaceTileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterface(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 4:
      var value = /** @type {!proto.esnet.netbeam.v1.AggregationType} */ (reader.readEnum());
      msg.setAgg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.esnet.netbeam.v1.InterfaceTileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.esnet.netbeam.v1.InterfaceTileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.esnet.netbeam.v1.InterfaceTileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceTileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInterface();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAgg();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string index = 1;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceTileRequest.prototype.getIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceTileRequest.prototype.setIndex = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string interface = 2;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceTileRequest.prototype.getInterface = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceTileRequest.prototype.setInterface = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string device = 3;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceTileRequest.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceTileRequest.prototype.setDevice = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional AggregationType agg = 4;
 * @return {!proto.esnet.netbeam.v1.AggregationType}
 */
proto.esnet.netbeam.v1.InterfaceTileRequest.prototype.getAgg = function() {
  return /** @type {!proto.esnet.netbeam.v1.AggregationType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.esnet.netbeam.v1.AggregationType} value */
proto.esnet.netbeam.v1.InterfaceTileRequest.prototype.setAgg = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.esnet.netbeam.v1.InterfaceTrafficRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.esnet.netbeam.v1.InterfaceTrafficRequest.displayName = 'proto.esnet.netbeam.v1.InterfaceTrafficRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.esnet.netbeam.v1.InterfaceTrafficRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.esnet.netbeam.v1.InterfaceTrafficRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    begin: jspb.Message.getFieldWithDefault(msg, 1, 0),
    end: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pb_interface: jspb.Message.getFieldWithDefault(msg, 3, ""),
    device: jspb.Message.getFieldWithDefault(msg, 4, ""),
    agg: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.esnet.netbeam.v1.InterfaceTrafficRequest}
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.esnet.netbeam.v1.InterfaceTrafficRequest;
  return proto.esnet.netbeam.v1.InterfaceTrafficRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.esnet.netbeam.v1.InterfaceTrafficRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.esnet.netbeam.v1.InterfaceTrafficRequest}
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBegin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterface(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 5:
      var value = /** @type {!proto.esnet.netbeam.v1.AggregationType} */ (reader.readEnum());
      msg.setAgg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.esnet.netbeam.v1.InterfaceTrafficRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.esnet.netbeam.v1.InterfaceTrafficRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBegin();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getInterface();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAgg();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional int64 begin = 1;
 * @return {number}
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.getBegin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.setBegin = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 end = 2;
 * @return {number}
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.setEnd = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string interface = 3;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.getInterface = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.setInterface = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string device = 4;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.setDevice = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional AggregationType agg = 5;
 * @return {!proto.esnet.netbeam.v1.AggregationType}
 */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.getAgg = function() {
  return /** @type {!proto.esnet.netbeam.v1.AggregationType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.esnet.netbeam.v1.AggregationType} value */
proto.esnet.netbeam.v1.InterfaceTrafficRequest.prototype.setAgg = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.esnet.netbeam.v1.InterfaceListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.esnet.netbeam.v1.InterfaceListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.esnet.netbeam.v1.InterfaceListRequest.displayName = 'proto.esnet.netbeam.v1.InterfaceListRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.esnet.netbeam.v1.InterfaceListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.esnet.netbeam.v1.InterfaceListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.esnet.netbeam.v1.InterfaceListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.esnet.netbeam.v1.InterfaceListRequest}
 */
proto.esnet.netbeam.v1.InterfaceListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.esnet.netbeam.v1.InterfaceListRequest;
  return proto.esnet.netbeam.v1.InterfaceListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.esnet.netbeam.v1.InterfaceListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.esnet.netbeam.v1.InterfaceListRequest}
 */
proto.esnet.netbeam.v1.InterfaceListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.esnet.netbeam.v1.InterfaceListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.esnet.netbeam.v1.InterfaceListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.esnet.netbeam.v1.InterfaceListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.esnet.netbeam.v1.InterfaceTrafficListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.esnet.netbeam.v1.InterfaceTrafficListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.esnet.netbeam.v1.InterfaceTrafficListRequest.displayName = 'proto.esnet.netbeam.v1.InterfaceTrafficListRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.esnet.netbeam.v1.InterfaceTrafficListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.esnet.netbeam.v1.InterfaceTrafficListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.esnet.netbeam.v1.InterfaceTrafficListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceTrafficListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.esnet.netbeam.v1.InterfaceTrafficListRequest}
 */
proto.esnet.netbeam.v1.InterfaceTrafficListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.esnet.netbeam.v1.InterfaceTrafficListRequest;
  return proto.esnet.netbeam.v1.InterfaceTrafficListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.esnet.netbeam.v1.InterfaceTrafficListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.esnet.netbeam.v1.InterfaceTrafficListRequest}
 */
proto.esnet.netbeam.v1.InterfaceTrafficListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.esnet.netbeam.v1.InterfaceTrafficListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.esnet.netbeam.v1.InterfaceTrafficListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.esnet.netbeam.v1.InterfaceTrafficListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceTrafficListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.esnet.netbeam.v1.InterfaceUtilizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.esnet.netbeam.v1.InterfaceUtilizationRequest.displayName = 'proto.esnet.netbeam.v1.InterfaceUtilizationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.esnet.netbeam.v1.InterfaceUtilizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.esnet.netbeam.v1.InterfaceUtilizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    month: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_interface: jspb.Message.getFieldWithDefault(msg, 2, ""),
    device: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.esnet.netbeam.v1.InterfaceUtilizationRequest}
 */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.esnet.netbeam.v1.InterfaceUtilizationRequest;
  return proto.esnet.netbeam.v1.InterfaceUtilizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.esnet.netbeam.v1.InterfaceUtilizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.esnet.netbeam.v1.InterfaceUtilizationRequest}
 */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMonth(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterface(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.esnet.netbeam.v1.InterfaceUtilizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.esnet.netbeam.v1.InterfaceUtilizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMonth();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInterface();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string month = 1;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.prototype.getMonth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.prototype.setMonth = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string interface = 2;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.prototype.getInterface = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.prototype.setInterface = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string device = 3;
 * @return {string}
 */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.esnet.netbeam.v1.InterfaceUtilizationRequest.prototype.setDevice = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.esnet.netbeam.v1.Direction = {
  IN: 0,
  OUT: 1
};

goog.object.extend(exports, proto.esnet.netbeam.v1);
